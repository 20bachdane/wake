#basePath   job.kelp-urchin-barren

:: start
@trigger    JobStarted
@cutscene
{@drJules} This next Job is going to be a little different.
{@player} How is that?
{@drJules} First, you are going to help us study Site B, which is not doing very well.
{@drJules} Second, with this job you are going to learn how to build a model and perform simulations of what is likely going to happen in the future.
{@player} Predict the future?!? Sounds cool.
{@drJules} Agreed. Models and simulations are very powerful tools!

:: end
@trigger    JobCompleted
@cutscene
{@drJules}  Well that's a bit depressing.
{@player}   Yeah it is. Predicting the future is more fun when the future looks bright.
{@drJules}  Don't loose hope yet. I have one last job for you.


// @trigger 	JobTaskCompleted
// @where		taskId = "getProbeData"
// @once
// @cutscene
// {@kevin} Ohh wow. The kelp are almost all gone. They call this an "Urchin Barren" becasue the urchins have eaten everything.

:: ModelingSetup
@trigger	UniversalModelStarted
@once
@cutscene
{@kevin} This tool allows us to take everything we've learned and visualize it, so we can see the whole system at one. It's what we call a model of the system.
{@kevin} Start by adding everything you've learned about the kelp, urchins and otters.
{@kevin} You can do this by using the "Import Rule" button and selcting behaviors from your bestiary.
{@kevin} When you've added everything you know, hit the submit simulate button to turn our model into a simulator.

:: GetSync
@trigger	ModelGraphStarted
@once
@cutscene
{@kevin} Now we are simulating how all those behavors will play out using the model of the ecosystem you just constructed.
{@kevin} The faded lines show the historical population data we downloaded from the probe at Site B.
{@kevin} The regular lines show what your model is predicting.
{@kevin} Set the starting populations by dragging the sliders for each species to match the probe's recording from a few years back.
{@kevin} If the model syncs with how the populations changed until now, it's likely it can help us figure out what's going to happen next! If you can't get it to sync, you must be missing some detail in the model.


:: ModelSynced
@trigger	ModelSyncedImmediate
@once
@cutscene
{@kevin} Perfect! Since the model's output lines up with the actual past population data, we know we have created a useful model. 
{@kevin} Now let's see what it predicts will happen next. Hit the Predict button.

:: ModelingGraphComplete
@trigger	ModelCompleted
@once
@cutscene
{@kevin} Ok. We have our answer. It's not looking good. Let's go to the office and report back to Dr. Jules