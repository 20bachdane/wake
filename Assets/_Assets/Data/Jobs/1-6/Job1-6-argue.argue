# rootNodeId node.intro
# endNodeId node.end
# defaultInvalidNodeId node.invalid.default

:: node.invalid.default
Hmmm I'm not so sure that's right.

:: node.invalid.1
I don't think that makes sense here.

:: node.invalid.OtterKelp
@nextNodeId node.OtterHelpKelpContinue
I don't think that explains why Otters help the kelp.

:: node.invalid.Kelp
@nextNodeId node.OtterHelpKelpContinue
That is not why the otters help the kelp.

:: node.invalid.Otter
@nextNodeId node.OtterContinue
That is not the right answer.

:: node.invalid.DeadUrchin
@nextNodeId node.DeadUrchinContinue
I don't think this explains why urchins can't survive in this water.

:: node.DeadUrchinContinue
Why can urchins not survive in this water?



:: node.default
Hmmm

:: node.OtterHelpKelpContinue
@invalidNodeId node.invalid.Kelp
@responseIds SeaOtter.Eats.Urchin, Urchin.Eats.Kelp
Do you have any other evidence for how Otters help the kelp?

:: node.OtterContinue
@invalidNodeId node.invalid.Otter
@responseIds SeaOtter.Eats.Urchin, Urchin.Eats.Kelp
So what does that have to do with otters?

:: node.intro
@responseIds link.OtterHelpKelp, link.UrchinsCantSurvive
@showClaims
So what's going on?

:: node.OtterHelpKelpInquery
@invalidNodeId node.invalid.OtterKelp
@responseIds SeaOtter.Eats.Urchin, Urchin.Eats.Kelp
How so?

:: node.OtterEatUrchinInquery
@invalidNodeId node.invalid.Kelp
@responseIds Urchin.Eats.Kelp
So why does that help the kelp?

:: node.UrchinEatKelpInquery
@invalidNodeId node.invalid.Otter
@responseIds SeaOtter.Eats.Urchin
So what does that have to do with otters?

:: node.FakePath
Okay, that makes sense, not quite what I am looking for.


:: node.end
Got it! So more otters means less urchins and more kelp!


:: node.UrchinsCantSurviveInquery
@invalidNodeId node.invalid.DeadUrchin
@responseIds link.NoUrchins, link.DeadUrchin
Why not?

:: node.PredatorNode
@responseIds link.DeadUrchin
But it could have been a predator or other variable

:: node.BadFinish
@responseIds link.DeadUrchin
Ok then. Maybe try a new claim?