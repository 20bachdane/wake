#basePath   job.coral-lionfish-conspiracy

:: start
@trigger    JobStarted
@cutscene

{@guide}	{nameof @profCoral} sounds like they've got a real issue with the Lionfish. Let's help them out with this puzzle.
$if HasEntity(Lionfish), HasEntity(BlueheadWrasse), HasEntity(BlueTang), HasEntity(StaghornCoral)
	$if HasFact(Lionfish.Eats.BlueTang), HasFact(Lionfish.Eats.BlueheadWrasse)
		{@guide}	Looks like you already have everything needed, so we can return to the {h}research station{/h}.
	$else
		{@guide}	First we need to make sure we have all the pieces.
		{@guide}	Looks like you have all the species scanned, so we can go right to the {h}Observation Tank{/h}.
	$endif
$else
	{@guide}	First we need to make sure we have all the pieces.
	{@guide}	Go down to Site S and scan everything you can find, especially the Lionfish.
$endif


// SCANNING

:: helpEnterSite
@trigger	RequestPartnerHelp
@when		JobTaskTop(scanNew)
@cutscene
$if scene:name == "RS-2S"
	{@guide}	There are some key species you haven't found yet. Keep searching.
$else
	{@guide}	Go to Site S and scan as many species there as you can.
$endif

:: enterSite
@trigger    SceneStart
@when       scene:name == "RS-2S", JobTaskTop(scanNew)
@cutscene
{@guide}	No one is sure how the Lionfish interact with other species here, so you'd better scan everything you can find.

:: scansComplete
@trigger    JobTasksUpdated
@when       scene:name = "RS-2S", JobTaskTop(observeInteractions)
@cutscene
{@guide}	Okay, that should be enough to get an idea of how the Lionfish fits into the ecosystem. 
			Let's try to observe some interactions in the observation tank.

:: helpReturnExperiment
@trigger	RequestPartnerHelp
@when		JobTaskTop(observeInteractions), scene:name != "ExperimentV2"
@cutscene
{@guide}	Get to the {map-name}Experiment Room{/map-name} and see how the {nameof Lionfish} interacts with other species you've found.


// EXPERIMENTATION

:: helpBeginExperiment
@trigger	RequestPartnerHelp
@when		JobTaskTop(observeInteractions), scene:name == "ExperimentV2"
@cutscene
{@guide}	Use the Observation Tank to see how the Lionfish interacts with other species you found.

:: beginExperiment
@trigger	SceneStart
@when		scene:name == "ExperimentV2", JobTaskTop(observeInteractions)
@once
@cutscene
{@guide}	As I said, no one knows how the Lionfish fits into the ecosystem of the reef, so you'd better observe the Lionfish with as many other species as you can.
			// Especially with the coral.
			
:: experimentComplete
@trigger JobTasksUpdated
@when	JobTaskTop(arguePredator)
@cutscene
{@guide}	It doesn't seem like the Lionfish interact directly with the coral at all.
			We know enough to discuss this with {nameof profCoral}, now. I'm sure they'll be relieved to get some answers.

:: helpReportBack
@trigger	RequestPartnerHelp
@when		JobTaskTop(arguePredator)
@cutscene
{@guide}	Report back to {nameof @profCoral}.

// CATCH-ALL GUIDE TEXT

:: catchScanNew
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanNew)
@boostScore -5
@cutscene
{@guide}    Head to Site S and scan any new species.

:: catchObserveInteractions
@trigger    RequestPartnerHelp
@when 		JobTaskActive(observeInteractions)
@boostScore -5
@cutscene
{@guide}    Throw some Lionfish in the Observation Tank with other Site S organisms and see what happens.

:: catchArguePredator
@trigger    RequestPartnerHelp
@when 		JobTaskActive(arguePredator)
@boostScore -5
@cutscene
{@guide}    Report back to {nameof profCoral}.

// ARGUMENTATION

:: argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(lionfishConspiracyArgue)
@cutscene
$call ArgueLoad(lionfishConspiracyArgue)
{@profCoral} I know these things are vicious predators. What do they eat?!
$if ArgueSetClaim(lionfish-conspiracyClaim, jobs.coral-lionfish-conspiracy.argue.claimEvidence)
		$call ArgueFactSlot(Lionfish.Eats.BlueheadWrasse)
		$call ArgueFactSlot(Lionfish.Eats.BlueTang)
$endif
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
		$answer correct, .argue.correctFood
		$answer incorrect, .argue.incorrectFood
$choice .argue.giveUp; Let me get back to you

:: argue.giveUp
{@profCoral}	OK. Get back to me when you're ready.

:: argue.incorrectFood
{@profCoral}	No, no, this doesn't tell me everything Lionfish eat.
$call ArgueRejectIncorrect()
$call ArgueClearFacts()
$goto .argue.intro

:: argue.correctFood
{@profCoral}	I knew it. That doesn't explain what's happening with the coral though.
				But maybe it's connected.
$call ArgueComplete()
$call CompleteJob()