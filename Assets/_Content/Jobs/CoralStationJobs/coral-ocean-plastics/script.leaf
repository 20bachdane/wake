#basePath   job.coral-ocean-plastic

:: start
@trigger    JobStarted
@cutscene

$branch common.ringPhone

{@profCoral}	You scanned plastic!? In the reef? This won't do.
{@profCoral}  What will happen if the makes its way to the Reef Edge?
$if JobTaskTop(scanReefEdge)
    {@profCoral}  Head to the Reef Edge at Site V to construct a food web for the Loggerhead Turtle.
    {@player}       We're on our way!
$elseif JobTaskTop(whatTurtlesEat)
    {@profCoral}  Experiment in the Observation tank with the organisms you've scanned in the Reef Edge at Site V.
    {@player}       On it!
$else
    {@profCoral}  Take what you know about the Reef Edge at Site V interactions and construct a food web for the Loggerhead Turtle.
    {@player}       Copy that!
$endif


:: helpLeaveShip
@trigger    RequestPartnerHelp
@when 		scene:name == "Helm", !jobs:coral-ocean-plastic.task.speciesReefEdge, JobTaskTop(scanReefEdge)
@cutscene
{@player}   Where should I go from here?
{@guide}	Let's head to Site V and scan the things that the Loggerhead Turtle might eat.

:: navigation
@trigger    SceneStart
@when       scene:name == "Station2"
@once
@cutscene
{@guide}	Let's head to Site V and scan the things that the Loggerhead Turtle might eat.
					
:: helpGoToSiteV
@trigger    RequestPartnerHelp
@when 		scene:name == "Station2", !jobs:coral-ocean-plastic.task.speciesReefEdge
@cutscene
{@player}   I think I'm lost?
{@guide}	Site V should be just East of the ship.

:: diveSite
@trigger    SceneStart
@when       scene:name == "RS-2V", !jobs:coral-ocean-plastic.task.speciesReefEdge
@once
@cutscene
$set    	jobs:coral-turtle-population.seen.bottom = true
{@guide}   Let's look around for anything a Loggerhead Turtle might eat.

:: navigation.goBackUp
@trigger    JobTasksUpdated
@when       JobTaskCompleted(scanReefEdge)
@once
@cutscene
{@guide}   Seems like we've gotten everything we need from here. Let's head back up.

// CATCH-ALL GUIDE TEXT

:: catchScanReef
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanReef)
@boostScore -5
@cutscene
{@guide}    Scan the Organisms at Site V.

:: catchWhatTurtlesEat
@trigger    RequestPartnerHelp
@when 		JobTaskActive(whatTurtlesEat)
@boostScore -5
@cutscene
{@guide}    Using the Observation Tank, figure out what Turtles eat.

:: catchMakeModel
@trigger    RequestPartnerHelp
@when 		JobTaskActive(makeModel)
@boostScore -5
@cutscene
{@guide}    Head to the Modeling Lab to make a Visual Model.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@guide}    Return to the station to talk to {nameof profCoral}.

// ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(oceanPlasticArgue)
@cutscene
$call ArgueLoad(oceanPlasticArgue)
{@profCoral} What will be impacted if the plastic enters the Reef Edge?
$choice .argue.turtles; Only the turtles will be impacted.
$choice .argue.all; All species may be impacted.
//$choice .argue.queen; The conch will be impacted.
//$choice .argue.staghorn; The coral will be impacted.
$choice .argue.nan; Nothing should be impacted.
$choice .argue.giveUp; I'm not sure yet, Let me get back to you.
$choose branch

::argue.turtles
$if ArgueSetClaim(oceanPlasticClaim, jobs.coral-ocean-plastic.argue.claimLabel1)
    $call ArgueFactSlot(LoggerheadTurtle.Eats.PlasticBag)
$endif
{@profCoral}	Not the turtles! Do you have evidence for this claim?	
$goto .argue.chooseFacts

::argue.all
$if ArgueSetClaim(oceanPlasticClaim, jobs.coral-ocean-plastic.argue.claimLabel4)
    $call ArgueFactSlot(ReefEdge.Model.PlasticsVisual)
$endif
{@profCoral}	Well that doesn't sound good. What evidence do you have for that claim?	
$goto .argue.chooseFacts

::argue.queen
$if ArgueSetClaim(oceanPlasticClaim, jobs.coral-ocean-plastic.argue.claimLabel3)
    $call ArgueFactSlot(LoggerheadTurtle.Eats.PlasticBag)
$endif
{@profCoral}	Well that doesn't sound good. What evidence do you have for that claim?	
$goto .argue.chooseFactsDummy

::argue.nan
{@profCoral}	That can't be right, we know there's a change in the environment. 
                Why don't you double check your observations.	

::argue.staghorn
$if ArgueSetClaim(oceanPlasticClaim, jobs.coral-ocean-plastic.argue.claimLabel2)
		$call ArgueFactSlot(QueenConch.Light.Stressed)
$endif
{@profCoral}	Well that doesn't sound good. What evidence do you have for that claim?	
$goto .argue.chooseFactsDummy

::argue.chooseFacts
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
    $answer ReefEdge.Model.PlasticsVisual, .argue.done
    $answer LoggerheadTurtle.Eats.PlasticBag, .argue.done2
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you
$choose branch

::argue.chooseFactsDummy
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you
$choose branch

::argue.done
$call ArgueComplete()
{@profCoral}  So if the turtles eat the plastic, then the other species will get thrown out of balance?
                We need to get ahead of this plastic thing.
                For the turtles!
{@guide}   ...
{@profCoral}  ...and the other critters too!

$call CompleteJob()

::argue.done2
$call ArgueComplete()
{@profCoral}  Why would someone add litter to the ocean? We need to get ahead of this plastic thing.
                For the turtles!
$call CompleteJob()

::argue.unrelated
$call ArgueRejectIncorrect()
{@profCoral}  I'm not seeing a clear relationship between that species and the plastic.
                Can you head back and double check your observations?
$call ArgueCancelClaim()

:: argue.giveUp
{@profCoral} OK. Get back to me when you're ready.
$call ArgueCancelClaim()

::end