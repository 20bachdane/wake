#basePath   job.coral-eat-seaweed

:: start
@trigger    JobStarted
@cutscene

$set jobs:coral-clear-sarg.siteRScans = 0
{@player} I'm ready, Professor. We need to save that coral!
		  Did you figure out what to do about the Sargassum? Should we get out there and start scrubbing? 
{@profCoral} Slow down, Ollie. 
		    Sometimes, the best way to get rid of something is to add something else.
{@player}  I... don't get it.
{@profCoral} We need to add a new species to Site R. Something that eats Sargassum.
		     I need you to analyze the interactions between Sargassum and everything else you've found so far.
{@player}	<i>Everything</i> else?? But Professor, what if the Coral don't survive that long?
			 What if I can't find the right species??
{@profCoral} Slow and steady, Ollie. I have faith in you.
		     Go run some experiments, and report back when you're done. 

:: helpBackAtShip
@trigger    RequestPartnerHelp
@when 		scene:name == "Helm", !HasFact(Urchin.Eats.Sargassum.Stressed)
@cutscene
{@player} 	What should we do now, {nameof @guide}?
{@guide}	You need to head to {nameof Experimentation} and try to find a species that will help get rid of the Sargassum. 

:: startExperiment
@trigger    SceneStart
@when       scene:name == "ExperimentV2", !HasFact(Urchin.Eats.Sargassum.Stressed)
@once
@cutscene
{@player} Ugh. Are we doing the right thing, {nameof @guide}?
		 I mean, the coral is dying, and we're hiding in here, running experiments. 
{@guide}  According to {nameof @profCoral}'s notes, this is the best way to help the coral.
{@player} Right. Okay. Focus, O.
		  We need to find something that eats Sargassum.
{@guide} Affirmative. You will need to add Sargassum and another organism to your Observation tank.
		 Repeat the experiment until you find something useful.

::helpAtExperiment
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !HasFact(Urchin.Eats.Sargassum.Stressed)
@cutscene
{@player} 	Can you remind me what to do, {nameof @guide}?
{@guide}	Certainly, O.
		    Try putting different organisms in the tank with Sargassum, and see if anything eats it!
			Perhaps start with organisms that were not present at Site R. 


:: experimentEnd
@trigger    JobTasksUpdated
@when 		HasFact(Urchin.Eats.Sargassum.Stressed)
@once
@cutscene
{@player} Yes!! We did it, {nameof @guide}!
		  Hopefully we'll be in time to save the Coral.
{@guide}  Yes. I suggest a hasty return to the Serenity Meadows station! 

:: guideTowardUnstressed
@trigger    NewBehaviorObserved
@when 		!HasFact(Urchin.Eats.Sargassum.Stressed), factId == "Urchin.Eats.Sargassum"
@once
@cutscene
{@guide} Ah. The Urchins are eating the Sargassum!
{@player} Does that mean we got what we need??
{@guide} Not quite. Try the same thing again, only this time in water from the {nameof RS-2R}.

::helpAtExperimentUnstressed
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !HasFact("Urchin.Eats.Sargassum.Stressed"), HasFact("Urchin.Eats.Sargassum")
@cutscene
{@player} 	What do I need to do here, {nameof @guide}?
{@guide} 	You are almost finished, O!
			This time, put the Urchins and Sargassum in the tank with water from the {nameof RS-2R}.

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		HasFact(Urchin.Eats.Sargassum.Stressed)
@cutscene
{@player} 	What now, {nameof @guide}?
{@guide}	You need to return to Serenity Meadows and report your findings to {nameof @profCoral}!

// CATCH-ALL GUIDE TEXT

:: catchUrchinSarg
@trigger    RequestPartnerHelp
@when 		JobTaskActive(urchinSarg)
@boostScore -5
@cutscene
{@player} What should I do now, {nameof @guide}?
{@guide}    Use the Observation Tank to find an organism that eats {nameof Sargassum}.

:: catchUrchinSargArgue
@trigger    RequestPartnerHelp
@when 		JobTaskActive(urchinSargArgue)
@boostScore -5
@cutscene
{@player} Okay, {nameof @guide}. Are we done here? 
{@guide}  Affirmative, O! Head back to the research station to talk to {nameof @profCoral}!

// ARGUMENTATION

:: argue.setup
@trigger    TryArgumentation
@when   !ArgueIsComplete(coralClearSargArgue)
@cutscene
$call ArgueLoad(coralClearSargArgue)
$branch .argue.intro

:: argue.intro
{@profCoral} Let's see what you discovered, Ollie.
	         Is there an organism that can clear the Sargassum?
	$choice .argue.doesntEatSargasssum; Blue Tang
	$choice .argue.doesntEatSargasssum; Bluehead Wrasse
	$choice .argue.eatsSargassum; Urchin
	$choice .argue.nothingEatsSargassum; Nothing eats the Sargassum.
$choose branch

:: argue.doesntEatSargasssum
{@profCoral} Hmmm. Are you sure, Ollie? That doesn't seem right. 
$goto .argue.intro

:: argue.nothingEatsSargassum
{@profCoral}	That seems unlikely. If you didn't find anything, you might need to run more experiments. 

:: argue.eatsSargassum
{@profCoral} Well. That sounds promising! Did you observe the Urchins eating Sargassum? 
$goto .argue.evidence

:: argue.evidence
$if ArgueSetClaim(coralClearSargArgueClaim, jobs.eat-seaweed.argue.claimLabel)
			$call ArgueFactSlot(Urchin.Eats.Sargassum.Stressed)
$endif
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
		$answer Urchin.Eats.Sargassum.Stressed, .argue.urchin
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you

::argue.giveUp
{@profCoral}   Of course. Take your time, Ollie. 

:: argue.urchin
$call ArgueComplete()
{@profCoral} Ah. Wonderful job, Ollie.
		     If we simply removed the Sargassum ourselves, more would be swept in.
			 The Urchins could be the long-term solution we're looking for. 
{@player} Yes!! Now we just need to get some Urchins in there, and adios, Sargassum!
{@profCoral} Hmmm. Though I wonder how Urchins might affect the rest of the ecosystem. 
			 I've heard they can destroy Kelp Forests...
			 Well, at least we've got a place to start. Thank you for your help, Ollie. 
$call CompleteJob()

:: argue.unrelated
$if ArgueIsFactSubmitted(Urchin.Eats.Sargassum)
	$branch .argue.urchin
$else
	{@profCoral} That isn't helpful here, Ollie. 
	{@profCoral} We need evidence that Urchins eat Sargasum. 
	$call ArgueRejectIncorrect()
	$goto .argue.evidence
$endif

:: end