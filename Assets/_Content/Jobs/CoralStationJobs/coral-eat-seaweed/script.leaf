#basePath   job.coral-eat-seaweed

:: start
@trigger    JobStarted
@cutscene
$branch common.ringPhone

$set jobs:coral-clear-sarg.siteRScans = 0
{@profCoral}	This time I need you to analyze the relations between Sargassum and everything else you've found so far.
{@profCoral}	Hopefully we can find something that can deal with that Sargassum!
{@profCoral}	It's a bit of a grind, but you will need to run experiments until you've figured out a solution. 

:: helpBackAtShip
@trigger    RequestPartnerHelp
@when 		scene:name == "Helm", !HasFact(Urchin.Eats.Sargassum.Stressed)
@cutscene
{@player} 	Where should I be going again?
{@guide}	Let's head over to the {nameof Experimentation} and try to find something that can deal with the Sargassum. 

:: startExperiment
@trigger    SceneStart
@when       scene:name == "ExperimentV2", !HasFact(Urchin.Eats.Sargassum.Stressed)
@once
@cutscene
{@player}   How should we set up the experiment this time?
{@guide}  	We want to find out if there's anything that can help us clear the Sargassum.
{@guide} 	Maybe try observing a tank with Sargassum and another organism until you find something interesting?

::helpAtExperiment
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !HasFact(Urchin.Eats.Sargassum.Stressed)
@cutscene
{@player} 	How should I do this again?
{@guide}	We want to figure out if there's anything that eats the Sargassum.
{@guide}	Try putting different organisms in a tank with Sargassum and see if there's anything that eats it!
{@guide}	Maybe start with organisms that weren't at Site R?


:: experimentEnd
@trigger    JobTasksUpdated
@when 		HasFact(Urchin.Eats.Sargassum.Stressed)
@once
@cutscene
{@guide}	Looks like we found our solution! Let's report this back to {nameof @profCoral}.

:: guideTowardUnstressed
@trigger    NewBehaviorObserved
@when 		!HasFact(Urchin.Eats.Sargassum.Stressed), factId == "Urchin.Eats.Sargassum"
@once
@cutscene
{@guide}	Look at that, the Urchins are eating the Sargassum!
			Let's do that one more time, only this time in the {h}Sargassum Covered Reef{/h}.

::helpAtExperimentUnstressed
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !HasFact("Urchin.Eats.Sargassum.Stressed"), HasFact("Urchin.Eats.Sargassum")
@cutscene
{@player} 	What do we still need to do here?
{@guide}	We are so close!
			This time put the Urchins in with the Sargassum in water from the {h}Sargassum Covered Reef{/h}.

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		HasFact(Urchin.Eats.Sargassum.Stressed)
@cutscene
{@player} 	What should we be doing now?
{@guide}	Now that we've finished the experiment, let's report back to the {map-name}Office{/map-name}.
$if global:nav.shipRoom == "office"
	{@guide}	Just like the previous jobs, you can report your findings using the {h}Computer{/h} in front of you.
$endif

// CATCH-ALL GUIDE TEXT

:: catchUrchinSarg
@trigger    RequestPartnerHelp
@when 		JobTaskActive(urchinSarg)
@boostScore -5
@cutscene
{@guide}    Use the Observation Tank to find an organism that eats {nameof Sargassum}.

:: catchUrchinSargArgue
@trigger    RequestPartnerHelp
@when 		JobTaskActive(urchinSargArgue)
@boostScore -5
@cutscene
{@guide}    Head back to the Office to talk to {nameof @profCoral}.

// ARGUMENTATION

:: argue.setup
@trigger    TryArgumentation
@when   !ArgueIsComplete(coralClearSargArgue)
@cutscene
$call ArgueLoad(coralClearSargArgue)
$branch .argue.intro

:: argue.intro
{@profCoral} Is there an organism that can clear the Sargassum?
	$choice .argue.doesntEatSargasssum; Blue Tang
	$choice .argue.doesntEatSargasssum; Bluehead Wrasse
	$choice .argue.eatsSargassum; Urchin
	$choice .argue.nothingEatsSargassum; Nothing eats the Sargassum.
$choose branch

:: argue.doesntEatSargasssum
{@profCoral} Hmm. That doesn't eat Sargassum, does it?
$goto .argue.intro

:: argue.nothingEatsSargassum
{@profCoral}	Hmm. That seems unlikely.
				Perhaps running more experiments will reveal something?

:: argue.eatsSargassum
{@profCoral} Urchins?! No way! Did you see this happen?!
$goto .argue.evidence

:: argue.evidence
$if ArgueSetClaim(coralClearSargArgueClaim, jobs.eat-seaweed.argue.claimLabel)
			$call ArgueFactSlot(Urchin.Eats.Sargassum.Stressed)
$endif
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
		$answer Urchin.Eats.Sargassum.Stressed, .argue.urchin
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you

::argue.giveUp
{@profCoral}    OK. Get back to me when you're ready.

:: argue.urchin
$call ArgueComplete()
{@profCoral} Perfect! I wonder if they can actually live here... I've heard they destroy the Kelp Forests...
$call CompleteJob()

:: argue.unrelated
$if ArgueIsFactSubmitted(Urchin.Eats.Sargassum)
	$branch .argue.urchin
$else
	{@profCoral} How does that help the Sargassum situation?
	{@profCoral} Are you sure you saw Urchins eat Sargassum?
	$call ArgueRejectIncorrect()
	$goto .argue.evidence
$endif

:: end