# basePath job.test-model

// INTRO

:: start
@trigger    JobStarted
@cutscene

// write an intro to your job
{@profBayou}   You're testing the model.

// ARGUMENTATION

// ::argue.intro
// @trigger    TryArgumentation
// @when   !ArgueIsComplete(siteOIntervene)
// @cutscene
// $call ArgueLoad(siteOIntervene) 
// {@profBayou} What should we do about the ERC Industries Rig in the reef?
// $choice .argue.removeRig; We should remove the rig
// $choice .argue.leaveRig; We should leave the rig
// $choose branch

// :: argue.removeRig
// $if ArgueSetClaim(Claim, jobs.bayou-reef-decision.argue.claimLabel1)
//     $call ArgueFactSlot(O_OilRig.turtleDangerNoReef.Model.Intervene) 
// $endif
// {@profBayou} What makes you say that?
// $branch argue.showClaim

// :: argue.leaveRig
// $if ArgueSetClaim(Claim, jobs.bayou-reef-decision.argue.claimLabel2) 
//     $call ArgueFactSlot(O_OilRig.turtleDangerNoReef.Model.Intervene) 
// $endif
// {@profBayou} What makes you say that?
// $branch argue.showClaim

// :: argue.showClaim
// $call ArgueDisplayClaim()
// $choice #argueFactSet; Present facts from AQOS
//     $answer correct, .argue.complete 
//     $answer incorrect, .argue.unrelated
// $choice .argue.giveUp; Let me get back to you.
// $choose branch

// :: argue.unrelated
// $call ArgueRejectIncorrect()
// {@profBayou} Ok, that's interesting, but it's not answering my question.
// $call ArgueClearFacts()
// $branch .argue.showClaim

// :: argue.giveUp
// {@profBayou} OK. Get back to me when you're ready.
// $call ArgueClearFacts()
// $call ArgueCancelClaim()

// // END

// :: argue.complete
// $call ArgueComplete()
// {@profBayou}   Even without the reef, it seems like the populations would be similar. 
//                 It really shouldn't matter either way.

// $call CompleteJob()