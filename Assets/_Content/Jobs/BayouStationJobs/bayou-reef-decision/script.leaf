# basePath job.reef-decision

// INTRO

:: start
@trigger    JobStarted
@cutscene

// write an intro to your job
{@profBayou}   Okay, Ollie. It's time for us to make a decision about that Oil Rig Reef.
{@bayouSci}    About flippin' time! 
{@player}      Yikes... really? 
               I mean, I thought YOU would handle the actual decision-making...
{@profBayou}   You've proven yourself. I'd like your input.
               If the rig goes, all the coral out there--and all the species that depend on coral--go with it.
               If the rig stays, it could have unforseen consequences on the ecosystem.
{@player}      Eek. Professor, that's a lot of responsibility.
               My mom mostly has me confirm her findings and gather data and things like that... 
{@profBayou}   No soy tu madre, Ms. Ramirez. Please stop deflecting. 
               I need you to predict what will happen to turtle population if we remove the reef.
               Then report back and tell me your recommendation.
{@player}      Okay. Got it. 

// CATCH-ALL GUIDE TEXT

:: catchInterventionDecision
@trigger    RequestPartnerHelp
@when 		JobTaskActive(interventionDecision)
@boostScore -5
@cutscene
{@player}  Okay, {nameof @guide}. What now? 
{@guide}   You need to create an Intervention Model using facts about the artificial reef.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@player}   What should I do now, {nameof @guide}?
{@guide}    Report back to {nameof profBayou}!

// ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(siteOIntervene)
@cutscene
$call ArgueLoad(siteOIntervene) 
{@profBayou} Okay then, Ollie.
             It's time to hear your recommendation. 
             What should we do about the Oil Rig Reef?
$choice .argue.removeRig; We should remove the rig.
$choice .argue.leaveRig; We should leave the rig.
$choose branch

:: argue.removeRig
$if ArgueSetClaim(Claim, jobs.bayou-reef-decision.argue.claimLabel1)
    $call ArgueFactSlot(O_OilRig.turtleDangerNoReef.Model.Intervene) 
$endif
{@profBayou} What makes you say that?
$branch argue.showClaim

:: argue.leaveRig
$if ArgueSetClaim(Claim, jobs.bayou-reef-decision.argue.claimLabel2) 
    $call ArgueFactSlot(O_OilRig.turtleDangerNoReef.Model.Intervene) 
$endif
{@profBayou} What makes you say that?
$branch argue.showClaim

:: argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.complete 
    $answer incorrect, .argue.unrelated
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.unrelated
$call ArgueRejectIncorrect()
{@profBayou} That's not helpful here, Ms. Ramirez. 
$call ArgueClearFacts()
$branch .argue.showClaim

:: argue.giveUp
{@profBayou} Okay, then. Take a little more time. But not too much. A lot of people are waiting on our decision. 
$call ArgueClearFacts()
$call ArgueCancelClaim()

// END

:: argue.complete
$call ArgueComplete()
{@profBayou}  Hmm. This is fascinating.
              Whatever choice we make, the turtle populations will remain similar. 
              I think we can go with your recommendation, Ollie.
{@player}     Wait... ¿¿en serio?? 
              But... Professor, what if I made the wrong choice?
{@profBayou}  This isn't about right and wrong, Ollie.
              It's about doing your best with the data available to you. 
              I wasn't sure you'd have the courage to make a recommendation. I have to admit, I'm impressed. 
{@bayouSci}   Well, well. The professor saying something nice? 
              Maybe she is human after all. 
$call CompleteJob()