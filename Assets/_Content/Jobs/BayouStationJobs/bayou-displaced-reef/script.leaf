# basePath job.bayou-displaced-reef

:: start
@trigger    JobStarted
@cutscene

{@profBayou}  Thank you, Ollie,  
              We need to assess whether the oil rig reef can stay without harming the ecosystem, or if it needs to be removed.
             Can you take your sub out and get an estimated count of all the local species? 
{@player}    Sure, Professor. Happy to help. 

:: diveSite
@trigger    SceneStart
@when       scene:name == "RS-3O"
@once
@cutscene

{@player} This is so wild. A whole new ecosystem growing on an old oil rig!
{@player} That Silias guy doesn't seem happy about it, though. 
{@guide} Processing "Silias"..... 
{@guide} Records found. Esteemed marine scientist. The youngest in a long line of shrimpers. 
{@player} Shrimpers?
{@guide} Humans who make a living fishing for shrimp. 
{@player} Hmm. I haven't seen any shrimp around here.  
{@player} No wonder the guy's grumpy. 

:: makeAModel
@trigger    SceneStart
@when       JobTaskActive(makeModel), scene:name == "Ship"
@once
@cutscene
{@guide} 

// CATCH-ALL GUIDE TEXT

:: catchVisitSiteO
@trigger    RequestPartnerHelp
@when 		JobTaskActive(visitSiteO)
@boostScore -5
@cutscene
{@guide}    Head to {h}site O{/h}. It's right outside!

:: catchGetScans
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getScans)
@boostScore -5
@cutscene
{@player}  What should I do now, {nameof @guide}?
{@guide}   You must scan and count all of the species at {h}Site O{/h}.

:: catchGetCounts
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getCounts)
@boostScore -5
@cutscene
{@player}   Okay, {nameof @guide}. What next? 
{@guide}    You need to count all of the species at {h}Site O{/h}.

:: catchMakeModel
@trigger    RequestPartnerHelp
@when       JobTaskActive(makeModel)
@boostScore -5
@cutscene
$if IsPlayerOnShip()
    {@player}  Hey {nameof @guide}... what's our next task again? 
    {@guide}    You need to head to the {map-name}Modeling Lab{/map-name} to construct a {nameof VisualModel}.
$else
    {@player} Can I have a little help, {nameof @guide}?
    {@guide}    Certainly, O. You need to head to the surface and board your ship. 
$endif

:: catchReportback
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@player} So... what now, {@nameof @guide}?
{@guide}  You've completed your task, O. It's time to report back to {nameof profBayou}!

// ARGUMENTATION
::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(siteOAnalysis)
@cutscene
$call ArgueLoad(siteOAnalysis)
$if ArgueSetClaim(Claim, jobs.bayou-displaced-reef.argue.claimLabel)
    $call ArgueFactSlot(O_OilRig.displacedReef.Model.Viz)
$endif

{@profBayou} Okay, Ollie. Let's see what data you uncovered.
             Did you construct a {h}visual model{/h} for the species at {nameof O_OilRig}?
$branch .argue.showClaim

:: argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
		$answer correct, .argue.correctPopulation
		$answer incorrect, .argue.incorrectPopulation
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.incorrectPopulation
$call ArgueRejectIncorrect()
{@profBayou} That's not the answer I'm looking for, Ms. Ramirez.  
$goto .argue.showClaim
$call ArgueCancelClaim()

:: argue.giveUp
{@profBayou} Hmmm. Okay, then. Do hurry back. 

::end

:: argue.correctPopulation
$call ArgueComplete()
{@profBayou} Hmmm. Nice work, Ollie. 
{@profBayou} I need to consider this and plan our next move. 
{@bayouSci} Aw, you gotta be kiddin' me, Harper. 
            The turtles were here first. Then these new critters moved in and started takin' over.
            If you ask me, we need that reef outta here yesterday! Right, kid?
{@player}   Oh... um...
            I'm not really used to making these kind of decisions...
{@profBayou} It's too early to decide anything, Silias. We need more data. 
{@profBayou} Ollie, let me know if you'd like to help out again. I'm sure I'll have more work for you soon. 
$call CompleteJob()