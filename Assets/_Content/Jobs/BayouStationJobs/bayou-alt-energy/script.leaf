:: basePath job.alt-energy

// INTRO

:: start
@trigger    JobStarted
@cutscene
{@kevin} A visual model will show us how energy flows through the ecosystem. But first we'll need to do some experiments to see how these organisms relate to one another.

:: modelCompleted
@trigger JobTaskCompleted
@when    scene:name == "RS-3N", JobTaskActive(methaneScan)
@once
@cutscene
{@kevin} Hmm. It seems as though this ecosystem might be powered by more than one source of energy. Talk to {nameof profHarper} and maybe you can figure it out.

// CATCH-ALL GUIDE TEXT
:: catchGoObservation
@trigger    RequestPartnerHelp
@when 		JobTaskActive(wormEat)
@boostScore -5
@cutscene
{@kevin}     Use the observation tank to determine the relationships between organisms from Site N.

:: catchAtSiteNScan
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getModel)
@boostScore -5
@cutscene
{@kevin}    I think it's time to lay out all these facts as a visual model.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		
@boostScore -10
@cutscene
{@kevin}    Go explain to {nameof profHarper} what the sources of energy are for this ecosystem.


// ARGUMENTATION
::  argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(bayouAltEnergy)
@cutscene
$goto .argue.firstQuestion

::  argue.firstQuestion
{@profHarper} What caused the communication tower to collapse?
$if !ArgueIsComplete(bayouBoomArgueFishCriminals)
    $choice .argue.methaneHere; There's methane here.
    $choice .argue.fishersFault; Fishers blew it up.
    $choice .argue.giveUp; Let me get back to you.
    $choose branch
$else
    $choice .argue.methaneHere; There's methane here.
    $choice .argue.giveUp; Let me get back to you.
    $choose branch
$endif

:: argue.methaneHere
$call ArgueLoad(bayouBoomArgueMethane)
{@profHarper} Really? What methane did you find at {h}Site N{/h}?
$goto .argue.chooseFacts

:: argue.chooseFacts
$if ArgueSetClaim(Claim, jobs.bayou-boom-cause.argue.claimLabel1) 
    $call ArgueFactSlot(N_ThermalVent.Population.Methane) 
$endif
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
    $answer N_ThermalVent.Population.Methane, .argue.done
    $answer N_ThermalVent.Population.Methanogen, .argue.done
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.fishersFault
$call ArgueLoad(bayouBoomArgueFishCriminals)
$if ArgueSetClaim(Claim, jobs.bayou-boom-cause.argue.claimLabel2) 
    $call ArgueFactSlot(SeaOtter.Eats.Urchin) 
$endif
$call ArgueDisplayClaim()
{@profHarper} What evidence do you have of foul play?
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.unrelatedFishers
    $answer *, .argue.unrelatedFishers
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.unrelatedFishers
{@profHarper} I don't think this actually indicates human involvement.
$call ArgueRejectIncorrect()
$call ArgueComplete()
$goto .argue.firstQuestion

:: argue.unrelated
{@profHarper}   That doesn't look like a type of Methane to me...
$call ArgueRejectIncorrect()
$goto .argue.chooseFacts

:: argue.giveUp
{@profHarper} OK. Get back to me when you're ready.
$call ArgueCancelClaim()
$call ArgueUnload()

// END
:: argue.done
$call ArgueLoad(bayouBoomArgue)
$call ArgueComplete()
{@profHarper}   Oh, I hear Methane is very explosive. It must have heated enough to ignite and explode. Good work!
$call CompleteJob()