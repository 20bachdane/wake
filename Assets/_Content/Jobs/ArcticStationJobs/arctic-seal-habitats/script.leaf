# basePath job.arctic-seal-habbits

// INTRO

:: start
@trigger    JobStarted
@cutscene
{@profArctic} Oh, this is great, Ollie! I've been curious about the Ribbon Seals for so long.
              Though I can't promise you'll see one. They're a pretty rare find. 
{@arcticSci}  It's true. Your sister called them loners... like a lot of us here. 
              I've never seen one, but Juno here has stumbled upon them once or twice--
{@player}     Wait. My sister told you about them?? 
{@arcticSci}  Of course. Legend says she was the first to spot a Ribbon Seal around here.
{@player}   Wow, that's amazing!
            How can I help?
{@profArctic} To start with, you'll need to venture below the ice and track down a Ribbon Seal. 
              You may need to use your {nameof Icebreaker} to reach all parts of the {m}Ephemeral Impasse{/m}.

// DEFINING DIALOGUE

:: wrongPlace
@trigger    ScannedNewObject
@when       scanId == "bestiary.ribbonSeal", scene:name == "RS-4Z"
@cutscene
{@guide}    This is definitely the kind of seal we're looking for, but there don't seem to be many here.
            We need to keep looking for their main habitat.

:: rightPlace
@trigger    JobTaskCompleted
@when       taskId == "findHabitat", scene:name == "RS-4Y"
@cutscene
{@guide}    I'm detecting many seals in the area, which indicates that this is the seals' main habitat.
$if !HasEntity(RibbonSeal)
    {@guide}    Make sure to scan a seal while you're here!
$endif

:: microLeft
@trigger    JobTasksUpdated
@when       JobTaskTop("findMicro"), scene:name == "RS-4Y"
@cutscene
{@guide}    {nameof @profArctic} will also want to know about microscopic creatures here, so be sure to scan those too.

:: microCount
@trigger    JobTasksUpdated
@when       JobTaskTop("countMicro"), scene:name == "RS-4Y"
@cutscene
{@guide}    I think that's all of them. Next let's count all the populations, just to be thorough.

:: reportBack
@trigger    JobTasksUpdated
@when       JobTaskTop(report)
@cutscene
{@guide}    That's everything! Let's report back to {nameof @profArctic}!


// GUIDE TEXT

:: helpStart
@trigger    RequestPartnerHelp
@when       !JobTaskCompleted(findRibbon), !JobTaskCompleted(findHabitat)
@cutscene
{@guide}    We should check the ice crevice for {pluralnameof RibbonSeal}.

:: helpWrongPlace
@trigger    RequestPartnerHelp
@when       JobTaskCompleted(findRibbon), !JobTaskCompleted(findHabitat)
@cutscene
{@guide}    We saw a seal in {nameof RS-4Z}, but that was an outlier. We need to find their home base.
            Keep looking in different sites.

:: helpMicro
@trigger    RequestPartnerHelp
@when       JobTaskTop(findMicro)
@cutscene
{@guide}    Look around for microscopic critters in {nameof RS-4Y}.

:: helpCount
@trigger    RequestPartnerHelp
@when       JobTaskTop(countMicro)
@cutscene
{@guide}    Count all the species we found.

:: helpReportBack
@trigger    RequestPartnerHelp
@when       JobTaskTop(report)
@cutscene
{@guide}    We have everything we need. Let's talk to {nameof @profArctic}.


// CATCH-ALL GUIDE TEXT

:: catchFindHabitat
@trigger    RequestPartnerHelp
@when 		JobTaskActive(findHabitat)
@boostScore -5
@cutscene
{@guide}    Head to the {m}Ephemeral Impasse{/m} and find where {pluralnameof RibbonSeal} live.

:: catchFindRibbon
@trigger    RequestPartnerHelp
@when 		JobTaskActive(findRibbon)
@boostScore -5
@cutscene
{@guide}    Scan a {nameof RibbonSeal} where it lives.

:: catchCountSeal
@trigger    RequestPartnerHelp
@when 		JobTaskActive(countSeal)
@boostScore -5
@cutscene
{@guide}    Count the {nameof RibbonSeal} population at {nameof RS-4Y}.

:: catchFindMicro
@trigger    RequestPartnerHelp
@when 		JobTaskActive(findMicro)
@boostScore -5
@cutscene
{@guide}    Look around for microscopic species in {nameof RS-4Y} using your {nameof Microscope}.

:: catchCountMicro
@trigger    RequestPartnerHelp
@when 		JobTaskActive(countMicro)
@boostScore -5
@cutscene
{@guide}   Count the population of the microscopic species in {nameof RS-4Y} using your {nameof Microscope}.

:: catchReport
@trigger    RequestPartnerHelp
@when 		JobTaskActive(report)
@boostScore -5
@cutscene
{@player}   What now, {nameof @guide}?
{@guide}    You need to return to the station and talk to {nameof @profArctic}!


// ARGUMENTATION
::argue.intro
@trigger    TryArgumentation
@when       !ArgueIsComplete(SealHabitatsArgueSpecies)
@cutscene
$if ArgueIsComplete(SealHabitatsArgueSite)
    {@profArctic} We've already talked about the seal habitat conditions at {nameof RS-4Y}.
    $branch .argue.beforeSpeciesClaim
$else
    $call ArgueLoad(SealHabitatsArgueSite)
    $if ArgueSetClaim(Claim, jobs.arctic-seal-habbits.argue.claimLabelSite) 
        $call ArgueFactSlot(Y_IceCrevice.Light)
        $call ArgueFactSlot(Y_IceCrevice.PH)
        $call ArgueFactSlot(Y_IceCrevice.Temperature)
    $endif
    {@profArctic} The seals are pretty cool, right?
    $branch .argue.showClaimSite
$endif

// Site Argument

:: argue.showClaimSite
{@profArctic} What did you learn about the {h}light{/h}, {h}pH{/h}, and {h}temperature{/h} conditions in the {pluralnameof RibbonSeal}' habitat?
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.completeSite
    $answer *, .argue.unrelatedSite
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.completeSite
$call ArgueComplete()
$branch .argue.beforeSpeciesClaim

:: argue.unrelatedSite
$call ArgueRejectIncorrect()
{@profArctic} Hmm. That's interesting, but not really helpful here. 
$goto .argue.showClaimSite

// Species Argument

:: argue.beforeSpeciesClaim
{@profArctic} I can see why seals might like to cozy up in there.
$call ArgueLoad(SealHabitatsArgueSpecies)
$if ArgueSetClaim(Claim, jobs.arctic-seal-habbits.argue.claimLabelSpecies) 
    $call ArgueFactSlot(Y_IceCrevice.Population.GlacialAmphipod)
    $call ArgueFactSlot(Y_IceCrevice.Population.ArcticCopepod)
    $call ArgueFactSlot(Y_IceCrevice.Population.IceAlgae)
    $call ArgueFactSlot(Y_IceCrevice.Population.Clione)
$endif
$branch .argue.showClaimSpecies

:: argue.showClaimSpecies
{@profArctic} What about microscopic species? Did you find any?
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.completeSpecies
    $answer *, .argue.unrelatedSpecies
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.unrelatedSpecies
$call ArgueRejectIncorrect()
{@profArctic} Hmm. That's interesting, but not really helpful here. 
$goto .argue.showClaimSpecies

// Both

:: argue.giveUp
{@profArctic} No problem, Ollie. Just let me know when you're ready. 
$call ArgueCancelClaim()

// END
:: argue.completeSpecies
$call ArgueComplete()
{@profArctic} Wow, so many microorganisms! Nice job, Ollie.
              And I can't believe you saw a Ribbon Seal! I've been here 6 years and I've seen one maybe twice. 
              Gorgeous down there, isn't it? 
{@player}     Yeah. A little eerie, too. 
{@profArctic} Really? I find it comforting. All that ice and quiet. 
              But if ice crevices aren't your thing, no biggie. I'm sure I can find someone else for the next job--
$call GiveJournalEntry("N27_RibbonSeals", Silent)
{@player}     Oh, there's another job down there?? What is it? When do I leave? 
{@arcticSci}  Well, now you really sound like your sister. 
{@profArctic} It's all yours if you want it, Ollie. Just check the Job Board when you're ready. 

$call CompleteJob()