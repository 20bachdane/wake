:: basePath job.arctic-cause-of-death

// INTRO

:: start
@trigger    JobStarted
@cutscene

{@kevin}    We should check out both of Prof. Whalen's theories, one by one, to see which is most plausible.
            Whether it was the water conditions or a lack of food, we'll need some more information.

// ARGUMENTATION

::helpScanProbE
@trigger    RequestPartnerHelp
@when   scene:name == "RS-4W", JobTaskTop(getEnviornmentData)
@cutscene
{@kevin} If the water conditions proved deadly for Linda, we'd better scan the water chemistry probe for more information.

::helpScanProbP
@trigger    RequestPartnerHelp
@when   scene:name == "RS-4W", JobTaskTop(getPopulationData)
@cutscene
{@kevin}    If Linda died of starvation, we'd better see if there was a decline in a food population that is just bouncing back.
            I'm not sure what whales eat, so we might just have to count everything.

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(causeDeath)
@cutscene
$call ArgueLoad(causeDeath)
{@profWhalen} Which hypothesis seems most likely?
    $choice .argue.foodClaim; There was a problem with her food supply
    $choice .argue.stressClaim; Something in the enviornment harmed her
$choose branch

:: argue.foodClaim
{@profWhalen}  What evidence do you have about the whale food supply? 
$call ArgueSetClaim(Claim, jobs.arctic-cause-of-death.argue.claimLabel1) 
	$call ArgueFactSlot(Urchin.Eats.BullKelp) 
$goto .argue.showClaim

:: argue.stressClaim
{@profWhalen}   Really? How does the environment compare to the stressed ranges I gave you?
$call ArgueSetClaim(Claim, jobs.arctic-cause-of-death.argue.claimLabel2) 
	$call ArgueFactSlot(Urchin.Light.Stressed) 
	$call ArgueFactSlot(W_WhaleFall.Light) 
$goto .argue.showClaim2

::argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.howKnow 
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you.
$choose branch

::argue.showClaim2
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.transition
    $answer *, .argue.unrelated2
$choice .argue.giveUp; Let me get back to you.
$choose branch

::argue.showClaim3
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.complete
    $answer *, .argue.unrelated3
$choice .argue.giveUp; Let me get back to you.
$choose branch

::argue.howKnow
$call ArgueCancelClaim()
$call ArgueUnload()
$call ArgueLoad(PopulationHistory)
{@profWhalen}   How do you know that both populations were low?
$call ArgueSetClaim(Claim, jobs.arctic-cause-of-death.argue.claimLabel1) 
    $call ArgueFactSlot(UrchinBarren.PopulationHistory.Urchin) 
    $call ArgueFactSlot(UrchinBarren.PopulationHistory.GiantKelp) 
$goto .argue.showClaim3

::argue.transition
$call ArgueCancelClaim()
$call ArgueUnload()
$call ArgueLoad(ToFood)
{@profWhalen}   These seem compatible. It must have been the food supply.
$goto .argue.foodClaim

:: argue.unrelated
$call ArgueRejectIncorrect()
{@profWhalen} Ok, that's interesting, but it's not answering my question.
$goto .argue.showClaim

:: argue.unrelated2
$call ArgueRejectIncorrect()
{@profWhalen} Ok, that's interesting, but it's not answering my question.
$goto .argue.showClaim2

:: argue.unrelated3
$call ArgueRejectIncorrect()
{@profWhalen} Ok, that's interesting, but it's not answering my question.
$goto .argue.showClaim3

:: argue.giveUp
{@kevin} OK. Get back to me when you're ready.
$call ArgueCancelClaim()
$call ArgueUnload()

// END

:: argue.complete
$call ArgueComplete()
{@profWhalen}   Ugh, whales sometimes get lured in by ice algae, but it becomes less available as summer comes. 
                I bet she got stuck when the ice came in and couldn't get back to her pod.

$call CompleteJob()