# basePath job.arctic-cause-of-death

// INTRO

:: start
@trigger    JobStarted
@cutscene
{@arcticSci} Ah! Looking to do more detective work?
{@player}    I guess so. I've been wondering about what could've happened to Linda.
             How did she die? What happened to her?
{@arcticSci} I've been wondering the same, Ollie. 
            I have two theories: poor water conditions, or a lack of food. 
             You'll need to check into each theory and decide which is most plausible.
$set jobs:arctic-cause-of-death.grantedEat = false
$set jobs:arctic-cause-of-death.grantedStress = false
$if JobTaskCompleted(getHistPopulationData), !jobs:arctic-cause-of-death.grantedEats
    {@arcticSci}   We already know that Bowhead Whales eat both diatoms and ice algae.
                   This data should be useful to you here. 
    $call GiveFact(BowheadWhale.Eats.Diatoms)
    $call GiveFact(BowheadWhale.Eats.IceAlgae)
    $set jobs:arctic-cause-of-death.grantedEat = true
$endif
$if JobTaskCompleted(getEnvironmentData), !jobs:arctic-cause-of-death.grantedStress
    {@arcticSci}   In my work, I've already obtained the water conditions that cause stress to Bowhead Whales. 
                    You'll be able to compare this to the conditions at {h}Site W{/h}.
    $call GiveFact(BowheadWhale.Light.Stressed)
    $call GiveFact(BowheadWhale.PH.Stressed)
    $call GiveFact(BowheadWhale.Temperature.Stressed)
    $set jobs:arctic-cause-of-death.grantedStress = true
$endif

:: switchToJob
@trigger    JobSwitched
@cutscene
$if JobTaskCompleted(getHistPopulationData), !jobs:arctic-cause-of-death.grantedEats
    {@arcticSci}   Glad to see you returning to this job, Ollie!
    {@player}      Of course. We need to find out what happened to Linda.
                    Though I have no idea what these whales eat, so I'm not sure how helpful I'll be.
    {@arcticSci}    Oh dear. I'm sorry, Ollie. I meant to tell you last time!
                    In the course of my work, I've learned that these whales eat both diatoms and ice algae.
    {@player}       Oh, that's great! Thanks, Professor. 
    $call GiveFact(BowheadWhale.Eats.Diatoms)
    $call GiveFact(BowheadWhale.Eats.IceAlgae)
    $set jobs:arctic-cause-of-death.grantedEat = true
$endif
$if JobTaskCompleted(getEnvironmentData), !jobs:arctic-cause-of-death.grantedStress
    {@arcticSci}  It looks like you've obtained the water conditions at {h}Site W{/h}.
                  You can compare those with the water conditions that stress the Bowhead Whales. See if it matches up. 
    $call GiveFact(BowheadWhale.Light.Stressed)
    $call GiveFact(BowheadWhale.PH.Stressed)
    $call GiveFact(BowheadWhale.Temperature.Stressed)
    $set jobs:arctic-cause-of-death.grantedStress = true
$endif

::helpLost
@trigger    RequestPartnerHelp
@when   scene:name != "RS-4W", JobTaskTop(getEnvironmentData)
@cutscene
{@player}  Hey {nameof @guide}... I'm a little lost.
{@guide}   Don't worry, O. Our map and compass are fully operational.
{@player}   No. I mean... what are we supposed to do here?
{@guide}    Ah. You have been tasked with investigating each of {nameof @arcticSci}'s theories about Linda's death: water conditions, or lack of food.
            You will still need more information in order to investigate either theory.
            Check your {h}AQOS{/h} to see where to go next.

::helpScanProbE
@trigger    RequestPartnerHelp
@when   scene:name == "RS-4W", JobTaskTop(getEnvironmentData)
@cutscene
{@player} What should we do now, {nameof @guide}? 
{@guide}  You need to investigate whether the water conditions proved deadly for Linda.
          Try scanning the {h}water chemistry probe{/h} for more data.

::helpScanProbP
@trigger    RequestPartnerHelp
@when   scene:name == "RS-4W", JobTaskTop(getHistPopulationData)
@cutscene
{@player}  Okay, {nameof @guide}. What's our next step?
{@guide}   You need to determine if Linda died of starvation.
            That means you'll need to find out if her food population declined.
           There's no live whale here to help us obtain data on what Bowhead Whales eat...
           So I would suggest gathering data on everything.
{@player}  Got it. Thanks, {nameof @guide}.

::helpReport
@trigger    RequestPartnerHelp
@when   JobTaskTop(reportBack)
@cutscene
{@player}   Okay, V. What now? 
{@guide}    It's time to report back to {nameof @arcticSci}!

::giveWhaleEat
@trigger    JobTasksUpdated
@when   JobTaskCompleted(getHistPopulationData)
@once
@cutscene
{@guide}   Adequate work, O!    
           Incidentally, I've received a transmission from {nameof @arcticSci}.
           According to his data, Bowhead Whales eat both diatoms and ice algae.
           This should help in your investigation! 
{@player}  ....{nameof @guide}...
{@guide}   Yes, O?
{@player}   Did you wait to tell me this information so that I would have to gather all that extra data from the probe?
{@guide}    Processing... processing...
{@player}   Oh, never mind, V. I get it. Data is pretty awesome. 
           
$call GiveFact(BowheadWhale.Eats.Diatoms)
$call GiveFact(BowheadWhale.Eats.IceAlgae)
$set jobs:arctic-cause-of-death.grantedEat = true

::giveWhaleStress
@trigger    JobTasksUpdated
@when   JobTaskCompleted(getEnvironmentData)
@once
@cutscene
{@guide} Satisfactory work, O!
{@player} Thanks, V. 
          So what should we do next? 
{@guide}  {nameof arcticSci} has sent over data on the water conditions that stress the whale. 
          You will need to compare his data to the water conditions here.
$call GiveFact(BowheadWhale.Light.Stressed)
$call GiveFact(BowheadWhale.PH.Stressed)
$call GiveFact(BowheadWhale.Temperature.Stressed)
$set jobs:arctic-cause-of-death.grantedStress = true

// CATCH-ALL GUIDE TEXT

:: catchGetEnvironmentData
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getEnvironmentData)
@boostScore -5
@cutscene
{@guide}    Collect water chemistry data from a probe at Site W.

:: catchGetHistPopulationData
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getHistPopulationData)
@boostScore -5
@cutscene
{@guide}    Collect population history data from a probe at Site W.

:: catchGetCurrPopulationData
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getCurrPopulationData)
@boostScore -5
@cutscene
{@guide}    We need to collect the current populations of all organisms at the {h}whalefall site{/h}.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@player}   What now, {nameof @guide}?
{@guide}    You need to return to the station and talk to {nameof @arcticSci}!

// ARGUMENTATION
::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(PopulationHistory)
@cutscene
$if ArgueIsComplete(foodCauseDeath)
    {@arcticSci} Let's see. We've determined that a change in Linda's food supply is what caused her death. 
                 What did you determine about the Diatom and Ice Algae populations?  
    $goto .argue.populationHistory
$endif
{@arcticSci} Well, Ollie. Let's see what you discovered.
             Which hypothesis is most likely? 
    $if !ArgueIsComplete(foodCauseDeath)
        $choice .argue.foodClaim; There was a problem with Linda's food supply.
    $endif
    $if !ArgueIsComplete(lightCauseDeath)
        $choice .argue.stressClaim; There was a problem with Linda's water conditions.
    $endif
    $choice .argue.giveUp; Let me check my notes and get back to you.
$choose branch

:: argue.foodClaim
{@arcticSci}  Hmmm. Okay, let's take it step by step.
               For the sake of being thorough, do you recall what Bowhead Whales eat?
$call ArgueLoad(foodCauseDeath)
$if ArgueSetClaim(Claim, jobs.arctic-cause-of-death.argue.claimLabel1) 
	$call ArgueFactSlot(BowheadWhale.Eats.IceAlgae) 
	$call ArgueFactSlot(BowheadWhale.Eats.Diatoms) 
$endif
$goto .argue.showClaim

:: argue.stressClaim
{@arcticSci}   Really? How did Linda's environment compare to the stress ranges I gave you?
$call ArgueLoad(lightCauseDeath)
$if ArgueSetClaim(Claim, jobs.arctic-cause-of-death.argue.claimLabel2) 
	$call ArgueFactSlot(BowheadWhale.Temperature.Stressed) 
	$call ArgueFactSlot(W_WhaleFall.Temperature) 
$endif
$goto .argue.showClaim2

::argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.howKnow 
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you. 
$choose branch

::argue.showClaim2
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.transition
    $answer *, .argue.unrelated2
$choice .argue.giveUp; Let me get back to you.
$choose branch

::argue.showClaim3
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.complete
    $answer *, .argue.unrelated3
$choice .argue.giveUp; Let me get back to you.
$choose branch

::argue.howKnow
$call ArgueCancelClaim()
$call ArgueComplete()
{@arcticSci}   Exactly right, Ollie.
                And what did you determine about the populations for Diatoms and Ice Algae?
$goto .argue.populationHistory

::argue.populationHistory
$call ArgueLoad(PopulationHistory)
$if ArgueSetClaim(Claim, jobs.arctic-cause-of-death.argue.claimLabel1) 
    $call ArgueFactSlot(W_WhaleFall.PopulationHistory.IceAlgae) 
    $call ArgueFactSlot(W_WhaleFall.PopulationHistory.Diatoms) 
    $call ArgueFactSlot(W_WhaleFall.Population.IceAlgae) 
    $call ArgueFactSlot(W_WhaleFall.Population.Diatoms) 
$endif
$goto .argue.showClaim3

::argue.transition
$call ArgueCancelClaim()
$call ArgueComplete()
$call ArgueLoad(foodCauseDeath)
{@arcticSci}    These ranges seem compatible, Ollie.  
                There's nothing here that would've caused Linda's death. 
{@player}       Oh... you're right!
                It must've been her food supply. 
$goto .argue.foodClaim

:: argue.unrelated
$call ArgueRejectIncorrect()
{@arcticSci}   Well... that's certainly interesting. But it's not what I asked for.
                Can you share any facts related to Linda's {h}food supply{/h}?
$goto .argue.showClaim

:: argue.unrelated2
$call ArgueRejectIncorrect()
{@arcticSci}  I'm afraid that's not quite what we need here, Ollie. 
                Do you have any facts about {h}stressors{/h} in Linda's environment?
$goto .argue.showClaim2

:: argue.unrelated3
$call ArgueRejectIncorrect()
{@arcticSci}  That's not relevant at the moment... though I'd love to chat more about it later!
                For now, what can you tell me about the populations of Linda's food sources?
$goto .argue.showClaim3

:: argue.giveUp
{@arcticSci} Of course, Ollie. Let me know when you're ready. 
// $call ArgueCancelClaim()
$call ArgueClearFacts()

// END
:: argue.complete
$call ArgueComplete()
{@arcticSci}   Oh no. Poor, dear Linda.
{@player}       What is it, Professor?
{@arcticSci}   She must've been lured in by the ice algae. When the ice melts, the algae can become abundant...
               But it disappears when the seasons change.
               My guess would be that Linda got trapped when the ice refroze and couldn't get back to her pod.
 {@player}     Oh no... and without the algae, she must've starved!
 {@arcticSci}  I think we can reasonably assume that we've found Linda's cause of death.
 {@player}     Ugh. How heartbreaking. I wonder if there's any way to stop this from happening again. 
 {@arcticSci}   You really are quite like your sister, Ollie.
 {@player}      Oh... no, I'm not. She was brilliant!
 {@arcticSci}   Well, all I can say is you've helped me greatly today. And I think Meredith would've done the same. 

$call CompleteJob()