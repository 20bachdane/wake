:: basePath job.arctic-disappearing-act

// INTRO
:: start
@trigger    JobStarted
@cutscene
$if HasEntity(ArcticCod), HasEntity(BristleWorm), HasEntity(ChinookSalmon), HasEntity(Diatoms), HasEntity(IceAlgae), HasEntity(Hagfish), HasEntity(IceAlgae), HasEntity(NorthAtlanticOctopus), HasEntity(SalmonShark), HasEntity(SnowCrab), HasEntity(ZombieWorm), HasEntity(Detritus)    
// Blah
$else
{@kevin}    If we're going to investigate properly, we'll need to know all the species at {h}site W{/h}.
$endif
$if !HasUpgrade(VisualModel)
	{@profWhalen}	I've unlocked a new room on your Helm, {map-name}the Modeling Lab{/map-name}.
	{@profWhalen}	Head there when you are ready to make a Visual Model of how {h}site W{/h} species interact with each other.
	$call UnlockRoom("modelingRoom")
	$call UnlockRoom("Modeling")
	$call GiveUpgrade(VisualModel)
$endif

::gotAllInfo
@trigger JobTasksUpdated
@when JobTaskCompleted(scanCritters)
@once
@cutscene
{@kevin}    I'd say we know enough to start making a {h}visual model{/h} now.

:: helpScan
@trigger    RequestPartnerHelp
@when   JobTaskTop(scanCritters)
@cutscene
{@player}   What should I do next?
{@kevin}    Remember, you can use your {h}AQOS tablet{/h} to check your next task.     

:: helpObserve
@trigger    RequestPartnerHelp
@when   JobTaskTop(modelInteractions)
@cutscene
{@player}   What should I do next? 
{@kevin}    In order to make a {h}visual model{/h}, we'll need to first understand the interactions of the species at {h}site W{/h}.
            These can be discovered using your {h}Observation Tank{/h}. 
            Once you have discovered all the species interactions, head to the {nameof Modeling} to construct the appropriate model.

:: helpTanks
@trigger    RequestPartnerHelp
@when   JobTaskTop(modelInteractions)
$if !HasFact(ZombieWorm.Eats.Detritus)
    I wonder what {h}ZombieWorms{/h} are eating...
$endif

::reportBack
@trigger    RequestPartnerHelp
@when JobTaskTop(reportBack)
@cutscene
{@kevin}    Let's report back to {nameof profWhalen} with our model.

// CATCH-ALL GUIDE TEXT

:: catchScanCritters
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanCritters)
@boostScore -5
@cutscene
{@kevin}    Scan everything at Site W.

:: catchModelInteractions
@trigger    RequestPartnerHelp
@when 		JobTaskActive(modelInteractions)
@boostScore -5
@cutscene
{@kevin}    Observe Site W species interactions and make a Visual Model from them.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@kevin}    Report back to Professor Whalen.

// ARGUMENTATION
::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(whaleModel)
@cutscene
$call ArgueLoad(whaleModel)
$if ArgueSetClaim(Claim, jobs.arctic-disappearing-act.argue.claimLabel) 
		$call ArgueFactSlot(W_WhaleFall.Model.WhaleFallVisual)
$endif
{@profWhalen} Where you able to create that visual model of site W?
$goto .argue.showClaim
            
:: argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
    $answer W_WhaleFall.Model.WhaleFallVisual, .argue.complete 
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.unrelated
$call ArgueRejectIncorrect()
{@profWhalen} Ok, that's interesting, but it's not answering my question.
$goto .argue.showClaim

:: argue.giveUp
{@profWhalen} OK. Get back to me when you're ready.

// END
:: argue.complete
$call ArgueComplete()
{@profWhalen}   It looks like quite a few organisms came to feast on her. 
                I wonder how long she has been down there...
                Anyways, thanks for your help!

$call CompleteJob()