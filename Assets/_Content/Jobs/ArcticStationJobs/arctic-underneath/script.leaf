# basePath job.arctic-underneath


// INTRO
:: start
@trigger    JobStarted
@cutscene

{@profArctic} So. Let's start at the beginning.
              What's this rumor about you seeing something under the ice?
{@player}     It's not a rumor. There's a whole ecosystem down there!
{@profArctic} We've had a station out here for years. Why has no one noticed it before?
{@player}   I don't know. Maybe you're so busy obsessing over the salmon that you never thought to look?
{@profArctic}  Excuse me, Ollie? "Obsessing" over the salmon? 
{@player}   I... I didn't mean it like that. I know your work with the salmon is super important.  
            But this new ecosystem is amazing. I'm not making it up!
{@profArctic} I believe you, Ollie. But we don't have the resources to send our people out on a hunch.
             That's why I was hoping you'd check it out for me.
{@player}   Oh. I'd love to! 
{@profArctic}  Sounds like the current swept you through, so you'll need an upgraded engine.
               And Ollie... be careful.
               It's not unusual for newcomers to get a little overwhelmed out here.
{@olayer}   Got it. Thanks, {nameof profArctic}.

:: getTheEngine
@trigger    RequestPartnerHelp
@when 		!HasUpgrade("Engine")
@cutscene
{@guide}	Have you upgraded your {h}engine{/h} yet? Let's ask {nameof @arcticMechanic} if he has something that can help us.

:: toSiteX
@trigger    RequestPartnerHelp
@when   !JobTaskTop(reportBack), HasUpgrade("Engine"), scene:name != "RS-4X"
@cutscene
{@guide}    Lets return {h}beneath the ice{/h}, perhaps through {h}Site W{/h}. Check your AQOS for more Site information.
             
:: useFlashlight
@trigger    SceneStart
@when   scene:name == "RS-4X"
@once
@cutscene
{@guide}    Goodness it's dark. We might need to use your {nameof Flashlight} tool to be able to scan critters here.
            If you can visualize a what might be called a "[3] button" on your "keyboard", pressing that should also activate your {nameof Flashlight}

:: report
@trigger    JobTasksUpdated
@when 		JobTaskTop(reportBack)
@cutscene
{@guide}	It looks like you've got a good sample of the life to be found under the ice.
            Lets report back to {nameof profArctic} with everything you've found.

:: LookAround
@trigger    RequestPartnerHelp
@when   !JobTaskTop(reportBack), HasUpgrade("Engine"), HasUpgrade("Flashlight"), scene:name == "RS-4X"
@cutscene
{@guide}    I wonder what kinds of creatures might be living here.
            Be sure to check your {h}AQOS{/h} for job specifics.

:: reportBack
@trigger    RequestPartnerHelp 
@when 	    JobTaskTop(reportBack)
@cutscene
{@guide}	It looks like you've got a good sample of the life to be found under the ice.
            Lets report back to {nameof profArctic} with everything you've found.

// CATCH-ALL GUIDE TEXT

:: catchExplore
@trigger	RequestPartnerHelp
@when		JobTaskTop(explore)
@boostScore -5
@cutscene
{@guide}    Count the species populations at Site X. That's the region under the ice.

:: catchReportBack
@trigger	RequestPartnerHelp
@when		JobTaskTop(reportBack)
@boostScore -5
@cutscene
{@guide}	Return to the station and talk to {nameof @profArctic}.

@trigger    TryArgumentation
@when   !ArgueIsComplete(siteXAnalysis) 
@cutscene
{@profArctic}   What populations did you count beneath the ice?
$call ArgueLoad(siteXAnalysis) 
$call ArgueSetClaim(Claim, jobs.arctic-underneath.argue.claimLabel) 
    $call ArgueFactSlot(X_UnderTheIce.Population.AstarteBorealis)  
    $call ArgueFactSlot(X_UnderTheIce.Population.GlassSponge)  
    $call ArgueFactSlot(X_UnderTheIce.Population.NorthernSeaNettle)  
$goto argue.showClaim

:: argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.complete 
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you.
$choose branch

:: argue.unrelated
{@profArctic} Ok, that's interesting, but it's not answering my question.
$if ArgueIsFactSubmitted(X_UnderTheIce.Population.Detritus)
    {@profArctic} You don't need to tell me the count of detritus, that stuff isn't alive.
$endif
$call ArgueRejectIncorrect()
$goto .argue.showClaim

:: argue.giveUp
{@profArctic}   Make sure you get a complete picture of all the populations down there.

// END
:: argue.complete
$call ArgueComplete()
{@profArctic}   Whoa! That's amazing! I wonder what they are doing down there! 
                How are they living? What do they eat? Is there light? We need to get more information, stat!

$call CompleteJob()