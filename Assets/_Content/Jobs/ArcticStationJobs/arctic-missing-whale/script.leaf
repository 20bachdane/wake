#basePath   job.arctic-missing-whale

:: start
@trigger    JobStarted
@cutscene

$branch common.ringPhone

$set jobs:arctic-missing-whale.foundWhale = 0
{@profWhalen}	Some of our researchers down south have been tracking a certain pod of whales for some time now.
                Recently however, one of our trackers went out, and we haven't been able to find them since.
                The tracker was attached to one of the matriarchs of the pod we call "Linda".
                Would you be able to go check her last known location and see if you can find her?  
{@player}   Can do!
{@profWhalen}  A mother whale is called a Cow, so sending you off to find her makes you a cowboy!
{@player}   When then, I reckon we ought to saddle-up and mosey on over.
{@kevin}    Oh, brother...

:: helpFindWhale
@trigger    RequestPartnerHelp
@when 		jobs:arctic-missing-whale.foundWhale == 0
@cutscene
{@player} 	What should I be doing again?
{@kevin}	We need to see if we can locate the Linda.
            Why don't you check your AQOS to see her last known location.

:: helpDetritusPop
@trigger    JobTasksUpdated
@when 		HasEntity(Detritus), !HasFact(W_WhaleFall.Population.Detritus) 
@cutscene
{@kevin}	Detritus, huh? How much did you scan? A whale amount? 
            
:: gotScans
@trigger    JobTasksUpdated
@once
@cutscene
$set jobs:arctic-missing-whale.foundWhale = 1
{@kevin} Looks like we were able to find her...
{@kevin} Let's head back and let Professor Whalen know.

:: helpBackToShip
@trigger    RequestPartnerHelp
@when 		jobs:arctic-missing-whale.foundWhale == 1
@cutscene
{@player} 	Where should I be going again?
{@kevin}	We located the whale, so let's report back to Professor Whalen.

// ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(findLinda)
@cutscene
$call ArgueLoad(findLinda) 
$if ArgueSetClaim(Claim, jobs.arctic-missing-whale.argue.claimLabel) 
    $call ArgueFactSlot(W_WhaleFall.Population.Detritus) 
    $call ArgueFactSlot(W_WhaleFall.PH) 
$endif
{@profWhalen}   Have you found Linda?
$choice .argue.showClaim; Yes
$choice .argue.cantFind; No
$choose branch

:: argue.showClaim
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
    $answer W_WhaleFall.Population.Detritus, .argue.detritus 
    $answer W_WhaleFall.PH, .argue.whaleTracker 
    $answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you.
$choose branch

::argue.detritus
$if ArgueIsFactSubmitted(W_WhaleFall.PH)
    $goto .argue.complete
$else
{@profWhalen}   That's a LOT of detritus. It might be a whale, but did you happen to find our tracker?
                That would confirm that it's her...
$endif
$goto .argue.showClaim

::argue.whaleTracker
$if ArgueIsFactSubmitted(W_WhaleFall.Population.Detritus)
    $goto .argue.complete
$else
{@profWhalen}   Oh no. Maybe it just fell off? 
                You didn't happen to see anything that resembled a dead whale, did you?
$endif
$goto .argue.showClaim

:: argue.unrelated
$call ArgueRejectIncorrect()
{@profWhalen} Ok, that's interesting, but it's not answering my question.
$goto .argue.showClaim

:: argue.giveUp
{@profWhalen} OK. Get back to me when you're ready.

:: argue.cantFind
{@profWhalen}   She's got to be out there somewhere. I hope something hasn't happened to her...
                Don't come back until you've found some evidence of her. 

// END

:: argue.complete
$call ArgueComplete()
{@profWhalen}   Oh. With both pieces of evidence... Well, that's unfortunate.
                I'm sure she will be missed by her pod. I wonder who will take over as leader...
                Anyhow, thanks for letting us know.

$call CompleteJob()
