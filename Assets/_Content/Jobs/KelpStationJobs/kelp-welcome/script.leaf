#basePath   job.kelp-welcome

// INTRO

:: start
@trigger    JobStarted
@cutscene
{fade-out black.60, 0.5, wait}
{@}
{style center}

$call hotbar.portable->Unlock()
$call hotbar.portable->Show()
$call hotbar.portable->ForceOnTop()
$call FocusHighlight->Focus(hotbar.portable)
    Check your {item-name}AQOS Tablet{/item-name} to see all the info about your active job!
    This tool also holds all the data you collect.
$call FocusHighlight->Clear()

{hide-dialog}{fade-in 0.5, wait}
{style default}

{@drKelp} Gracias, Olivia! 
{@drKelp} I'll get the AquaLab set up for you.
{@player} Wow... the AquaLab? You're giving me Mer's old ship? 
{@drKelp} Of course. Your sister would've wanted you to have it. 
{@drKelp} The data on your new ID card will give you clearance. 
{@drKelp} Just make sure not to lose your card, or the whole ship will power down. 
{@player} Got it. Gracias, Mom. 
$call GiveJournalEntry("N01_Intro")

:: diveSite
@trigger    SceneStart
@when       scene:name == "RS-1C"
@triggerPriority   High
@once
@cutscene
$branch common.ringPhone

{@guide} Greetings! I am your onboard A.I.
{@guide} My name is Version 1 Conscious Terminal Onboard Representative.
{@guide} But you can call me {nameof @guide}.
{@guide} What should I call you? 
{@player} Oh... my name's Olivia Ramirez, but my friends call me O. 
{@player} So... what should we do first, {nameof @guide}? 
{@guide} First, we will need to collect some data. My favorite!!! 
{@guide} Use your {item-name}Scanner{/item-name} to identify all the species here at the Forested Lagoon. 
$call GiveUpgrade(ROVScanner, Silent)
$call Player->SetTool(Scanner)
{@guide}   Click the red targets to ID a new plant or animal!
{hide-dialog}
{wait 0.5}

{fade-out black.60, 0.5, wait}
{@}
{style center}

$call hotbar.guide->Unlock()
$call hotbar.guide->Show()
$call hotbar.guide->ForceOnTop()
$call FocusHighlight->Focus(hotbar.guide)
    Talk to {nameof @guide} by clicking the {h}button with the eyes{/h} here.
    He can help if you get stuck!
$call FocusHighlight->Clear()

{hide-dialog}{fade-in 0.5, wait}
$call hotbar.portable->ResetSorting()
$call hotbar.guide->ResetSorting()

$call GiveEntity(WarmKelpForest)
$call UnlockSite("RS-1C")
$call UnlockRoom("nav")
$call UnlockRoom("exterior")

// AT STATION

:: helpGoToSiteC 
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", !HasEntity(WarmKelpForest), !HasEntity(Urchin), !HasEntity(GiantKelp), !HasEntity(SeaOtter)
@boostScore 2 //if the player has collected nothing, this should be seen instead of helpReturnToShip
@cutscene
{@guide}	You need to find {h}site C{/h}, then dive. 
            Unless you'd rather just float here forever.  

:: helpAtSiteC
@trigger    RequestPartnerHelp
@when       scene:name == "RS-1C", !jobs:kelp-welcome.got.scans
@cutscene
{@player}   What now?  
{@guide}    According to your task list in AQOS, you must scan all the species here at Site C!
            You appear to be missing some. Better keep looking. 

:: navigation.goBackUp
@trigger    JobTasksUpdated
@when       JobTaskActive(returnToShip)
@boostScore 100
@cutscene
@once
$set    jobs:kelp-welcome.got.scans = true

{@guide} You have scanned all the local species...
{@guide} And gathered lots of thrilling data! 
{@guide} Now head to the surface and board your new research vessel.
$call Surface->Activate()

:: navigation.goBackUp.savePatch
@function   SceneStart
@when       scene:name == "RS-1C", !jobs:kelp-welcome.got-scans, JobTaskActive(returnToShip)
$set jobs:kelp-welcome.got.scans = true
$call Surface->Activate()

:: helpAtSiteCCompleted
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1C", JobTaskTop(returnToShip)
@cutscene
{@player}   Can you remind me what to do now, {nameof @guide}?  
{@guide}    Certainly, O. Head to the surface and board your ship! 

// BACK AT STATION

:: navigation.return
@trigger    SceneStart
@when       scene:name == "KelpStation", jobs:kelp-welcome.got.scans
@boostScore 100
@cutscene
@once

$branch common.ringPhone
{@player}Wow. Mer's old AquaLab!
{@player} How do we get onboard, {nameof @guide}?

{fade-out black.60, 0.5, wait}
{@}
{hide-dialog}

$call ship.map->ForceOnTop()
$call schematic.button->ForceOnTop()
$call FocusHighlight->Focus(schematic.button, 250, 250)
    Use your {h}schematic{/h} to visit different areas of your ship.  
$call FocusHighlight->Clear()

$call schematic.button->ForceClick()
{hide-dialog}{wait 1}{style default}
// $call HelmButton->ForceOnTop()
$call FocusHighlight->Focus(HelmButton, 200, 200)
    Click here to enter the {h}helm{/h}!
$call FocusHighlight->Clear()
{hide-dialog}{fade-in 0.5, wait}
$call schematic.button->ResetSorting()
$call ship.map->ResetSorting()
// $call HelmButton->ResetSorting()


:: navigation.return.incomplete
@trigger    SceneStart
@when       scene:name == "KelpStation", JobTaskCompleted(gotoSiteC), !jobs:kelp-welcome.got.scans
@cutscene

{@player}   Is that everything, {nameof @guide}? 
{@guide}   Hmmm. It appears you missed something. 
{@guide}    Head back to {h}site C{/h} and try again.


:: helpReturnToShip
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", JobTaskActive(returnToShip)
@boostScore 100
@cutscene
{@player} 	What now?
{@guide}	You need to head to the {h}helm{/h}. 
$call ship.map->ForceOnTop()
$call schematic.button->ForceOnTop()
$call FocusHighlight->Focus(schematic.button, 250, 250)
    Use the {h}schematic{/h} to navigate inside your ship.
$call FocusHighlight->Clear()
$call schematic.button->ResetSorting()
$call ship.map->ResetSorting()

// BACK AT SHIP

:: atHelmNotFinishedWithExperiment
@function   SceneStart
@when       scene:name == "Helm", !JobTaskCompleted(runExperiment)
$call WheelPrompt->Deactivate()

:: atShip
@trigger    SceneStart
@when       scene:name == "Helm", JobTaskActive(runExperiment)
@boostScore 100
@cutscene
@once

{@player} Wow. It's beautiful!  
{@player}  What should I do now, {nameof @guide}?
{@guide} Updating ship schematic... 
{hide-dialog}

$call UnlockRoom("Experimentation")
$call GiveUpgrade(ObservationTank)
{wait 0.75}
$call ship.map->ForceOnTop()
$call schematic.button->ForceClick()
{hide-dialog}{wait 1}{style default}
// $call HelmButton->ForceOnTop()
$call FocusHighlight->Focus(ExperimentationButton, 200, 200)
    Head to your {nameof Experimentation} to start your next task!
$call FocusHighlight->Clear()
{hide-dialog}{fade-in 0.5, wait}
$call ship.map->ResetSorting()
$call AutoSaveNow()

:: helpGoToExperimentRoom
@trigger    RequestPartnerHelp
@when 		JobTaskActive(runExperiment), scene:name != "ExperimentV2"
@cutscene
{@player}   Can you help me find my way, {nameof @guide}?
{@guide}    Certainly, O. Open your ship schematic in the upper left.
{@guide}  Then select your {nameof Experimentation}!

:: firstCaptureCircle
@trigger    BehaviorCaptureChance
@chatter
@once

$if local:factId == "Urchin.Eats.GiantKelp"
    {@guide}    That urchin's eating something!
$else
    {@guide}    That sea otter's eating something!
$endif

:: firstCaptureSuccess
@trigger    NewBehaviorObserved
@chatter
@once
@boostScore 1000

$if local:factId == "Urchin.Eats.GiantKelp"
    {@guide}    You captured a new behavior! Looks like {pluralnameof Urchin} eat {pluralnameof GiantKelp}. 
    {$guide}    You captured a new behavior! Looks like {pluralnameof SeaOtter} eat {pluralnameof Urchin}. 
$endif
{@guide}    That should be recorded in our {item-name}Bestiary{/item-name} now.

:: firstCaptureCircleExpire
@trigger    BehaviorCaptureChanceExpired
@when       newFact == true
@chatter
@once

{@guide}    Looks like you missed that one. 
            Try to record that behavior when it happens again.

:: helpFirstExperiment
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !JobTaskCompleted(runExperiment)
@cutscene
{@player}   Okay, now what? 
$if ExperimentIsRunning()
    {@guide}	Watch the tank and click to record new behaviors.  
                You need to find out how these species interact.
$else
    {@guide}    You need to set up the tank. 
                You'll need some {nameof SeaOtter}, some {nameof Urchin}, and some {nameof GiantKelp}.
                And make sure to use a {nameof WarmKelpForest} environment.
$endif

:: experimentFinished
@trigger    ExperimentFinished
@when       scene:name == "ExperimentV2", JobTaskCompleted(runExperiment)
@cutscene
@once

{@guide}  Hooray! More data!!!
{@guide}  Adequate work, O. You're ready to report back to the Station.  
{@player} Okay. How do I get back there, {nameof @guide}?
{@guide}  You can go to your Helm and board your sub, or you can open your schematic and use {m}Quick-Travel{/m} to get there faster!

// $call   UnlockRoom("office")

// REPORT BACK

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@cutscene
{@player} 	What now, {nameof @guide}?
{@guide}	You need to report your findings. 
$if !IsPlayerOnStation()
	{@guide}  Open your schematic and {m}Quick-Travel{/m} to the research station.	
                Your mother will be waiting for you there.
$endif

:: helpReportBackInArgumentation
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack), scene:name == "Argumentation"
@cutscene
{@player} 	What now, {nameof @guide}? 
{@guide}	Tell your mother what you found out!

:: catchScanGiantKelp
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanGiantKelp)
@boostScore -5
@cutscene
{@guide}    Make sure to scan all the organisms here. Have you looked at the kelp yet?

:: catchScanUrchin
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanUrchin)
@boostScore -5
@cutscene
{@guide}    Make sure to scan all the organisms here. Have you looked at the urchins yet?

:: catchScanOtter
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanOtter)
@boostScore -5
@cutscene
{@guide}    Make sure to scan all the organisms here. Have you looked at the otters yet?

:: catchReturnToShip
@trigger    RequestPartnerHelp
@when 		JobTaskActive(returnToShip)
@boostScore -5
@cutscene

$if !IsPlayerOnShip()
    {@guide}    Head to the surface and board your ship!
$else 
    {@guide}    Head to the {m}helm{/m} when you're ready to continue.
$endif

:: catchRunExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskActive(runExperiment)
@boostScore -5
@cutscene
{@guide}    Head to the Observation Tank and run your experiment.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@guide}    Report back to your mother and let her know what you learned!

//ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(welcomeArgue)
@cutscene

$call ArgueLoad(welcomeArgue)
	$if ArgueSetClaim(welcomeArgueClaim, jobs.kelp-welcome.argue.claimLabel)
			$call ArgueFactSlot(SeaOtter.Eats.Urchin)
			$call ArgueFactSlot(Urchin.Eats.GiantKelp)
	$endif

    $if JobTaskTop(reportBack)
        $branch .argue.hello
    $else
        $branch .argue.later
    $endif


::argue.later
{@drKelp}  Wow, that was quick! Are you sure you're ready?
{@player}  Actually, I've still got a few things to do.
// TODO: add a branch if player has not received V1ct0r help button yet
{@drKelp}  Well, don't be afraid to ask if you need some help.
{@drKelp}  I'll be here when you're ready. 
	
	
::argue.hello
{@drKelp}  This is so exciting! Your first job! 
           How are you feeling? Tired? Hungry?
           I've got a recipe for cinnamon kelp rolls that I've been dying to try...
{@player}  Maybe later, Mom.
{@drKelp}  Ok, Mija. Let's see what behaviors you discovered about the species here at Site C! 
         
$goto .argue.chooseFacts

::argue.chooseFacts
$call ArgueDisplayClaim()
$if ArgueAllFactsCorrect()
    $goto .argue.done
$else
    $choice #argueFact; Present facts from AQOS
        $answer SeaOtter.Eats.Urchin, .argue.otter
        $answer Urchin.Eats.GiantKelp, .argue.urchin
        $answer *, .argue.unrelated
    $choice .argue.giveUp; Let me get back to you
$endif


::argue.otter
$if ArgueIsFactSubmitted(Urchin.Eats.GiantKelp)
	$goto .argue.done
$else
	{@drKelp}    Looks good! The {pluralnameof SeaOtter} eat {pluralnameof Urchin}. Did you learn anything about what the {pluralnameof Urchin} eat?
	$goto .argue.chooseFacts
$endif

::argue.urchin
$if ArgueIsFactSubmitted(SeaOtter.Eats.Urchin)
	$goto .argue.done
$else
	{@drKelp}    Perfect! The {pluralnameof Urchin} eat {pluralnameof GiantKelp}. Did you learn anything about the {pluralnameof SeaOtter}?
	$goto .argue.chooseFacts
$endif

::argue.unrelated
{@drKelp}    Hmm. No, that isn't relevant.
$call ArgueRejectIncorrect()
$goto .argue.chooseFacts

::argue.giveUp
{@drKelp}    Okay, Sweetie. Get back to me when you're ready.

::argue.done
$call ArgueComplete()
{@drKelp}    Excellent work. You just explained the basis of the Forested Lagoon Food Web!
$call CompleteJob()

// DONE

:: end
@trigger    JobCompleted
@cutscene
@once

{@drKelp}	I'm so thrilled, Mija. 
{@drKelp}   With your help, we might actually be able to get the Kelp Refuge up and running!
{@drKelp}   Your sister used to love this place. I can't think of a better way to honor her. 
{@player}   What about the other research stations? Do they need help, too?
{@drKelp}   Hmm. You mean in other ecosystems?
{@drKelp}   For now, I'd rather have you stay closer to home. Just in case. 
{@player}    In case of what? 
{@drKelp}    Never mind, Sweetie. Let's get you set up with your next job! 
             Talk to me to view your {map-name}Job Board{/map-name} whenever you're ready.

$call hotbar.guide->Show()
$call hotbar.portable->Show()
$call UnlockSite("RS-1C")
$call UnlockRoom("nav")
$call UnlockRoom("exterior")
$call UnlockRoom("Experimentation")
$set jobs:kelp-welcome.got.scans = true // in case job was completed via debugging