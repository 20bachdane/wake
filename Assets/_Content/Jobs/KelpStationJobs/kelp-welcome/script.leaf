#basePath   job.kelp-welcome

// INTRO

:: start
@trigger    JobStarted
@cutscene

$branch common.ringPhone

$set    player:seen.drJules = true
{@drJules}	I'm glad to see you taking on a job here!
            The first thing you need to do is go observe one of our kelp forests at Site C.
            That should teach you about some of the tools on your research ship.
{@player}	Cool! How do we get there?
{@drJules}	Just exit your helm, then use the submarine to travel out to Site C.
            When you're done, come back to the {map-name}Office{/map-name} and tell me what you've learned.
{@kevin}	Ooh, we get to take out the sub?
            Let's do it!

$call UnlockSite("RS-1C")
$call UnlockRoom("nav")
$call UnlockRoom("exterior")

:: helpGoOutsideToSubShip
@trigger    RequestPartnerHelp
@when 		scene:name == "Ship", !jobs:kelp-welcome.got.scans
@cutscene
$if global:nav.shipRoom != "exterior"
	{@player}   Where should I go from here?
	{@kevin}	Let's exit the helm and head to the sub.
$else
	{@player}   Wait, where's the sub again?
	{@kevin}	The sub should be at the back of the ship.
				Let's see what we can find out there!
$endif

// AT STATION

:: navigation
@trigger    SceneStart
@when       scene:name == "KelpStation"
@once
@cutscene
$branch common.ringPhone

{@drJules}	Alright, you're gonna take your sub over to Site C.
			It's marked for you to the east. When you're there, dive.

// player does not have anything from site C yet, tell them to go there

:: helpGoToSiteC 
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", !HasEntity(WarmKelpForest), !HasEntity(Urchin), !HasEntity(GiantKelp), !HasEntity(SeaOtter)
@boostScore 2 //if the player has collected nothing, this should be seen instead of helpReturnToShip
@cutscene
{@player} 	Where should I be going again?
{@kevin}	Site C should be to the east of the ship.
            Let's head over there and dive down.

// IN DIVE SITE

:: diveSite
@trigger    SceneStart
@when       scene:name == "RS-1C"
@once
@cutscene
$branch common.ringPhone

{@drJules}  Now that you're here, I want you to use your {nameof ROVScanner} to document all the species down here.
$call GiveUpgrade(ROVScanner, Silent)
$call Player->SetTool(Scanner)
{@drJules}  Go explore around and scan what you can find.

:: helpAtSiteC
@trigger    RequestPartnerHelp
@when       scene:name == "RS-1C", !jobs:kelp-welcome.got.scans
@cutscene
{@player}   What should I do now?
{@kevin}    Hmm... They said to document all the species down here.
            But I think we might be missing some. Let's keep looking.

:: navigation.goBackUp
@trigger    JobTasksUpdated
@when       JobTaskActive(returnToShip)
@once
@cutscene
$set    jobs:kelp-welcome.got.scans = true
$branch common.ringPhone

{@drJules}  Hey, nice work! Looks like you got everything.
            If you're ready to return, drive your sub back up toward the surface of the water.

:: helpAtSiteCCompleted
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1C", jobs:kelp-welcome.got.scans
@cutscene
{@player} 	What should I do now?
{@kevin}    I think we've scanned everything we can down here.
            Let's head back to the surface.

// BACK AT STATION

:: navigation.return
@trigger    SceneStart
@when       scene:name == "KelpStation", jobs:kelp-welcome.got.scans
@once
@cutscene
$branch common.ringPhone

{@drJules}  Alright, now take your sub back to your ship and we'll continue from there.

:: navigation.return.incomplete
@trigger    SceneStart
@when       scene:name == "KelpStation", JobTaskCompleted(gotoSiteC), !jobs:kelp-welcome.got.scans
@cutscene
$branch common.ringPhone

{@player}   Did we get everything, {nameof @drJules}?
{@drJules}  Hmm... I don't think you have everything.
            You should head back down there and check again.

:: helpReturnToShip
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", JobTaskActive(returnToShip)
@cutscene
{@player} 	Where should we head next?
{@kevin}	Let's head west and return to the ship.

// BACK AT SHIP

:: atShip
@trigger    SceneStart
@when       scene:name == "Ship", JobTaskActive(runExperiment)
@once
@cutscene
$branch common.ringPhone

{@player}   We're back. Now what?
{@drJules}  Well, now that you know some of the important species in that kelp forest, I'd recommend you learn how they interact.
{@kevin}    Wait, how will we do that?
{@drJules}  Your ship should have an {nameof Experimentation}.
{hide-dialog}

$call UnlockRoom("Experimentation")
$call FocusHighlight->Focus("exterior.experimentation", 200, 200)
{wait 1}

{@drJules}  Head in there, and I'll walk you through it.
$call FocusHighlight->Clear()

:: helpGoToExperimentRoom
@trigger    RequestPartnerHelp
@when 		JobTaskActive(runExperiment), scene:name != "ExperimentV2"
@cutscene
{@player} 	What should I do now?
{@kevin}	Let's head to the {nameof Experimentation}.

:: firstExperiment
@trigger    SceneStart
@when       scene:name == "ExperimentV2", JobTaskActive(runExperiment)
@once
@cutscene
$branch common.ringPhone

{@player}   Alright, I'm in the {nameof Experimentation}. What's next?
{@drJules}  Okay, see that tank in front of you? Take a closer look at it for me.

:: firstExperiment.2
@trigger    ExperimentTankViewed
@when       tankType == "Observation"
@cutscene

{@drJules}  This is the {h}Observation Tank{/h}. It will allow you to {h}observe{/h} the behaviors of whatever you add to it.
            Those buttons on the bottom will let you select what critters to add, and what environment to put them in.
            When you've got your critters added and your environment set, use the {h}Run{/h} button to start the experiment.
            
:: firstCaptureCircle
@trigger    BehaviorCaptureChance
@chatter
@once
$if local:factId == "Urchin.Eats.GiantKelp"
    {@kevin}    Whoa!| That urchin's eating something!
$else
    {@kevin}    Whoa!| That sea otter's eating something!
$endif

:: firstCaptureSuccess
@trigger    NewBehaviorObserved
@chatter
@once
@boostScore 1000
$if local:factId == "Urchin.Eats.GiantKelp"
    {@kevin}    Nice one! {pluralnameof Urchin} eat {pluralnameof GiantKelp}, huh?
$else
    {$kevin}    Nice one! {pluralnameof SeaOtter} eat {pluralnameof Urchin}, huh?
$endif
{@kevin}    That should be recorded in our {item-name}Bestiary{/item-name} now.

:: firstCaptureCircleExpire
@trigger    BehaviorCaptureChanceExpired
@when       newFact == true
@chatter
@once
{@kevin}    Ah, darn it, we missed it.
            Let's try to record that behavior when it happens again.

:: helpFirstExperiment
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !JobTaskCompleted(runExperiment)
@boostScore -500
@cutscene
{@player}   How should I do this again?
$if ExperimentIsRunning()
    {@kevin}	Let's watch this play out.
                We might see some critters interact with each other.
$else
    {@kevin}    Let's set up our observation experiment.
                We'll probably need to add some {nameof SeaOtter}, some {nameof Urchin}, and some {nameof GiantKelp}.
                And it'll need to be in a {nameof WarmKelpForest} environment.
$endif

:: experimentFinished
@trigger    ExperimentFinished
@when       scene:name == "ExperimentV2", JobTaskCompleted(runExperiment)
@cutscene
$branch common.ringPhone
{@drJules}  Nice work, you two! Now, come chat with me in your {map-name}Office{/map-name}.
            You can submit your findings there through your {h}Computer{/h}

$call   UnlockRoom("office")
$call   UnlockRoom("Argumentation")

// REPORT BACK

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@cutscene
{@player} 	What should we be doing now?
{@kevin}	Now that we've finished the experiment, let's report back to {nameof @drJules}.
$if global:nav.shipRoom != "office"
	{@kevin}	We should first head to the {map-name}Office{/map-name}.
$else
	{@kevin}	You can report your findings using the {h}Computer{/h} in front of you.
$endif

:: helpReportBackInArgumentation
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack), scene:name == "Argumentation"
@cutscene
{@player} 	What should I do now?
{@kevin}	Let's tell {nameof @drJules} what we found out.

// DONE

:: end
@trigger    JobCompleted
@cutscene
{@drJules}	Nice job, {player-name}! And you too, {nameof @kevin}!
{@player}   Thanks!
{@drJules}  I do have more sites for you to check out.
            Take a look at the {map-name}Job Board{/map-name} again when you have the chance.