#basePath   job.kelp-welcome

// INTRO

:: diveSite
@trigger    SceneStart
@when       scene:name == "RS-1C"
@triggerPriority   High
@once
@cutscene
$branch common.ringPhone

{@guide}Greetings, Olivia Ramirez! 
{@guide}   I am {nameof @guide}, your onboard A.I.!
{@guide}   Did your job-giver not inform you that I would be uploaded to your sub?
{@player}  Nah. Mom's been pretty distracted lately.  
{@player}  Okay then, {nameof @guide}. What do we do first? 
{@guide}  Use your {item-name}Scanner{/item-name} to ID all the species at Site C. 
$call GiveUpgrade(ROVScanner, Silent)
$call Player->SetTool(Scanner)
{@guide}  The {item-name}Scanner{/item-name} searches for life forms automatically. 
            Click the red targets to ID a new plant or animal species. 
{wait 0.5}

{fade-out black.60, 0.5, wait}
{@}
{style center}

$call hotbar.guide->Unlock()
$call hotbar.guide->Show()
$call hotbar.guide->ForceOnTop()
$call FocusHighlight->Focus(hotbar.guide)
    Talk to {nameof @guide} by clicking the {h}button with the eyes{/h} here.
    He can help if you get stuck!
$call FocusHighlight->Clear()

$call hotbar.portable->Unlock()
$call hotbar.portable->Show()
$call hotbar.portable->ForceOnTop()
$call FocusHighlight->Focus(hotbar.portable)
    Check your {item-name}AQOS Tablet{/item-name} to see all the info about your active job!
    This tool also holds all the data you collect.
$call FocusHighlight->Clear()

{hide-dialog}{fade-in 0.5, wait}
$call hotbar.portable->ResetSorting()
$call hotbar.guide->ResetSorting()

$call GiveEntity(WarmKelpForest)
$call UnlockSite("RS-1C")
$call UnlockRoom("nav")
$call UnlockRoom("exterior")

// :: start
// @trigger    SceneStart
// @when       scene:name == "Helm"
// @once
// @cutscene

// $branch common.ringPhone

// $set    player:seen.drJules = true
// {@drKelp}	Lovely! Thanks for the help.
//             Drive your sub over to {h}site C{/h} to get started. 
// {@player}	Ok, great! The sub, which is located...um... 
// {@kevin}	Right outside the door. 
// {@player}	Oh, yeah. I knew that. 
//             (Thanks, Kevin.)


:: helpGoOutsideToSubShip
@trigger    RequestPartnerHelp
@when 		scene:name == "Helm", !jobs:kelp-welcome.got.scans
@cutscene
$if global:nav.shipRoom != "exterior"
	{@player}   Um... what are we supposed to do, again?
	{@guide}	Head out the door and find the sub!
$else
	{@player}   Where's the sub again?
	{@guide}	Bright yellow. Says "sub" on it. You literally can't miss it.
$endif

// AT STATION

// :: navigation
// @trigger    SceneStart
// @when       scene:name == "KelpStation"
// @once
// @cutscene
// $branch common.ringPhone

// {@drKelp}	Head over to {h}site C{/h} and get to work!
			

// player does not have anything from site C yet, tell them to go there

:: helpGoToSiteC 
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", !HasEntity(WarmKelpForest), !HasEntity(Urchin), !HasEntity(GiantKelp), !HasEntity(SeaOtter)
@boostScore 2 //if the player has collected nothing, this should be seen instead of helpReturnToShip
@cutscene
{@guide}	You need to find {h}site C{/h}, then dive. 
            Unless you'd rather just float here forever.  

:: helpAtSiteC
@trigger    RequestPartnerHelp
@when       scene:name == "RS-1C", !jobs:kelp-welcome.got.scans
@cutscene
{@player}   What now?  
{@guide}    She said to document all the species down here.
            I think we're missing some. Better keep looking. 

:: navigation.goBackUp
@trigger    JobTasksUpdated
@when       JobTaskActive(returnToShip)
@once
@cutscene
$set    jobs:kelp-welcome.got.scans = true
$branch common.ringPhone

{@guide}   You've scanned all of the species at site C! Excellent work, Olivia!
{@player}  Hey {nameof @guide}... would you mind calling me O?
{@guide}   Updating database...
{@guide}   Excellent work, O!
{@guide}   Time to head to the surface and board your new research vessel.

:: helpAtSiteCCompleted
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1C", JobTaskTop(returnToShip)
@cutscene
{@player}   Can you remind me what to do now, {nameof @guide}?  
{@guide}    Certainly, O. Head to the surface and board your ship! 

// BACK AT STATION

:: navigation.return
@trigger    SceneStart
@when       scene:name == "KelpStation", jobs:kelp-welcome.got.scans
@once
@cutscene

$branch common.ringPhone
{@drKelp}  Head into the ship for your next task!
{fade-out black.60, 0.5, wait}
{@}
{hide-dialog}

$call ship.map->ForceOnTop()
$call schematic.button->ForceOnTop()
$call FocusHighlight->Focus(schematic.button, 250, 250)
    This is your ship's {h}schematic{/h}. It can be used to navigate inside your ship.
$call FocusHighlight->Clear()

$call schematic.button->ForceClick()
{hide-dialog}{wait 1}{style default}
// $call HelmButton->ForceOnTop()
$call FocusHighlight->Focus(HelmButton, 200, 200)
    Click here to enter your ship's {h}helm{/h}
$call FocusHighlight->Clear()
{hide-dialog}{fade-in 0.5, wait}
$call schematic.button->ResetSorting()
$call ship.map->ResetSorting()
// $call HelmButton->ResetSorting()


:: navigation.return.incomplete
@trigger    SceneStart
@when       scene:name == "KelpStation", JobTaskCompleted(gotoSiteC), !jobs:kelp-welcome.got.scans
@cutscene
$branch common.ringPhone

{@player}   Is that everything, {nameof @guide}? 
{@guide}   Hmmm. It appears you missed something. 
{@guide}    Head back to {h}site C{/h} and try again!


:: helpReturnToShip
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", JobTaskActive(returnToShip)
@cutscene
{@player} 	What now?
{@guide}	We need to head into the {h}helm{/h}. 
$call ship.map->ForceOnTop()
$call schematic.button->ForceOnTop()
$call FocusHighlight->Focus(schematic.button, 250, 250)
    Use the {h}schematic{/h} to navigate inside your ship.
$call FocusHighlight->Clear()
$call schematic.button->ResetSorting()
$call ship.map->ResetSorting()

// BACK AT SHIP

:: atShip
@trigger    SceneStart
@when       scene:name == "Helm", JobTaskActive(runExperiment)
@once
@cutscene
$branch common.ringPhone

{@player} Wow. This ship... it's beautiful.  
{@guide}  Yes! The mainframe is positively buzzing with data!
{@player} You have scanned the life forms at Site C.
{@player}  Now you must find out how they interact. 
{@drKelp}  Head to your ship's built-in {nameof Experimentation}!
{hide-dialog}

$call UnlockRoom("Experimentation")
$call GiveUpgrade(ObservationTank)
{wait 1}
$call ship.map->ForceOnTop()
$call schematic.button->ForceClick()
{hide-dialog}{wait 1}{style default}
// $call HelmButton->ForceOnTop()
$call FocusHighlight->Focus(ExperimentationButton, 200, 200)
    Click here to enter your ship's {h}Experimentation Lab{/h}.
$call FocusHighlight->Clear()
{hide-dialog}{fade-in 0.5, wait}
$call ship.map->ResetSorting()

{@drKelp}  Head over there to start your next task! 
$call FocusHighlight->Clear()
$call AutoSaveNow()

:: helpGoToExperimentRoom
@trigger    RequestPartnerHelp
@when 		JobTaskActive(runExperiment), scene:name != "ExperimentV2"
@cutscene
{@player}   Can you help me find my way, {nameof @guide}?
{@guide}    Certainly, O. Open your schematic in the upper left.
{@guide}  Then head to {nameof Experimentation}!

// :: firstExperiment
// @trigger    SceneStart
// @when       scene:name == "ExperimentV2", JobTaskActive(runExperiment)
// @once
// @cutscene
// $branch common.ringPhone

// {@drKelp}  What a lovely old tank! This ship really is ancient, isn't it.
//             Go ahead, take a closer look!
            
:: firstCaptureCircle
@trigger    BehaviorCaptureChance
@chatter
@once

$if local:factId == "Urchin.Eats.GiantKelp"
    {@guide}    That urchin's eating something!
$else
    {@guide}    That sea otter's eating something!
$endif

:: firstCaptureSuccess
@trigger    NewBehaviorObserved
@chatter
@once
@boostScore 1000

$if local:factId == "Urchin.Eats.GiantKelp"
    {@guide}    You captured a new behavior! Looks like {pluralnameof Urchin} eat {pluralnameof GiantKelp}. 
    {$guide}    You captured a new behavior! Looks like {pluralnameof SeaOtter} eat {pluralnameof Urchin}. 
$endif
{@guide}    That should be recorded in our {item-name}Bestiary{/item-name} now.

:: firstCaptureCircleExpire
@trigger    BehaviorCaptureChanceExpired
@when       newFact == true
@chatter
@once

{@guide}    Looks like you missed that one. 
            Try to record that behavior when it happens again.

:: helpFirstExperiment
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2", !JobTaskCompleted(runExperiment)
@cutscene
{@player}   Ok, now what? 
$if ExperimentIsRunning()
    {@guide}	Watch the tank and click to record new behaviors.  
                You need to find out how these species interact.
$else
    {@guide}    You need to set up the tank. 
                You'll need some {nameof SeaOtter}, some {nameof Urchin}, and some {nameof GiantKelp}.
                And make sure to use a {nameof WarmKelpForest} environment.
$endif

:: experimentFinished
@trigger    ExperimentFinished
@when       scene:name == "ExperimentV2", JobTaskCompleted(runExperiment)
@cutscene
@once

$branch common.ringPhone
{@player}  Okay, we've got our behaviors! 
{@guide}   Excellent work, O!
{@guide}   Now you must return to the {m}research station{/m} and report your findings.
            // Head to your {map-name}Office{/map-name} and use your {h}Computer{/h} to send me your findings.
            // There we'll discuss your findings using argumentation with the facts you've collected.

$call   UnlockRoom("office")

// REPORT BACK

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@cutscene
{@player} 	What now, {@nameof @guide}?
{@guide}	Let's report back to your mother at the {m}research station{/m}.
$if !IsPlayerOnShip()
	{@guide}	Head back to your sub and return to the {map-name}research station{/map-name}.
$endif

:: helpReportBackInArgumentation
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack), scene:name == "Argumentation"
@cutscene
{@player} 	What now, {nameof @guide}? 
{@guide}	Tell your mother what you found out!

// CATCH-ALL GUIDE TEXT

// :: catchGoToSiteC
// @trigger    RequestPartnerHelp
// @when 		JobTaskActive(gotoSiteC)
// @boostScore -5
// @cutscene
// {@guide}    Head to {h}site C{/h}.

:: catchScanGiantKelp
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanGiantKelp)
@boostScore -5
@cutscene
{@guide}    Make sure to scan all the organisms here. Have you looked at the kelp yet?

:: catchScanUrchin
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanUrchin)
@boostScore -5
@cutscene
{@guide}    Make sure to scan all the organisms here. Have you looked at the urchins yet?

:: catchScanOtter
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanOtter)
@boostScore -5
@cutscene
{@guide}    Make sure to scan all the organisms here. Have you looked at the otters yet?

:: catchReturnToShip
@trigger    RequestPartnerHelp
@when 		JobTaskActive(returnToShip)
@boostScore -5
@cutscene
{@guide}    Head to the surface and board your ship!

:: catchRunExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskActive(runExperiment)
@boostScore -5
@cutscene
{@guide}    Head to the Observation Tank and run your experiment! 

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@guide}    Report back to your mother and let her know what you learned!

//ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(welcomeArgue)
@cutscene

$call ArgueLoad(welcomeArgue)
	$if ArgueSetClaim(welcomeArgueClaim, jobs.kelp-welcome.argue.claimLabel)
			$call ArgueFactSlot(SeaOtter.Eats.Urchin)
			$call ArgueFactSlot(Urchin.Eats.GiantKelp)
	$endif

	$branch .argue.hello
	
::argue.hello
{@drKelp}  This is so exciting, Olivia! Your first job! 
           How are you feeling? Tired? Hungry?
           I've got a recipe for cinnamon kelp rolls that I've been dying to try...
{@player}  Maybe later, Mom.
{@drKelp}  Ok. If you're sure. 
           This job will form the foundation of all the work you do here at the Kelp Forest. 
           Let's see what you discovered. 
         
$goto .argue.chooseFacts

::argue.chooseFacts
$call ArgueDisplayClaim()
$if ArgueAllFactsCorrect()
    $goto .argue.done
$else
    $choice #argueFact; Present facts from AQOS
        $answer SeaOtter.Eats.Urchin, .argue.otter
        $answer Urchin.Eats.GiantKelp, .argue.urchin
        $answer *, .argue.unrelated
    $choice .argue.giveUp; Let me get back to you
$endif


::argue.otter
$if ArgueIsFactSubmitted(Urchin.Eats.GiantKelp)
	$goto .argue.done
$else
	{@drKelp}    Excellent. The {pluralnameof SeaOtter} eat {pluralnameof Urchin}. Did you learn anything about what the {pluralnameof Urchin} eat?
	$goto .argue.chooseFacts
$endif

::argue.urchin
$if ArgueIsFactSubmitted(SeaOtter.Eats.Urchin)
	$goto .argue.done
$else
	{@drKelp}    Perfect! The {pluralnameof Urchin} live on {pluralnameof GiantKelp}. Did you learn anything about the {pluralnameof SeaOtter}?
	$goto .argue.chooseFacts
$endif

::argue.unrelated
{@drKelp}    Hmm, no, that isn't relevant.
$call ArgueRejectIncorrect()
$goto .argue.chooseFacts

::argue.giveUp
{@drKelp}    Okay, Sweetie. Get back to me when you're ready.

::argue.done
$call ArgueComplete()
{@drKelp}    Nice work, Olivia! You just explained the basis of the kelp forest food web.
$call CompleteJob()

// DONE

:: end
@trigger    JobCompleted
@cutscene
{@drKelp}	I'm so thrilled, Olivia. 
{@drKelp}   With your help, we'll have that Kelp Refuge up and running before you know it. 
{@drKelp}   I can't think of a better way to honor your sister. 
{@player}   Hey Mom, I was wondering... are there any jobs available at, I don't know.
{@player}   Other ecosystems? 
{@drKelp}   Oh... you mean outide the Kelp Forest? Of course.
{drKelp}    The other stations are all stretched nearly as thin as we are. 
{@drKelp}   But never mind about them. Let's get you set up with your next job. 
            Go ahead and check your {map-name}Job Board{/map-name}!

$call hotbar.guide->Show()
$call hotbar.portable->Show()
$call UnlockSite("RS-1C")
$call UnlockRoom("nav")
$call UnlockRoom("exterior")
$call UnlockRoom("Experimentation")
$set jobs:kelp-welcome.got.scans = true // in case job was completed via debugging