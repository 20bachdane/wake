#basePath   job.kelp-urchin-farm

:: start
@trigger    JobStarted
@cutscene

{@drKelp}	Thank you, Olivia. I have exciting news!
			I'm exploring an idea for a new side hustle... 
			Urchin farming!
{@player}   Wait... You want to farm urchins? On purpose??
{@drKelp}   Don't act so surprised, Mija. There's a high demand for urchins at the local market!
{@drKelp}   We're having kelp noodles with sea urchin crema for dinner, by the way. You'll love it! 
            But for now, head to your {nameof MeasurementTank}.
			I need to know how quickly the urchins eat the different species of kelp, so I know the most efficient food to give them. 

:: measurementTankSelect
@trigger	ExperimentTankViewed
@when		tankType == "Measurement"
@once 
@cutscene
{@player}   Where should we start, {nameof @guide}?
{@guide}   It's time to set up your tank!
		   Your mother needs to know which type of Kelp the urchins eat more quickly. 
			
:: measurementChooseKelp
@trigger	ExperimentScreenViewed
@when		screenId == "measurement.organisms"
@once 
@cutscene
{@guide}	Select {nameof Urchin} and something the {nameof Urchin} eats.

// CATCH-ALL GUIDE TEXT

:: catchUrchinEatBull
@trigger    RequestPartnerHelp
@when 		JobTaskActive(urchinEatBull)
@boostScore -5
@cutscene
{@guide}    Use the Measurement Tank to measure how quickly Urchins eat Bull Kelp.

:: catchUrchinEatKelp
@trigger    RequestPartnerHelp
@when 		JobTaskActive(urchinEatKelp)
@boostScore -5
@cutscene
{@guide}    Use the Measurement Tank to measure how quickly Urchins eat Giant Kelp.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@guide}   Adequate work, O!
		   Looks like you've got the data your mother needed.
		   Time to report back to the {m}research station{/m}!

// ARGUMENTATION
:: argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(urchinFarmArgue)
@cutscene
$call ArgueLoad(urchinFarmArgue)
{@drKelp}	Nice work using the Measurement Tank, Olivia! You're really getting the hang of this. 
			So, how do the eating rates compare?
$goto .argue.presentFacts

: argue.giveUp
{@drKelp} Okay, Mija. Let me know when you're ready.

:: argue.presentFacts
$if ArgueSetClaim(urchinFarmClaim, jobs.kelp-urchin-farm.argue.claimEitherWorkLabel)
	$call ArgueFactSlot(Urchin.Eats.GiantKelp)
	$call ArgueFactSlot(Urchin.Eats.BullKelp)
$endif
$branch .argue.chooseFacts

::argue.chooseFacts
$call ArgueDisplayClaim()
$if ArgueAllFactsCorrect()
	$goto .argue.finalClaim
$else
	$choice #argueFact; Present facts from AQOS
		$answer Urchin.Eats.BullKelp, IsFactFullyUpgraded(Urchin.Eats.BullKelp), .argue.bullKelp
		$answer Urchin.Eats.GiantKelp, IsFactFullyUpgraded(Urchin.Eats.GiantKelp), .argue.giantKelp
		$answer *, .argue.unrelated
	$choice .argue.giveUp; Let me get back to you
$endif

:: argue.bullKelp
$if ArgueIsFactSubmitted(Urchin.Eats.GiantKelp)
	$goto .argue.finalClaim
$else
	{@drKelp}	Hmm. The {pluralnameof Urchin} consume 2g of {pluralnameof BullKelp}.  
	            How does the Giant Kelp compare? 
	$goto .argue.chooseFacts
$endif

:: argue.giantKelp
$if ArgueIsFactSubmitted(Urchin.Eats.BullKelp)
	$goto .argue.finalClaim
$else
	{@drKelp}	Hmm. The {pluralnameof Urchin} consume 2g of {pluralnameof GiantKelp}. 
	How does the Bull Kelp compare? 
	$goto .argue.chooseFacts
$endif

:: argue.unrelated
{@drKelp}	Hmmm... I don't think this fact is relevant, Mija.
$call ArgueRejectIncorrect()
$goto .argue.chooseFacts

:: argue.giveUp
{@drKelp}	Okay, Sweetie. Get back to me when you're ready.

:: argue.finalClaim
{@drKelp} So, which type of kelp will the Urchins eat less of?
	$choice .argue.giantOrBull; Giant Kelp
	$choice .argue.giantOrBull; Bull Kelp
	$choice .argue.done; The rates are equal 
    $choice .argue.giveUp; Let me get back to you
$choose branch

:: argue.giantOrBull
{@drKelp} Are you sure, Olivia? I don't think your data supports that conclusion. 
$goto .argue.finalClaim

//DONE
:: argue.done
$call ArgueComplete()
{@drKelp}	Oh, interesting! Looks like the urchins eat both types of kelp at the same rate.
            I can use either type at the urchin farm, and it won't make a difference! 
$call CompleteJob()

::end
@trigger	JobCompleted
@cutscene
{@drKelp}	Thank you for your help, Olivia. 
			Want to make dinner together, since you're here?
{@player}   Oh... um, I'm so sorry, Mom. I promised I'd stop by a potluck at the Arctic station tonight. 
{@drKelp}   Aww, Sweetie. I love that you're making new friends and getting out there. Mer would be proud. 
			Travel safe. I'll save you the leftovers!  