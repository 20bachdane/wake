#basePath   job.kelp-mussel-fest

:: start
@trigger    JobStarted
@cutscene

{@kevin}	The first thing to do is check out these mussels and their environment at Site C.

:: helpLeaveShip
@trigger    RequestPartnerHelp
@when 		scene:name != "RS-1C", !JobTaskTop(stressParam), !JobTaskTop(report)
@cutscene
{@player}   Where should I go from here?
{@kevin}	Get to Site C so we can check out those mussels.

// SCANNING

:: helpScan
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1C", !JobTaskTop(stressParam), !JobTaskTop(report)
@cutscene
{@player}   Hmm. What now?
{@kevin}	We need to scan a mussel, and also the water chemistry probe here.

:: navigation.goBackUp
@trigger    JobTasksUpdated
@when       JobTaskTop(stressParam)
@once
@cutscene
{@kevin}    We have enough information to do some experiments, now.

// EXPERIMENTATION

:: helpExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskTop(stressParam)
@cutscene
{@player}   Any idea of what to do next?
{@kevin}	Putting a mussel in the stress tank might provide some answers.

:: experimentEnd
@trigger    JobTasksUpdated
@when 		JobTaskTop(report)
@once
@cutscene
{@kevin}	All right -- I think we can answer Dr. Kelpurnia's question about what's disturbing the mussels.


// REPORT

:: helpReport
@trigger    RequestPartnerHelp
@when 		JobTaskTop(report)
@cutscene
{@player}   Any idea of what to do next?
{@kevin}	It's time to explain our findings in the comms room.


// ARGUMENTATION

::argue.hello
{@drKelp}	Hi {nameof @player}.
$goto .argue.chooseClaim

::argue.chooseClaim
@trigger    TryArgumentation
@when   	!ArgueIsComplete(musselFestArgueMusselTemp)
@cutscene
{@drKelp}	What is happening with the mussels?
	$choice .argue.lightOrParasiteStress; The Mussels are stressed by light.
	$choice .argue.lightOrParasiteStress; The Mussels have a parasite.
	$choice .argue.tempStress; The Mussels are stressed by the temperature.
	$choice .argue.notReady; Let me get back to you
$choose branch

:: argue.notReady
{@drKelp} OK. Get back to me when you're ready.

::argue.lightOrParasiteStress
{@drKelp}	Do you have any evidence for this?
$goto .argue.defendClaimIncorrect

::argue.defendClaimIncorrect
	$choice .argue.notReally; Not really.
	
::argue.notReally
{@drKelp}	Okay. Any other ideas?
$goto .argue.chooseClaim

::argue.tempStress
$if ArgueIsComplete(musselFestArguePopulationTemp)
	{@drKelp}	Okay, you've already shown me the temperature range in Site B.
	$goto .argue.correctFactsPopulationTemp
$endif
$call ArgueLoad(musselFestArguePopulationTemp)
$if ArgueSetClaim(musselFestArguePopulationTempClaim, jobs.kelp-mussel-fest.argue.claimLabelPopulationTemp)
			$call ArgueFactSlot(WarmKelpForest.Temperature.History)
$endif
$call ArgueDisplayClaim()
$goto .argue.defendClaimPopulationTemp

::argue.defendClaimPopulationTemp
{@drKelp}	What was the temperature range in Site B again?
$if ArgueAllFactsCorrect()
    $goto .argue.correctFactsPopulationTemp
$else
	$choice #argueFactSet; Present facts from AQOS
			$answer correct, .argue.completePopulationTempArgue
			$answer incorrect, .argue.incorrectFactsPopulationTemp
	$choice .argue.giveUp; Let me get back to you
$endif

:: argue.completePopulationTempArgue
$call ArgueComplete()
$call ArgueHideClaim()
$goto .argue.correctFactsPopulationTemp

:: argue.correctFactsPopulationTemp
$call ArgueLoad(musselFestArgueMusselTemp)
{@drKelp}	How does that compare to the stress ranges for the mussels?
$if ArgueSetClaim(musselFestArgueMusselTempClaim, jobs.kelp-mussel-fest.argue.claimLabelMusselTemp)
			$call ArgueFactSlot(Mussel.Temperature.Stressed)
$endif
$call ArgueDisplayClaim()
$branch .argue.defendClaimMusselTemp

:: argue.incorrectFactsPopulationTemp
{@drKelp} That isn't it. Do you have the temperature stress ranges for Mussels?
$call ArgueRejectIncorrect()
$goto .argue.defendClaimPopulationTemp

:: argue.giveUp
{@drKelp} OK. Get back to me when you're ready.

::argue.defendClaimMusselTemp
$choice #argueFactSet; Present facts from AQOS
		$answer correct, .argue.correctFactsMusselTemp
		$answer incorrect, .argue.incorrectFactsMusselTemp
$choice .argue.giveUp; Let me get back to you

:: argue.correctFactsMusselTemp
$call ArgueComplete()
{@drKelp}	I see the overlap here. Good to know.
{@drKelp}	I wonder if the mussels will continue to grow.
$call CompleteJob()

:: argue.incorrectFactsMusselTemp
{@drKelp}	That doesn't explain why the mussels would be stressed in Site C's temperatures.
{@drKelp}	Do you have anything else that explains it?
$call ArgueRejectIncorrect()
$goto .argue.defendClaimMusselTemp

// END

::end