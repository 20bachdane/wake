#basePath   job.kelp-mussel-fest

:: start
@trigger    JobStarted
@cutscene

{@drKelp} Thank you for taking this job, Olivia!
{@drKelp} It's been so hard to keep up with everything.
{@player} Yeah... the station's been pretty empty lately. 
{@player} Didn't Deesha used to work here? And Julio?
{@drKelp} Our people keep getting called away to other stations.
{@drKelp} Not that I blame them, of course. There's just not enough scientists.
{@drKelp} Well... never mind all that, Mija. 
{@drKelp} The mussels at the Warm Kelp Forest look strange.
{@drKelp} I need to find out if something is stressing them. 
{@drKelp} Head to {h}site C{/h}, and {nameof @guide} will guide you from there. 

:: helpLeaveShip
@trigger    RequestPartnerHelp
@when 		scene:name != "RS-1C", !JobTaskTop(stressParam), !JobTaskTop(report)
@cutscene
{@player}   Where should I go from here, {nameof @guide}?
{@guide}	According to my data, you need to take your sub to {h}site C{/h}!

// SCANNING

:: helpScan
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1C", !JobTaskTop(stressParam), !JobTaskTop(report)
@cutscene
{@player}   Can you remind me what to do next, {nameof @guide}?
{@guide}	Certainly, O.
            You need to scan a mussel and gather data from the water chemistry probe!

:: navigation.goBackUp
@trigger    JobTasksUpdated
@when       JobTaskTop(stressParam)
@once
@cutscene
{@guide}  Admissable work, O! You've gathered enough information to do some experiments!
{@player} Thanks, {nameof @guide}. Let's head back to the ship! 

// EXPERIMENTATION

:: helpExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskTop(stressParam)
@cutscene
{@player}   Okay, {nameof @guide}. What now? 
{@guide}	Add mussels to the stress tank. Then adjust the levels and see what happens. 

:: experimentEnd
@trigger    JobTasksUpdated
@when 		JobTaskTop(report)
@once
@cutscene
{@player}	Um. So... we've got our stress ranges.
{@player}   But how does that relate to what's happening to the mussels at site C?
{@guide} My data is inconclusive, O.
{@player} Okay. Guess I better go talk to Mom.  

// REPORT

:: helpReport
@trigger    RequestPartnerHelp
@when 		JobTaskTop(report)
@cutscene
{@player}   What now, {nameof @guide}?
{@guide}	It's time to share your findings at the {m}research station{/m}.

// CATCH-ALL GUIDE TEXT

:: catchScanMussels
@trigger    RequestPartnerHelp
@when 		JobTaskActive(scanMussels)
@boostScore -5
@cutscene
{@guide}    Look for Mussels at Site C and scan one.

:: catchWaterData
@trigger    RequestPartnerHelp
@when 		JobTaskActive(waterData)
@boostScore -5
@cutscene
{@guide}    There should be an environment probe at Site C that you can scan.

:: catchStressParam
@trigger    RequestPartnerHelp
@when 		JobTaskActive(stressParam)
@boostScore -5
@cutscene
{@guide}    Use the Stress Tank to determine what is stressing the Mussels.

:: catchReport
@trigger    RequestPartnerHelp
@when 		JobTaskActive(report)
@boostScore -5
@cutscene
{@guide}    Talk to {nameof drKelp} at the research station.

// ARGUMENTATION
::argue.hello
@trigger    TryArgumentation
@when   	!ArgueIsComplete(musselFestArgueMusselTemp)
@cutscene
{@drKelp}	Excellent! Did you find out what's been stressing the mussels at site C?
{@player} Um... honestly, Mom, I'm not sure.
{@drKelp} Okay, Mija. Let's look at your data. 
$if ArgueIsComplete(musselFestReasonChemistry)
	{@drKelp}	We've talked about the temperature, pH, and light at the site.
	$branch .argue.chooseClaim
$elseif ArgueIsComplete(musselFestReasonStress)
	{@drKelp}	We've already established the stress ranges for the mussels.
    $call ArgueLoad(musselFestReasonChemistry)
	$branch .argue.reasonChemistry
$else
    {@drKelp}	What were the stress ranges for the mussels?
    $call ArgueLoad(musselFestReasonStress)
    $branch .argue.reasonStress
$endif

// Walk player through stress
:: argue.reasonStress
$if ArgueSetClaim(musselFestReasonStressClaim, jobs.kelp-mussel-fest.argue.claimLabelReasonStress)
    $call ArgueFactSlot(Mussel.Temperature.Stressed)
    $call ArgueFactSlot(Mussel.Light.Stressed)
    $call ArgueFactSlot(Mussel.PH.Stressed)
$endif
$call ArgueDisplayClaim()
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.correctFactsReasonStress
    $answer incorrect, .argue.incorrectFactsReasonStress
$choice .argue.giveUpArgument; Let me get back to you

:: argue.correctFactsReasonStress
$call ArgueComplete()
$call ArgueCancelClaim()
// $call ArgueUnload()
{@drKelp}	So, mussels get stressed out when the temperature is below 2 C or above 13 C.   
            They don't like it when the pH goes below 8.0 or above 8.4. 
            And the amount of light doesn't seem to make a difference.
$call ArgueLoad(musselFestReasonChemistry)
$branch .argue.reasonChemistry

:: argue.incorrectFactsReasonStress
{@drKelp}	Hmmm... that doesn't seem right.
$call ArgueRejectIncorrect()
$branch .argue.reasonStress

// Walk player through water chemistry
:: argue.reasonChemistry
$if ArgueSetClaim(musselFestReasonChemistryClaim, jobs.kelp-mussel-fest.argue.claimLabelReasonChemistry)
    $call ArgueFactSlot(WarmKelpForest.Temperature)
    $call ArgueFactSlot(WarmKelpForest.Light)
    $call ArgueFactSlot(WarmKelpForest.PH)
$endif
$call ArgueDisplayClaim()
{@drKelp}	Now compare the mussels' stress levels from the tank with the conditions at site C. 
{@drKelp}	What are the temperature, pH, and light levels at the Warm Kelp Forest?
$choice #argueFactSet; Present facts from AQOS
    $answer correct, .argue.correctFactsReasonChemistry
    $answer incorrect, .argue.incorrectFactsReasonChemistry
$choice .argue.giveUpArgument; Let me get back to you

:: argue.correctFactsReasonChemistry
$call ArgueComplete()
{@drKelp}	Hmmm. So, Site C has 100% light, a temperature of 21 C, and a pH of 8.1
$call ArgueUnload()
$call ArgueCancelClaim()
$call ArgueLoad(musselFestArgueMusselTemp)
$branch .argue.chooseClaim

:: argue.incorrectFactsReasonChemistry
{@drKelp}	Hmmm... that's not really helping us understand the conditions at the site.
$call ArgueRejectIncorrect()
$branch .argue.reasonChemistry

// Allow player to make a claim
::argue.chooseClaim
$call ArgueLoad(musselFestArgueMusselTemp)
{@drKelp}	According to the stress tank, which of these values is too much for our poor mussels?
	$choice .argue.lightOrPHStress; It's the light!
	$choice .argue.tempStress; It's the temperature!
	$choice .argue.lightOrPHStress; It's the pH!
	$choice .argue.giveUp; Let me get back to you
$choose branch

::argue.lightOrPHStress
{@drKelp}	I'm not seeing that connection based on the data we just discussed.
$branch .argue.chooseClaim

:: argue.giveUpArgument
$call ArgueCancelClaim()
$goto .argue.giveUp

:: argue.giveUp
{@drKelp} Okay, Olivia. Get back to me when you're ready.

::argue.tempStress
{@drKelp}	Perfect, Olivia! Looks like the Warm Kelp Forest is too... well, warm. 
{@drKelp}	Hmm. I wonder if the mussels will continue to reproduce.
$call ArgueComplete()
$call CompleteJob()

::end