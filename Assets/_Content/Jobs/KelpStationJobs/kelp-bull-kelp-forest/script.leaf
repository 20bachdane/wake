#basePath   job.kelp-bull-kelp-forest

// beginning

:: start
@trigger    JobStarted
@cutscene
 
{@drKelp}   You already identified all the species at site C.    
{@drKelp}   Now you'll need to find {h}site A{/h} and do the same thing there. 
{@drKelp}   Oh, and let me know if any bull kelp snags on your hull! 
{@drKelp}   I was thinking we could whip up some bull kelp cookies between my next two meetings... 
{@player}   Mom! Aren't you busy enough?
{@drKelp}   Okay, okay. It was just an idea.    

$call UnlockSite(RS-1A)

:: helpGoOutside
@trigger    RequestPartnerHelp
@when 		scene:name == "Helm", JobTaskTop(siteA)
@cutscene
{@player}   Can you remind me what to do next, {nameof @guide}?
{@guide}	Certainly, O. You need to board your sub and head over to Site A.

:: helpWrongSite
@trigger    RequestPartnerHelp
@when       scene:name == "RS-1C", JobTaskTop(siteA)
@cutscene
{@player}   What should I do next, {nameof @guide}?
{@guide}    According to my data, you've taken a job at a different site.  
            You need to surface and navigate your ship to {h}Site A{/h}.

:: helpGoToSiteA
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", JobTaskTop(siteA)
@cutscene
{@player} 	Where should we be going, again?
{@guide}	Head north and look for {h}Site A{/h}.      

// at the site

:: diveSite
@trigger    SceneStart
@when       scene:name == "RS-1A"
@triggerPriority   High
@once
@cutscene
$branch common.ringPhone

{@player}    Wow, the Bull Kelp Forest!
{@player}    My sister used to bring me here when I was a kid.
{@player}    I wonder if Ovid the Otter still lives here. He was my favorite. 
{@guide}    According to my database, otters live an average of 9 years in the wild...
{@guide}    So there is a 10.8% chance that Ovid is still alive!
{@player}   Gee. Thanks, {nameof @guide}.
{@guide}    Don't mention it, O! 
{wait 0.5}
{hide-dialog}

:: helpAtSiteA
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1A", JobTaskTop(siteA)
@cutscene
@once

{@player}    What now, {nameof @guide}?
{@guide}     You need to scan any news species here, and then head back to your ship!
{@player}    Okay. Copy that. 

// to experimentation

::helpGoToLab
@trigger    RequestPartnerHelp
@when 		JobTaskTop(foodweb), scene:name != "ExperimentV2"
@cutscene
{@player} 	What now, {nameof @guide}?
{@guide}	You have completed your task! Now head to your ship's {nameof Experimentation}.

$if scene:name == "RS-1A"
	{@guide}	First you'll need to return to the surface and board your ship.  
$endif

::helpDoExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskTop(foodweb), scene:name == "ExperimentV2"
@cutscene
{@player} 	What should we do now? 
$if ExperimentIsRunning(Observation)
    $branch .helpDoExperiment.InExperiment
$elseif ExperimentViewed(Observation)
    $branch .helpDoExperiment.TankView
$else
    $branch .helpDoExperiment.None
$endif

:: helpDoExperiment.InExperiment
$if ExperimentHasCritter(BullKelp)
    {@guide}    Is anything interacting with the {pluralnameof BullKelp}?
$else
    {@guide}    We need to find out what interacts with the {pluralnameof BUllKelp}.
                Try adding some {pluralname BullKelp} to the tank.
$endif

:: helpDoExperiment.TankView
{@guide}    You've added some {pluralnameof BullKelp}. 
            Now record how the other species interact with it! 
$else
    Start by adding some {pluralnameof BullKelp} to the tank. 
$endif

:: helpDoExperiment.None
{@guide}    You need to find out how the other species interact with the {pluralnameof BullKelp}. 
            Set up an {h}Observation Tank{/h} experiment, like last time.

// report back

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskCompleted(foodweb)
@boostScore 2
@cutscene
{@player} 	Okay, {nameof @guide}. What's next? 
{@guide}	You've found a new relationship between {pluralnameof Urchin} and {pluralnameof BullKelp}.
$if !IsPlayerOnStation()
	{@guide}	Time to report back to the {map-name}station{/map-name}.
$else
	{@guide}	Let's report back to your {nameof @drKelp}.
$endif

// CATCH-ALL GUIDE TEXT

:: catchSiteA
@trigger    RequestPartnerHelp
@when 		JobTaskActive(siteA)
@boostScore -5
@cutscene
{@guide}    Head to {h}Site A{/h} and identify any new species!

:: catchFoodWeb
@trigger    RequestPartnerHelp
@when 		JobTaskActive(foodWeb)
@boostScore -5
@cutscene
{@guide}    Use the Observation Tank to see how Bull Kelp fits into the food web at Site A.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@guide}    Talk to {nameof drKelp} in the research station.

//ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(bullKelpArgue)
@cutscene

$call ArgueLoad(bullKelpArgue)
	$if ArgueSetClaim(bullKelpClaim, jobs.kelp-bull-kelp-forest.argue.claimLabel)
			$call ArgueFactSlot(Urchin.Eats.BullKelp)
	$endif
	
$branch .argue.introQuestion


::argue.introQuestion
{@drKelp} 
Okay, let's dive in!
What behaviors did you learn about {nameof BullKelp} in Site A?
$branch .argue.chooseFacts

::argue.chooseFacts
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
		$answer Urchin.Eats.BullKelp, .argue.done
		$answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you

::argue.unrelated
{@drKelp} No, that doesn't answer my question. Let's try again.
$call ArgueRejectIncorrect()
$call ArgueClearFacts()
$goto .argue.chooseFacts


::argue.giveUp
{@drKelp} Okay, Olivia. Get back to me when you're ready.


::argue.done
$call ArgueComplete()
{@drKelp} Perfect, Olivia! This matches with our findings. 
          Just like at Site C, {pluralnameof SeaOtter} eat the {pluralnameof Urchin}.
And {pluralnameof Urchin} eat the {critter-name}Kelp{/critter-name}!
$call CompleteJob()

// END
:: end
@trigger    JobCompleted
@cutscene
@once

{@drKelp}   Now you've proven that {pluralnameof BullKelp} power the whole forest at Site A...
            And {pluralnameof BullKelp} and {pluralnameof GiantKelp} have the same role in their environments.
            No wonder my colleagues all want your help. You're a natural!
{@player}   Your colleagues??
{@player}   Does that mean I can take a job at another ecosystem?
{@drKelp}   Well... if that's what you want, Mija.
{@drKelp}   But remember, don't take too many risks. You're still so new at this.   
{@player}   Don't worry, Mom. I'll be careful!
{@drKelp}   Okay, then. 
{@drKelp}   Wherever you're going, you'll need to get some upgrades. 
{@drKelp}   Look for your next job on the Job Board, and then stop by your uncle's shop!
{hide-dialog}
{wait 1.5}

{@drKelp}  It looks like you've gotten a lot of {pluralnameof Exp}!
           Why don't you stop by your uncle's shop? 
           You might be able to afford an upgrade! 
$call UnlockRoom("Shop")
$call SetJob(kelp-shop-welcome)