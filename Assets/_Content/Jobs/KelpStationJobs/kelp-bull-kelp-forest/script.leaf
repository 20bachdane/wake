#basePath   job.kelp-bull-kelp-forest

// beginning

:: start
@trigger    JobStarted
@cutscene

$branch common.ringPhone

{@drKelp}	Oh, welcome back, {player-name}! 
            I need you to head over to Site A and see if anything is different there. 
            When you're done, check in with me at your {map-name}Office{/map-name}!

$call UnlockSite(RS-1A)

:: helpGoOutside
@trigger    RequestPartnerHelp
@when 		scene:name == "Ship", JobTaskTop(siteA)
@cutscene
{@player}   Any idea where I should go next?
{@kevin}	Go out to your sub and head over to Site A.

:: helpWrongSite
@trigger    RequestPartnerHelp
@when       scene:name == "RS-1C", JobTaskTop(siteA)
@cutscene
{player}    Is this where we should be?
{@kevin}    No, I don't think so...
            Let's surface and head over to Site A.

:: helpGoToSiteA
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", JobTaskTop(siteA)
@cutscene
{@player} 	Where should we be going again?
{@kevin}	Site A should be just west of the ship.
            Let's head over!

// at the site

:: helpAtSiteA
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1A", JobTaskTop(siteA)
@cutscene
{@player} 	So... what now?
{@kevin}	We need to look around for new species. 

// to experimentation

::helpGoToLab
@trigger    RequestPartnerHelp
@when 		JobTaskTop(foodweb), scene:name != "ExperimentV2"
@cutscene
{@player} 	Where should I go next?
{@kevin}	Now that we've discovered {nameof BullKelp}, let's head back to the {nameof Experimentation}.

$if scene:name == "RS-1A"
	{@kevin}	It's pretty down here and all, but we should head back to the surface. 
$elseif scene:name != "Ship"
	{@kevin}	First, let's head back to the ship.
$endif

::helpDoExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskTop(foodweb), scene:name == "ExperimentV2"
@cutscene
{@player} 	What should we do now? 
$if ExperimentIsRunning(Observation)
    $branch .helpDoExperiment.InExperiment
$elseif ExperimentViewed(Observation)
    $branch .helpDoExperiment.TankView
$else
    $branch .helpDoExperiment.None
$endif

:: helpDoExperiment.InExperiment
$if ExperimentHasCritter(BullKelp)
    {@kevin}    Is anything interacting with the {pluralnameof BullKelp}?
$else
    {@kevin}    Is it possible to get any new information from this experiment?
                I don't see any {pluralname BullKelp} in this tank...
$endif

:: helpDoExperiment.TankView
{@kevin}    We have a new species - let's see if anything we already have interacts with it.
$if ExperimentHasCritter(BullKelp)
    We've added some {pluralnameof BullKelp} - what might it interact with?
$else
    Maybe we should add some {pluralnameof BullKelp}?
$endif

:: helpDoExperiment.None
{@kevin}    We have a new species - let's see if anything we already have interacts with it.
            We should be able to run an {h}Observation Tank{/h} experiment like last time.

// report back

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskCompleted(foodweb)
@boostScore 2
@cutscene
{@player} 	What should we do now?
{@kevin}	We've found a new relationship between {pluralnameof Urchin} and {pluralnameof BullKelp}. So let's report back to Kel.
$if global:nav.shipRoom != "office"
	{@kevin}	We should first head back to the {map-name}Office{/map-name}.
$else
	{@kevin}	Just like last time, you can report your findings using the {h}Computer{/h}.
$endif

//ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(bullKelpArgue)
@cutscene

$call ArgueLoad(bullKelpArgue)
	$if ArgueSetClaim(bullKelpClaim, jobs.kelp-bull-kelp-forest.argue.claimLabel)
			$call ArgueFactSlot(Urchin.Eats.BullKelp)
	$endif
	
$branch .argue.introQuestion


::argue.introQuestion
{@drKelp} It seems you are really getting the hang of this scientist thing!
So what did you two learn about {nameof BullKelp} in Site A?

{@drKelp} Did you do any experiments to see if {nameof BullKelp} eat any other species?
Or are eaten by any other species?
$branch .argue.chooseFacts

::argue.chooseFacts
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
		$answer Urchin.Eats.BullKelp, .argue.done
		$answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you

::argue.unrelated
{@drKelp} No, that doesn't answer my question. Let's try again.
$call ArgueRejectIncorrect()
$goto .argue.chooseFacts


::argue.giveUp
{@drKelp} OK.  Get back to me when you're ready.


::argue.done
$call ArgueComplete()
{@drKelp} Aha! So just like at Site C, {pluralnameof SeaOtter} eat the {pluralnameof Urchin}.
And {pluralnameof Urchin} eat the {critter-name}Kelp{/critter-name}!
$call CompleteJob()



// END

:: end
@trigger    JobCompleted
@cutscene

{@drKelp}  Nice work!
            You've learned that {pluralnameof BullKelp} power the whole forest at Site A.
{@player}   Yeah, it's interesting how both {pluralnameof BullKelp} and {pluralnameof GiantKelp} seem to have the same role in their environments.
{@drKelp}  Indeed! Finding those parallels can be quite rewarding.
            For now, though, you should head back to the {map-name}Job Board{/map-name}.
            I have another job for you.
$call UnlockStation(CoralStation)