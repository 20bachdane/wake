#basePath   job.kelp-bull-kelp-forest

// beginning

:: start
@trigger    JobStarted
@cutscene

$branch common.ringPhone

{@drKelp}	Oh, welcome back, {player-name}! 
{@drKelp}   I need you to head over to {h}site A{/h} and see if anything is different there. 
{@drKelp}   When you're done, check in with me at the {m}research station{/m}!

$call UnlockSite(RS-1A)

:: helpGoOutside
@trigger    RequestPartnerHelp
@when 		scene:name == "Helm", JobTaskTop(siteA)
@cutscene
{@player}   Any idea where I should go next?
{@guide}	Go out to your sub and head over to Site A.

:: helpWrongSite
@trigger    RequestPartnerHelp
@when       scene:name == "RS-1C", JobTaskTop(siteA)
@cutscene
{@player}    Is this where we should be?
{@guide}    No, I don't think so...
            Let's surface and head over to {h}Site A{/h}.

:: helpGoToSiteA
@trigger    RequestPartnerHelp
@when 		scene:name == "KelpStation", JobTaskTop(siteA)
@cutscene
{@player} 	Where should we be going again?
{@guide}	{h}Site A{/h} should be at the northernmost buoy.
            Let's head over!

// at the site

:: helpAtSiteA
@trigger    RequestPartnerHelp
@when 		scene:name == "RS-1A", JobTaskTop(siteA)
@cutscene
{@player} 	So... what now?
{@guide}	We need to look around for this so called... Bull Kelp. 

// to experimentation

::helpGoToLab
@trigger    RequestPartnerHelp
@when 		JobTaskTop(foodweb), scene:name != "ExperimentV2"
@cutscene
{@player} 	Where should I go next?
{@guide}	Now that we've discovered {nameof BullKelp}, let's head back to the {nameof Experimentation}.

$if scene:name == "RS-1A"
	{@guide}	It's pretty down here and all, but we should head back to the surface. 
$endif

::helpDoExperiment
@trigger    RequestPartnerHelp
@when 		JobTaskTop(foodweb), scene:name == "ExperimentV2"
@cutscene
{@player} 	What should we do now? 
$if ExperimentIsRunning(Observation)
    $branch .helpDoExperiment.InExperiment
$elseif ExperimentViewed(Observation)
    $branch .helpDoExperiment.TankView
$else
    $branch .helpDoExperiment.None
$endif

:: helpDoExperiment.InExperiment
$if ExperimentHasCritter(BullKelp)
    {@guide}    Is anything interacting with the {pluralnameof BullKelp}?
$else
    {@guide}    Is it possible to get any new information from this experiment?
                I don't see any {pluralname BullKelp} in this tank...
$endif

:: helpDoExperiment.TankView
{@guide}    We have a new species - let's see if anything we already have interacts with it.
$if ExperimentHasCritter(BullKelp)
    We've added some {pluralnameof BullKelp} - what might it interact with?
$else
    Maybe we should add some {pluralnameof BullKelp}?
$endif

:: helpDoExperiment.None
{@guide}    We have a new species - let's see if anything we already have interacts with it.
            We should be able to run an {h}Observation Tank{/h} experiment like last time.

// report back

:: helpReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskCompleted(foodweb)
@boostScore 2
@cutscene
{@player} 	What should we do now?
{@guide}	We've found a new relationship between {pluralnameof Urchin} and {pluralnameof BullKelp}. So let's report back to Kel.
$if !IsPlayerOnStation()
	{@guide}	We should first head back to the {m}research station{/m}.
$endif

// CATCH-ALL GUIDE TEXT

:: catchSiteA
@trigger    RequestPartnerHelp
@when 		JobTaskActive(siteA)
@boostScore -5
@cutscene
{@guide}    Head to Site A to discover any new species.

:: catchFoodWeb
@trigger    RequestPartnerHelp
@when 		JobTaskActive(foodWeb)
@boostScore -5
@cutscene
{@guide}    Use the Observation Tank to see how Bull Kelp fits into the food web at Site A.

:: catchReportBack
@trigger    RequestPartnerHelp
@when 		JobTaskActive(reportBack)
@boostScore -5
@cutscene
{@guide}    Talk to {nameof drKelp} in the research station.

//ARGUMENTATION

::argue.intro
@trigger    TryArgumentation
@when   !ArgueIsComplete(bullKelpArgue)
@cutscene

$call ArgueLoad(bullKelpArgue)
	$if ArgueSetClaim(bullKelpClaim, jobs.kelp-bull-kelp-forest.argue.claimLabel)
			$call ArgueFactSlot(Urchin.Eats.BullKelp)
	$endif
	
$branch .argue.introQuestion


::argue.introQuestion
{@drKelp} It seems you are really getting the hang of this scientist thing!
So what did you two learn about {nameof BullKelp} in Site A?

{@drKelp} Did you do any experiments to see if {nameof BullKelp} eat any other species?
Or are eaten by any other species?
$branch .argue.chooseFacts

::argue.chooseFacts
$call ArgueDisplayClaim()
$choice #argueFact; Present facts from AQOS
		$answer Urchin.Eats.BullKelp, .argue.done
		$answer *, .argue.unrelated
$choice .argue.giveUp; Let me get back to you

::argue.unrelated
{@drKelp} No, that doesn't answer my question. Let's try again.
$call ArgueRejectIncorrect()
$call ArgueClearFacts()
$goto .argue.chooseFacts


::argue.giveUp
{@drKelp} OK.  Get back to me when you're ready.


::argue.done
$call ArgueComplete()
{@drKelp} Aha! So just like at Site C, {pluralnameof SeaOtter} eat the {pluralnameof Urchin}.
And {pluralnameof Urchin} eat the {critter-name}Kelp{/critter-name}!
$call CompleteJob()

// END
:: end
@trigger    JobCompleted
@cutscene
@once

{@drKelp}  Nice work!
            You've learned that {pluralnameof BullKelp} power the whole forest at Site A.
{@player}   Yeah, it's interesting how both {pluralnameof BullKelp} and {pluralnameof GiantKelp} seem to have the same role in their environments.
{@drKelp}   Indeed! Finding those parallels can be quite rewarding.
            You're doing some excellent work for us! I have some colleagues in other parts of the ocean that would love some help.
{@guide}	Oh, the extra cash would be great!
{@drKelp}	Yep! Maybe they'll have work for you too!
            I'll reach out to them and get back to you soon with the coordinates of their stations.
{hide-dialog}
{wait 1.5}

{@guide}    You know, I think we've gotten a lot of {pluralnameof Exp}!
            Before we head out, we might wanna upgrade our ship with some of our earnings.
            I hear there's a mechanic right off the dock that can upgrade our ship. Maybe we should check them out?
$call UnlockRoom("Shop")
$call SetJob(kelp-shop-welcome)