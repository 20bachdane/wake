#basePath   job.kelp-start-refuge

:: start
@trigger    JobStarted
@cutscene

$branch common.ringPhone

{@drKelp}	Hello again, {player-name}!
{@drKelp}	We need to figure out what conditions would make a good site for both Bull Kelp and Giant Kelp.
			Your new {nameof StressTank} should be able to tell us what environments the different types of kelp can handle. 

:: helpToExperiment
@trigger    RequestPartnerHelp
@when 		scene:name != "ExperimentV2", !jobs:kelp-start-refuge.seen.bottom
@cutscene
{@player}   Where should I go from here?
{@guide}	Remember, you can use the {nameof StressTank} in the experiment room to figure out what conditions stress a species.

:: helpAtExperiment
@trigger    RequestPartnerHelp
@when 		scene:name == "ExperimentV2"
@cutscene
{@player} 	Any idea what we should try?
{@guide}	Let's check out how kelp do in the stress tank.

:: experimentContinue
@trigger    JobTasksUpdated
@when 		!JobTaskTop(argueSite)
@once
@cutscene
{@guide}	Nice!
{@guide}	There's still one other species of kelp we need to test in the stress tank.

:: experimentEnd
@trigger    JobTasksUpdated
@when 		JobTaskTop(argueSite)
@once
@cutscene
{@guide}	Fantastic! Head to the communications room, where you can advise {nameof drKelp} about a suitable environment for a kelp refuge.

// CATCH-ALL GUIDE TEXT

:: catchGetBullKelpStress
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getBullKelpStress)
@boostScore -5
@cutscene
{@guide}   	Drop some {nameof BullKelp} into the Stress Tank and fiddle with the dials.

:: catchGetGiantKelpStress
@trigger    RequestPartnerHelp
@when 		JobTaskActive(getGiantKelpStress)
@boostScore -5
@cutscene
{@guide}	Drop some {nameof GiantKelp} into the Stress Tank and fiddle with the dials.

:: catchArgueSite
@trigger    RequestPartnerHelp
@when 		JobTaskActive(argueSite)
@boostScore -5
@cutscene
{@guide}    Make a decision about which site to use as a refuge and tell {@drKelp}.

// ARGUMENTATION

::argue.chooseClaim
@trigger    TryArgumentation
@when   !ArgueIsComplete(startRefugeArgue)
@cutscene
$call ArgueLoad(startRefugeArgue)
{@drKelp}	We've already narrowed it down to a few candidates.
			Which bay is ideal for establishing the refuge?
	$choice .argue.site1; Potential Site 1 (Temp 2°C; Light 60%)
	$choice .argue.site2; Potential Site 2 (Temp 20°C; Light 100%)
	$choice .argue.site3; Potential Site 3 (Temp 13°C; Light 100%)
	$choice .argue.giveUp; Let me get back to you
$choose branch


::argue.site1
{@drKelp}	Hmmmm... This is way too cold for Giant Kelp, even if there is enough light.

::argue.site2
{@drKelp}	The bull kelp will boil here! Although... There is plenty of light.

::argue.site3
{@drKelp}	Wow, this looks promising! What are the relevant stress ranges for the Bull Kelp and Giant Kelp?
$if ArgueSetClaim(startRefugeArgueClaim, jobs.kelp-start-refuge.argue.claimLabel)
			$call ArgueFactSlot(GiantKelp.Light.Stressed)
			$call ArgueFactSlot(GiantKelp.Temperature.Stressed)
			$call ArgueFactSlot(BullKelp.Light.Stressed)
			$call ArgueFactSlot(BullKelp.Temperature.Stressed)
$endif
$call ArgueDisplayClaim()
$goto .argue.defendClaim

::argue.defendClaim
$if ArgueAllFactsCorrect()
    $goto .argue.correctFacts
$else
	$choice #argueFactSet; Present facts from AQOS
			$answer correct, .argue.correctFacts
			$answer incorrect, .argue.incorrectFacts
	$choice .argue.giveUp; Let me get back to you
$endif

:: argue.correctFacts
$call ArgueComplete()
{@drKelp}	That does it! Site 3 should work well for both types of Kelp.
$call CompleteJob()
// Unlock Mixed Kelp Refuge Site
$call UnlockSite(RS-1D)

:: argue.incorrectFacts
{@drKelp} That doesn't work. We need to be sure that the light and temperature work for both Giant Kelp and Bull Kelp.
$call ArgueRejectIncorrect()
$goto .argue.defendClaim

:: argue.giveUp
{@drKelp} OK. Get back to me when you're ready.

// END

:: end