# basePath words

:: eat
eats

:: isEatenBy
is eaten by

:: catch
catches

:: isCaughtBy
is caught by

:: stresses
stresses

:: isStressedBy
is stressed by

:: produce
produces

:: consume
consumes

:: reduce
reduces

:: reproduce
reproduces

:: reproduce.disabled
stops reproducing

:: death
dies

:: grow
grows

:: whenStressed
when stressed

:: uncertainQuantity
some

:: uncertainQuantity.cap
Some

:: less
less

:: less.cap
Less

:: fewer
fewer

:: fewer.cap
Fewer

:: more
more

:: more.cap
More

:: slower
slower

:: slower.cap
Slower

:: faster
faster

:: faster.cap
Faster

:: sameAmount
the same amount

:: sameAmount.cap
The same amount

:: sameRate
at the same rate

:: sameRate.cap
At the same rate

:: flatGraph.label
Stable

:: flatGraph.lower
been stable

:: increaseGraph.label
Increasing

:: increaseGraph.lower
been increasing

:: decreaseGraph.label
Decreasing

:: decreaseGraph.lower
been decreasing

:: cycleGraph.label
Cycling

:: cycleGraph.lower
been cycling

# basePath fact

:: whenStressed.label
When Stressed

:: behavior.header
Behavior Report

:: state.header
Environmental Tolerance Report

:: population.header
Population Report

:: populationHistory.header
Historical Population Report

:: waterChem.header
Water Chemistry Report

:: waterChemHistory.header
Historical Water Chemistry Report

:: visualModel.header
Visual Model Report

:: descriptiveModel.header
Descriptive Model Report

:: predictionModel.header
Predictive Model Report

:: interveneModel.header
Intervention Model Report

# basePath factFormat

:: eat
{critter-name}{0}{/critter-name} eats {critter-name}{1}{/critter-name}.

:: eat.rate
{critter-name}{0}{/critter-name} eats {1} {critter-name}{2}{/critter-name}.

:: eat.stressed
{critter-name}{0}{/critter-name} eats {critter-name}{1}{/critter-name} when stressed.

:: eat.stressed.rate
{critter-name}{0}{/critter-name} eats {1} {critter-name}{2}{/critter-name} when stressed.

:: catch
{critter-name}{0}{/critter-name} catches {1} {critter-name}{2}{/critter-name}.

:: stresses
{critter-name}{0}{/critter-name} stresses {1} {critter-name}{2}{critter-name}.

:: produce
{critter-name}{0}{/critter-name} produces {property-name}{1}{/property-name}.

:: produce.stressed
{critter-name}{0}{/critter-name} produces {property-name}{2}{/property-name} {1} when stressed.

:: consume
{critter-name}{0}{/critter-name} consumes {property-name}{1}{/property-name}.

:: consume.stressed
{critter-name}{0}{/critter-name} consumes {property-name}{2}{/property-name} {1} when stressed.

:: reduce
{critter-name}{0}{/critter-name} reduces {property-name}{1}{/property-name}.

:: reduces.stressed
{critter-name}{0}{/critter-name} reduces {property-name}{2}{/property-name} {1} when stressed.

:: reproduce
{critter-name}{0}{/critter-name} reproduces.

:: reproduce.disabled
{critter-name}{0}{/critter-name} does not reproduce.

:: reproduce.stressed
{critter-name}{0}{/critter-name} reproduces {1} when stressed.

:: reproduce.stressed.disabled
{critter-name}{0}{/critter-name} stops reproducing when stressed.

:: grow
{critter-name}{0}{/critter-name} grows.

:: grow.stressed
{critter-name}{0}{/critter-name} grows {1} when stressed.

:: population
There are {0} {critter-name}{1}{/critter-name} at {env-name}{2}{/env-name}.

:: population.herd
There are {0} {critter-name}{1}{/critter-name} at {env-name}{2}{/env-name}.

:: populationHistory
The {critter-name}{0}{/critter-name} population at {env-name}{1}{/env-name} has {2} over the past {3} years.

