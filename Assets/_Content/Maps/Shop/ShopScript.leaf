# basePath shop

#const MerchantId = @merchant

// purchase

:: purchaseAttempt.generic
@trigger    ShopAttemptBuy
@cutscene

// if player doesn't have enough exp
$if player:exp < local:expCost
    // hack for subtraction
    $set    local:needExp = local:expCost
    $set    local:needExp - player:exp

    $set    shop:lastFailure = local:itemId
    $set    shop:lastFailureReason = "exp"
    $set    player:hasAttemptedPurchaseUnderleveled = local:itemId

    {$MerchantId} Oh, {random you want|you're interested in} the {nameof $local:itemId}?
                {random I'm sorry|My apologies}|, but you'll need {exp}{$local:needExp}{/exp} more before I'll sell that to you.
    $stop
$endif

$if local:cashCost > 0
    {$MerchantId} Ah, {random you want|you're interested in} the {nameof $local:itemId}?\
    That'll be {cash}{$local:cashCost}{/cash}!

    $choice .purchaseAttempt.generic.success, CanAffordItem($local:itemId); {h}I'll take it! (Purchase){/h}
    $choice .purchaseAttempt.generic.cantAfford, !CanAffordItem($local:itemId); ...Yes?
$else
    {$MerchantId} Ah, {random you want|you're interested in} the {nameof $local:itemId}?

    $choice .purchaseAttempt.generic.success; {h}I'll take it! (Install){/h}
$endif

$choice .purchaseAttempt.generic.refused; Just looking!

$choose branch

:: purchaseAttempt.generic.success

$set    shop:lastFailure = null
$set    shop:lastFailureReason = null

$if Random(50)
    {$MerchantId} A fine choice!
$elseif Random(50)
    {$MerchantId} Good call!
$else
    {$MerchantId} It's yours!
$endif

$if player:hasAttemptedPurchaseNoCash == local:itemId
    $set player:hasAttemptedPurchaseNoCash = null
$endif

$if player:hasAttemptedPurchaseUnderleveled == local:itemId
    $set player:hasAttemptedPurchaseUnderleveled = null
$endif

$set    shop:purchaseCount + 1

$if player:shopFreeCoolDown > 0
    $set player:shopFreeCoolDown - 1
$endif

$call AudioOneShot(ShopPurchase)
$call PurchaseItem($local:itemId)

:: purchaseAttempt.generic.cantAfford

$set    shop:lastFailure = local:itemId
$set    shop:lastFailureReason = "cash"
$set    player:hasAttemptedPurchaseNoCash = local:itemId

$set    shop:notEnoughCount + 1
{$MerchantId} {random I'm sorry|So sorry}|, but you seem to be light in the wallet.
            Come back when you have enough!

:: purchaseAttempt.generic.refused

{$MerchantId} Okay! Well if you find something you want, let me know.

// specialized purchase dialog
:: purchaseAttempt.ROVTagger
@trigger    ShopAttemptBuy
@when       itemId == "ROVTagger"
@cutscene
{$MerchantId} Ahh the {nameof ROVTagger},| A wise choice!
{$MerchantId} You should see the {nameof ROVTagger} at the top of your view.  
{$MerchantId} If you switch it on and move close to a scanned species, the {nameof ROVTagger} will {h}count{/h} it.
{$MerchantId} Count enough of them and your {nameof ROVTagger} will do the rest and give you a population estimate.
{@guide} That's super convenient! We should definitely get this!
$set    jobs:common-dive.seen.tagger-intro = true

$if UpgradeUnlocksJobAtStation(ROVTagger, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(ROVTagger, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(ROVTagger, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(ROVTagger, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.propGuard
@trigger    ShopAttemptBuy
@when       itemId == "PropGuard"
@cutscene
{$MerchantId} The {nameof PropGuard}! A wise choice!
            You don't want your propeller getting tangled up out there when moving through thick vegetation!

$if UpgradeUnlocksJobAtStation(PropGuard, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(PropGuard, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(PropGuard, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(PropGuard, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.flashlight
@trigger    ShopAttemptBuy
@when       itemId == "Flashlight"
@cutscene
{$MerchantId} Nice, I see you're looking at the {nameof Flashlight}!
            The ocean can get pretty dark out there, and who knows what's hiding in it?

$if UpgradeUnlocksJobAtStation(Flashlight, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(Flashlight, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(Flashlight, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(Flashlight, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.probeHacker
@trigger    ShopAttemptBuy
@when       itemId == "ProbeHacker"
@cutscene
{$MerchantId} I see you're looking at the {nameof ProbeHacker}!
            This little gizmo will allow you to read data from any probes you find at the dive sites.

$if UpgradeUnlocksJobAtStation(ProbeHacker, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(ProbeHacker, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(ProbeHacker, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(ProbeHacker, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.engine
@trigger    ShopAttemptBuy
@when       itemId == "Engine"
@cutscene
{$MerchantId} I see you're a person of taste! The {nameof Engine} is a very powerful engine!
            With it, you'll be able to move against strong undersea currents!

$if UpgradeUnlocksJobAtStation(Engine, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(Engine, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(Engine, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(Engine, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.hull
@trigger    ShopAttemptBuy
@when       itemId == "Hull"
@cutscene
{$MerchantId} Oh, you're looking to venture {h}deep{/h}? Then the {nameof Hull} should be your next purchase!
            With this plating, your sub will be able to withstand much more pressure!

$if UpgradeUnlocksJobAtStation(Hull, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(Hull, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(Hull, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(Hull, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.stressTank
@trigger    ShopAttemptBuy
@when       itemId == "StressTank"
@cutscene
{$MerchantId} Oh, the {nameof $local:itemId} can be used to measure the stress ranges of different creatures.

$if UpgradeUnlocksJobAtStation(StressTank, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(StressTank, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(StressTank, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(StressTank, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.measurementTank
@trigger    ShopAttemptBuy
@when       itemId == "MeasurementTank"
@cutscene
{$MerchantId} Ah, the {nameof $local:itemId} can be used to measure the eating and reproduction rates of different creatures.

$if UpgradeUnlocksJobAtStation(MeasurementTank, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(MeasurementTank, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(MeasurementTank, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(MeasurementTank, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.visualModel
@trigger    ShopAttemptBuy
@when       itemId == "VisualModel"
@cutscene
{$MerchantId} The {nameof $local:itemId} can be used at the {map-name}Modeling Whiteboard{/map-name}.
            It is used to create visualizations of the different connections between species.
{@guide}    Hmmm. I feel like this could come in handy later...
            I think we should purchase this item.

$if UpgradeUnlocksJobAtStation(VisualModel, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(VisualModel, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(VisualModel, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(VisualModel, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.predictionModel
@trigger    ShopAttemptBuy
@when       itemId == "PredictionModel"
@cutscene
{$MerchantId} The {nameof $local:itemId} can be used at the {map-name}Modeling Whiteboard{/map-name}.
            It is used to create predictions for creatures in different ecosystems.

$if UpgradeUnlocksJobAtStation(PredictionModel, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(PredictionModel, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(PredictionModel, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(PredictionModel, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.interveneModel
@trigger    ShopAttemptBuy
@when       itemId == "InterveneModel"
@cutscene
{$MerchantId} Ah, the {nameof $local:itemId} can be used at the {map-name}Modeling Whiteboard{/map-name}.
            It is used to model the outcomes of potential interventions for different ecosystems.

$if UpgradeUnlocksJobAtStation(InterveneModel, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(InterveneModel, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(InterveneModel, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(InterveneModel, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.iceBreaker
@trigger    ShopAttemptBuy
@when       itemId == "Icebreaker"
@cutscene
{$MerchantId} Been wondering when you'd take a look at that! The {nameof Icebreaker} is a powerful drill!
$if player:currentStation != "ArcticStation"
            It can destroy chunks of ice and open passageways for you. A wise choice if you plan on visiting the {nameof ArcticStation}!
$else
            It can destroy chunks of ice and open passageways for you. A wise choice if you're going to explore the chilly waters below us!
$endif

$if UpgradeUnlocksJobAtStation(Icebreaker, KelpStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}KelpForest{/h}!
$elseif UpgradeUnlocksJobAtStation(Icebreaker, CoralStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Coral Reef{/h}!
$elseif UpgradeUnlocksJobAtStation(Icebreaker, BayouStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs in the {h}Bayou{/h}!
$elseif UpgradeUnlocksJobAtStation(Icebreaker, ArcticStation)
    {$MerchantId} {random Woah,|As an added bonus,|And I happen to know that} this would unlock some jobs at the {h}Arctic Station{/h}!
$endif
$branch .purchaseAttempt.genericCostLine

:: purchaseAttempt.genericCostLine

// if player doesn't have enough exp
$if player:exp < local:expCost
    // hack for subtraction
    $set    local:needExp = local:expCost
    $set    local:needExp - player:exp

    $set    shop:lastFailure = local:itemId
    $set    shop:lastFailureReason = "exp"
    $set    player:hasAttemptedPurchaseUnderleveled = local:itemId

    {$MerchantId} Oh, {random I'm sorry|my apologies}... You'll need {exp}{$local:needExp}{/exp} more before I'll sell that to you.
    $stop
$endif

$if local:cashCost > 0
    {$MerchantId} {random So, do you want the|Still interested in the} {nameof $local:itemId}?\
    It'll be {cash}{$local:cashCost}{/cash}!
    
    $choice .purchaseAttempt.generic.success, CanAffordItem($local:itemId); {h}Yes! (Purchase){/h}
    $choice .purchaseAttempt.generic.cantAfford, !CanAffordItem($local:itemId); ...Yes?
$else
    {$MerchantId} {random So, do you want the|Still interested in the} {nameof $local:itemId}?
    
    $choice .purchaseAttempt.generic.success; {h}Yes! (Install){/h}
$endif

$choice .purchaseAttempt.generic.refused; Just looking!

// generosity

// :: generosity

// $set    local:donation = -50
// $set    local:donation * player:shopFreeCount
// $set    local:donation + 300

// $if player:shopFreeCount == 0
//     {$MerchantId} Not for free, but... ah, you look trustworthy enough.
//     $branch .giveCash
//         Here, take {cash}{$local:donation}{/cash}.
//         Just, uh, don't tell anyone. It'd be bad for business.
// $elseif player:shopFreeCount == 2
//     {$MerchantId} Ehhhh... okay. You're fairly loyal customers.
//     $branch .giveCash
//         Here's {cash}{$local:donation}{/cash}. Don't spend it anywhere else.
// $elseif player:shopFreeCount == 3
//     {$MerchantId} ...Okay. Sure. You're a recurring customer.
//     $branch .giveCash
//         Take this. It's {cash}{$local:donation}{/cash}. But please don't ask me again.
// $else
//     {$MerchantId} ...
//     $branch .giveCash
//         Here's {cash}{$local:donation}{/cash}.
//         Don't ever ask me again.
// $endif

// $set player:shopFreeCoolDown = 0
// $set player:shopFreeCount + 1

// :: giveCash
// $call AudioOneShot(ShopPurchase)
// $call GiveItem(Cash, $local:donation)
// $set  shop:hasDonated = true