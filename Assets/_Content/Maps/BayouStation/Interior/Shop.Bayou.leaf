# basePath interior.shop.bayou

#include "Headers/Common.leaf"

#const MerchantId = bayouMechanic
#const UnlockHintNodeId = .unlockHintSomewhere
#const UnlockHintHereNodeId = .unlockHintHere
#const LowExpNodeId = .lowExp
#const FreeItemPromptId = .freeItem
#const CostItemPromptId = .costItem
#const CancelNodeId = .cancel
#const NotEnoughCashNodeId = .notEnoughCash
#const PurchaseNodeId = .purchased

#include "Headers/CommonShop.leaf"

// Intros

#ShopLockedHandler(a)
@boostScore -100
{@$MerchantId} Sorry, shop's closed!
               I need to go grab a coffee. Or an energy drink.
               Maybe both. 
               But definitely stop by soon! 

#ShopHandler(first)
@boostScore 100
@once
{@$MerchantId}  Hey! You're O, right? I'm SO glad you're here. 
                {nameof @profBayou} and {nameof @bayouSci} have been driving me crazy.
                And our comms hub blew up, so I have LITERALLY no one else to talk to.   
{@player}       Ha. My mom would say they need a mental health break. Maybe some ginger-kelp cookies.  
                How'd you know my name?  
{@$MerchantId}  Oh... I hope this isn't weird, but I'm a huge fan of your sister.
                I got to meet her once, at an event for girls in oceanic tech. 
                She even gave me this necklace! It's a fossil she found while she was tracking whales in Antartica.
{@player}       Oh, I remember that! She was gone for weeks.  
                I was scared that Mer wouldn't come home, but Mom said I was being silly. 
{@$MerchantId}  You must really miss her.
                I used to have an article about her taped up on my wall. I can try to dig it up, if you want.
{@player}       That would be amazing. Thank you. 
{@$MerchantId}  Well... I've probably rambled enough. Wanna take a look at my shop?   
$set jobs:bayou-mechanic.trackBayou = true
$set jobs:bayou-mechanic.leftBayou = false
$set jobs:bayou-mechanic.givenArticle = false
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now!

// Default case
#ShopHandler(a)
    {@$MerchantId} Hey! Welcome back, O. Wanna take a look around?
    $choice .action.openShop; Sure!
    $choice .action.cancel; Not right now.
$endif

#ShopHandler(gotFlashlight, world:shop.boughtFlashlightFrom == "bayou", HasUpgrade("Flashlight"))
@once
{@$MerchantId} Hey, you're back O! And you found the {nameof Flashlight}!
                Told ya you could handle it.
              So, wanna take a look around?
$choice .action.openShop; Sure!
$choice .action.cancel; Not right now.

:: action.cancel
@cutscene
{@$MerchantId}  No prob.| You know where to find me!

#ShopHandler(jobs:bayou-mechanic.trackBayou, jobs:bayou-mechanic.leftBayou)
@boostScore 10
@once
// STORY BEAT D
{@$MerchantId}  O, you're back! Want some coffee?
{@player}       Nah... I haven't been sleeping the best lately.
{@$MerchantId}  Ugh. Same here.  
                I'm almost done rigging up our new comms array.
{@player}       Wait... you're building the new communications hub alone? Don't you need some help? 
{@$MerchantId}  Nah. I got this, O.
                Your sister built an experimental deep-sea probe with long-range comms all by herself. 
                A new comms setup should be a piece of cake. 
                And that reminds me. I found that article about your sister! 
                She was amazing. You're so lucky you get to follow in her footsteps.
{@player}       Oh. I... never really thought about it like that. 
                Is it okay if I borrow the article?  
{@$MerchantId}  You keep it, O. It's the least I can do. 
$set jobs:bayou-mechanic.trackBayou = false
$set jobs:bayou-mechanic.givenArticle = true
{@$MerchantId}  Wanna take a look around my shop?
$choice .action.openShop; Sure, thanks!
$choice .action.cancel; Not right now!


// Generic

:: unlockHintHere
{@$MerchantId}   {random Oh, |Just so you know,} this would unlock a {h}Job{/h} here at the Bayou!

:: unlockHintSomewhere
{@$MerchantId}   {random Hey,|As a bonus,} this would unlock some jobs over at the {nameof $local:hintStation}!

:: lowExp
{@$MerchantId}   Oh, {random hang on|sorry}... you don't have enough {exp}experience{/exp} for this one yet. 

:: freeItem
{@$MerchantId}   So, want the {nameof $local:itemId}? Free to a good home!

:: costItem
{@$MerchantId}   Want to buy the {nameof $local:itemId}? \
                 Only {cash}{$local:cashCost}{/cash}.

:: cancel
{@$MerchantId}   No problem, O. Come back anytime! 

:: notEnoughCash
{@$MerchantId}   Sorry, O. Wish I could give you this one, but you'll need more cash. 

:: purchased
{@$MerchantId}   {random Sweet!|Awesome.|Okay, it's yours!}

// Idle

#OpenHandler(a)
{@$MerchantId} Anything shiny catch your eye?  

#OpenHandler(b)
{@$MerchantId}  So what'll it be, O? 

#CloseHandler(a)
{@$MerchantId}  Thanks, O! 

#CloseHandler(purchased, shop:purchaseCount)
@boostScore 10
{@$MerchantId}  Come back anytime!

#CloseHandler(notEnoughCash, shop:notEnoughCount)
{@$MerchantId}  Come back when you've got more {pluralnameof Cash}! 
                I'll be here. Probably super caffeinated. 

#CloseHandler(notEnoughExp, shop:needsExpCount)
{@$MerchantId}  Come back when you've got more {exp}experience{/exp}! 
                Or just when you want a break from all the passive-aggressive bickering... that'd work too. 

#OpenExplorationHandler(a)
{@$MerchantId}  I've got the best sub upgrades around! Anything you want?  

#OpenExplorationHandler(b)
{@$MerchantId}  Beautiful, huh? Let me know if anything catches your eye!

#OpenScienceHandler(a)
{@$MerchantId}  Need any new experimentation tools? I didn't make most of these, but I can tell you how they work. 

#OpenScienceHandler(b)
{@$MerchantId}  Want to add some shiny new stuff to your lab? It's all top-of-the-line. 

// Exploration

#ItemHandler(ROVTagger)
{@$MerchantId}  The {nameof ROVTagger}!
                When you're in your sub, it'll show up at the top of your view. 
                If you switch it on and move close to a species you've already scanned, the {nameof ROVTagger} will {h}count{/h} it.
                Count enough of them and it'll estimate the local population. Pretty useful, huh? 
$set    jobs:common-dive.seen.tagger-intro = true
$EvaluateItemPurchase()

#OverrideItemHandler(FlashlightCoordinates, flashlight.first)
@boostScore 100
@once
{@$MerchantId}  The {nameof Flashlight}!
                Every explorer should have one of these. 
                Unless you want to end up lost in the Lower Depths with no light...
                Been there, done that, don't recommend it.
$set local:postPurchaseBranch = "interior.shop.bayou.PostFlashlight"
$EvaluateItemPurchase()

#ItemHandler(FlashlightCoordinates)
{@$MerchantId}  That's the {nameof Flashlight}!
                Definitely worth the money, if you've got it.
$set local:postPurchaseBranch = "interior.shop.bayou.PostFlashlight"
$EvaluateItemPurchase()

:: PostFlashlight
$set    world:flashlightQuest = true
$set    world:shop.boughtFlashlightFrom = "bayou"
{@bayouMechanic}    Let me just... hang on.| Didn't {nameof @coralMechanic} have it last?
                    Oh yeah. Sorry, O. I think {nameof @coralMechanic} borrowed the {nameof FLashlight} from your uncle... 
                    And then she dropped it near {nameof FinalStation}.
                    I swear, your uncle is a saint. If somebody dropped my high-tech gear, I would NOT be so nice about it.
{@player}           So... the flashlight's gone?
{@bayouMechanic}    Nah. Just lost. I'm sure you can find it!
                    I mean... as long as you're not scared of the dark. 

$call UnlockSite(RS-0)
$call UnlockStation(FinalStation)
$call ShowPopup(map.unlock.finalStation.header, map.unlock.finalStation.desc)

#ItemHandler(ProbeHacker)
{@$MerchantId}  The {nameof ProbeHacker}! 
                Your sister and your uncle designed this one. I swear, your family is the coolest. 
                Use the {nameof ProbeHacker} to obtain data from any {h}probes{/h} you find out there.
                You'll need historical data for a lot of your jobs, so this one's a must. 
$EvaluateItemPurchase()

#ItemHandler(Microscope)
{@$MerchantId}  The {nameof Microscope}!
                Use it to see and scan all the microscopic critters out there. 
                Sometimes they're cute. Most of the time they're creepy.
                Either way, you're gonna need to see 'em eventually. 
$EvaluateItemPurchase()

// Navigation

#ItemHandler(PropGuard)
{@$MerchantId}  The {nameof PropGuard}!
                This is a super important upgrade, especially if you like going off the beaten path.
                Or... um... the beaten... current?
                Anyway, use this to stop your propeller from getting tangled up in thick vegetation. 
$EvaluateItemPurchase()

#ItemHandler(Engine)
{@$MerchantId}  The {nameof Engine}!
                Love, love, love this one.
                It's strong enough to help you move against strong currents.
                Just be careful... it's pretty powerful. 
$EvaluateItemPurchase()

#ItemHandler(Hull)
{@$MerchantId}  The {nameof Hull}! 
                Essential for deep sea jobs. I'm talking Lower Depths-deep.  
                With this plating, your sub will be able to withstand a lot more pressure.
$EvaluateItemPurchase()

#ItemHandler(Icebreaker)
{@$MerchantId}  That's the {nameof Icebreaker}!
                It shatters ice by emitting a strong localized electrical field.
                We don't get much ice around here... I still keep it around, though. Ya never know.  
$EvaluateItemPurchase()

// Experimentation

#ItemHandler(StressTank)
{@$MerchantId}  Ooh, the {nameof StressTank}! 
                {profBayou} says this one is super important.
                Use it to measure the stress ranges for different critters and figure out how to keep them happy and healthy. 
$EvaluateItemPurchase()

#ItemHandler(MeasurementTank)
{@$MerchantId}  The {nameof MeasurementTank}! This one comes highly recommended.
                Well... at least, {bayouSci} recommended it. He's pretty smart when he's not blowing up comms arrays. 
                Use the {nameof MeasurementTank} to measure rates for different creatures.
                Really handy if you need to find out eating rates, respiration rates, stuff like that. 
$EvaluateItemPurchase()

// Modeling

#ItemHandler(VisualModel)
{@$MerchantId}  The {nameof VisualModel} would be super helpful for your {map-name}Modeling Station{/map-name}!
                Use it to visualize the connections beween different species.
{@player}    Hmm... that definitely sounds useful. 
            I might need to snag this one. 
$EvaluateItemPurchase()

#ItemHandler(PredictionModel)
{@$MerchantId}  The {nameof PredictionModel}! Excellent for seeing the future.
                Ha. Just kidding.
                It {i}does{/i} allow you to make useful predictions for creatures in different ecosystems. 
                Though it couldn't predict our comms explosion, so... not quite foolproof. 
$EvaluateItemPurchase()

#ItemHandler(InterveneModel)
{@$MerchantId}  The {nameof InterveneModel} is essential for your {map-name}Modeling Station{/map-name}!
                Use it to model how different possible interventions might work out.
                If you want to try to help some of the struggling ecosystems out there, I would definitely recommend this one. 
$EvaluateItemPurchase()