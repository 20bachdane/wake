# basePath interior.shop.kelp

#include "Headers/Common.leaf"

#const MerchantId = kelpMechanic
#const UnlockHintNodeId = .unlockHintSomewhere
#const UnlockHintHereNodeId = .unlockHintHere
#const LowExpNodeId = .lowExp
#const FreeItemPromptId = .freeItem
#const CostItemPromptId = .costItem
#const CancelNodeId = .cancel
#const NotEnoughCashNodeId = .notEnoughCash
#const PurchaseNodeId = .purchased

#include "Headers/CommonShop.leaf"

// Intros

#ShopLockedHandler(intro, !JobStartedOrComplete(kelp-welcome), !global:Act1.TalkedToMomMad)
@boostScore 100
$goto act1.momMadEnd

#ShopLockedHandler(b, JobStartedOrComplete(kelp-welcome))
@boostScore -100
{@$MerchantId} Ollie! Welcome back.
               I'm still getting things set up for the day.
               Why don't you check back soon? I'll talk you through all the ship upgrades. 
               And good luck out there, mijita.
{@player}     Thanks, Tío!

#ShopHandler(first)
@boostScore 100
@once
{@$MerchantId}  ¡Hola, mijita!
                What do you think of {nameof @guide}? Sweet A.I., right?
                His enthusiasm for data was Mer's idea... she wanted to make sure he was happy on the job.
{@player}       Wait... you and Mer created {nameof @guide}?
{@$MerchantId}  ¡Claro que sí! Didn't I tell you?
                Anyway, now that you and {nameof @guide} will be traveling outside the Kelp Forest, you'll need some upgrades. 
{@player}   What is all this stuff, Tío?
{@$MerchantId}  My shop has all the tools and upgrades you'll need.
                You're a Level 1 scientist, so you'll need to stick to the basics for now.
                You can find sub upgrades under the Exploration tab...
                And tools for your lab under the Science tab. 
                Want to take a look? 
$set jobs:kelp-mechanic.givenJournal = false
$choice .action.openShop; Sure! 
$choice .action.cancel; No thanks. I'll come back later.  

#ShopHandler(a)
$if jobs:bayou-mechanic.givenArticle, !jobs:kelp-mechanic.givenJournal
    // STORY BEAT E
    {@player}   Hey Tío.... did you know Mer worked on the Challenger Deep probe?
    {@$MerchantId} Where did you hear about that, mijita?
    {@player} On a job. Is it true? 
    {@$MerchantId} Yes. Mer designed the probe.
                   She even created an experimental A.I. that was capable of picking up its transmissions.
                   {@nameof @guide}, I believe she called it.
    {@player}   Wait... Mer created {nameof @guide}??
                Is that why I'm getting all these glitchy messages? 
    {@$MerchantId} It might be best to save this talk for later, Ollie.
                    Your mother probably had a reason for not telling you. 
                   But.... I suppose it couldn't hurt to give you this. Meredith's specs from when she created {nameof @guide}.
                   Now. Por favor, let's stay focused on the job. 
    // He tells you Mer created Victor. Get Mer’s journal page that shows Victor 1.0 version.
    $set jobs:kelp-mechanic.givenJournal = true
$elseif HasJournalEntry("S04"), !jobs:specter6-comms.kelp.discussed
    // STORY BEAT G
    {@player}  Tío, I need to ask you something.
               I've been getting weird communications from Sam. 
               Not messages.... just scrambled data. Sort of like ghosts. 
                They show up in AQOS, but the entries don’t make any sense.
    {@$MerchantId}  Hmm. Meredith mentioned there might be glitches. 
                    She was working on an upgrade, but I'm not sure if she ever finished it. 
                    You could try asking one of her old colleagues. I'm sorry I can't be more help, mijita. 
    $set jobs:specter6-comms.kelp.discussed = true
$elseif jobs:final-final.upgradeReady, !JobStartedOrComplete(final-final)
    // final job unlocked after seeing 8th specter
    {@$MerchantId}  So, mijita. Ready to upgrade {nameof @guide} and rescue {nameof @sam}? Or did you just want to shop for tools?
    $choice .discussUpgrade; Tell me about the upgrade!
    $choice .action.openShop; Shop for tools
    $choice .action.cancel; Actually, never mind. 

$elseif JobInProgress(final-final), JobTaskTop(getUncleHelp)
    // final job, ask uncle for help
    {@$MerchantId}  Welcome back Ollie!
    {@player}       Can you restore power to the ship and save {nameof @guide}?
    {@$MerchantId}  Oh, uh. Well. I may be able to do something about that.
                    Give me a minute...
                    {hide-dialog} {fade-out black, 1, wait} {wait 2}
                    {wait 0.1} {fade-in 1, wait} {wait 1}
                    $set jobs:final-power-disabled = false
    {@$MerchantId}  Power should be restored now. Why don't you head to your ship to see if everything is fixed?
    $set jobs:final-uncleHelped = true
    $set jobs:final-power-disabled = false
    $call CheckJobTasks()
$else
    {@$MerchantId} Welcome back, mijita. Need any upgrades for your ship? 
    $choice .action.openShop; Sure, I'll take a look. Thanks, Tío!
    $choice .action.cancel; Nah. I'm good for now. 
$endif

#ShopHandler(gotFlashlightAssignedHere, world:shop.boughtFlashlightFrom == "kelp", HasUpgrade("Flashlight"))
@once
{@$MerchantId}  Welcome back Ollie! Hey, you got back my {nameof Flashlight}!
                Well, as I promised, it's yours now. You can make better use of it now than I can.
                Now, need any other upgrades for your ship?
$choice .action.openShop; Sure do!
$choice .action.cancel; Not right now.

#ShopHandler(gotFlashlight, world:shop.boughtFlashlightFrom != "kelp", HasUpgrade("Flashlight"))
@once
{@$MerchantId}  Welcome back Ollie! Whoa... is that my {nameof Flashlight}?
$if world:shop.boughtFlashlightFrom == "coral"
    {@player}   Yep! {nameof @coralMechanic} told me where to find it!
    {@kelpMechanic} Of course! She was the last one to have it before you!
$elseif world:shop.boughtFlashlightFrom == "bayou"
    {@player}   Yep! {nameof @bayouMechanic} told me where to find it!
$else
    {@player}   Yep! {nameof @arcticMechanic} told me where to find it!
$endif

{@$MerchantId}  Well, it's {slow}your{/slow} {nameof Flashlight} now.
                While you're here, need any other upgrades?
$choice .action.openShop; Sure do!
$choice .action.cancel; Not right now.

:: action.cancel
@cutscene
{@$MerchantId}  {random Okay, Ollie. Good luck out there!| Well, you know where to find me!}

// Generic

:: unlockHintHere
{@$MerchantId}   {random Oh hey,|You'll be happy to know that|And I can tell you that} this would unlock a {h}Job{/h} right here.

:: unlockHintSomewhere
{@$MerchantId}   {random Whoa,|Hey,|As a bonus,} this would unlock some jobs over at the {nameof $local:hintStation}!

:: lowExp
{@$MerchantId}   Oh, {random hang on|sorry, mijita}... I can't let you have this just yet. You'll need more {exp}experience{/exp} first. 

:: freeItem
{@$MerchantId}   So, want the {nameof $local:itemId}? Won't cost you anything.

:: costItem
{@$MerchantId}   So, want to buy the {nameof $local:itemId}? \
                {random It'll|That'll} be {cash}{$local:cashCost}{/cash}!

:: cancel
{@$MerchantId}   Suit yourself!

:: notEnoughCash
{@$MerchantId}   Not enough cash. Sorry, mijita. 

:: purchased
{@$MerchantId}   {random Good choice!|Good call.|Alright, it's yours!}

:: genericWelcome
{@$MerchantId}  Okay, but don't wait too long on this. Sam needs you.
                What can I get you?

:: discussUpgrade
{@$MerchantId}  I've found the code to upgrade {nameof guide} and unscramble all the glitches!
                Head up to your ship to test it out.

// Idle

#OpenHandler(a)
{@$MerchantId}  What do you think? 

#OpenHandler(b)
{@$MerchantId}  Anything catch your eye?

#CloseHandler(a)
{@$MerchantId}  Thank you!

#CloseHandler(purchased, shop:purchaseCount)
@boostScore 10
{@$MerchantId}  Come back anytime!

#CloseHandler(notEnoughCash, shop:notEnoughCount)
{@$MerchantId}  Come back with some more {pluralnameof Cash} next time.

#CloseHandler(notEnoughExp, shop:needsExpCount)
{@$MerchantId}  Come back when you've got some more {exp}experience{/exp}!

#OpenExplorationHandler(a)
{@$MerchantId}  Interested in any sub upgrades? 

#OpenExplorationHandler(b)
{@$MerchantId}  Any upgrades you want for your sub?

#OpenScienceHandler(a)
{@$MerchantId}  Do you need any new tools for your lab? 

#OpenScienceHandler(b)
{@$MerchantId}  Need any new experimentation tools? 

// Exploration

#ItemHandler(ROVTagger)
{@$MerchantId}  {nameof ROVTagger}!| This should come in handy. 
                The {nameof ROVTagger} will show up at the top of your screen while you're out in your sub.
                When you move close to a species you've scanned, the {nameof ROVTagger} will {h}count{/h} them.
                Count enough of them, and it'll give you a population estimate! 
{@guide}    Wow. That's pretty impressive! 
$set    jobs:common-dive.seen.tagger-intro = true
$EvaluateItemPurchase()

#OverrideItemHandler(FlashlightCoordinates, flashlight.first)
@boostScore 100
@once
{@$MerchantId}  The {nameof Flashlight}!
                The ocean can be dangerous if you can't see what's coming.
                We should |definitely| get this on your sub as soon as we can.
$set local:postPurchaseBranch = "interior.shop.kelp.PostFlashlight"
$EvaluateItemPurchase()

#ItemHandler(FlashlightCoordinates)
{@$MerchantId}  That's the {nameof Flashlight}!
                I'd like to get that on your sub as soon as possible.
$set local:postPurchaseBranch = "interior.shop.kelp.PostFlashlight"
$EvaluateItemPurchase()

:: PostFlashlight
$set    world:flashlightQuest = true
$set    world:shop.boughtFlashlightFrom = "kelp"
{@kelpMechanic} ...wait.{wait 0.5} I| lent that out to {nameof @coralMechanic}.
                And then she| dropped it| somewhere at {nameof FinalStation}.
                ...{wait 0.5}{auto}
                Okay. New plan, mijita. Go retrieve it and you can keep it.

$call UnlockSite(RS-0)
$call UnlockStation(FinalStation)
$call ShowPopup(map.unlock.finalStation.header, map.unlock.finalStation.desc)

#ItemHandler(ProbeHacker)
{@$MerchantId}  The {nameof ProbeHacker}! Your sister helped me develop this one.
{@player}       Wow... for real??
{@$MerchantId}  Claro que sí. You know what a genius she was. 
                The {nameof ProbeHacker} will allow you to read data from any {h}probes{/h} you find.
                Even Challenger Deep... if it wasn't lost at the bottom of the ocean.
$EvaluateItemPurchase()

#ItemHandler(Microscope)
{@$MerchantId}  That's the {nameof Microscope}!
                There are creatures out there that you can't see with the naked eye.
                Sometimes they look like clouds or mist. With the {nameof Microscope}, you can see them more closely.
$EvaluateItemPurchase()

// Navigation

#ItemHandler(PropGuard)
{@$MerchantId}  The {nameof PropGuard}?| Not a bad idea.
                Your propeller can get tangled up in areas of thick vegetation.  
                The {nameof PropGuard} will help you pass through safely.
{@player}      Nice. Sounds perfect for exploring!
{@$MerchantId}  Just don't get complacent, mijita.
                Even with the {nameof PropGuard}, it's easy to get tangled up out there. 
$EvaluateItemPurchase()

#ItemHandler(Engine)
{@$MerchantId}  That's the {nameof Engine}!
                It boosts your sub's engine, so you can move against strong currents.
{@player}       Ooh. That sounds awesome!
{@$MerchantId}  The {nameof Engine} is also harder to control, so be careful with it...
                Your mother would kill me if you crashed another sub. 
                Uh, no offense, mijita. 
$EvaluateItemPurchase()

#ItemHandler(Hull)
{@$MerchantId}   The {nameof Hull} is crucial if you want to go deeper.
                 The depths of the ocean would crush your little sub like a tin can. 
{@player}       Well, that's comforting. 
{@$MerchantId}  Don't worry, Mijita. 
                With this plating, you'll be able to withstand much more pressure...
                Though its not guaranteed to hold up against sea monsters. 
$EvaluateItemPurchase()

#ItemHandler(Icebreaker)
{@$MerchantId}  Whoa, careful, Mijita! That's the {nameof Icebreaker}!
                It shatters ice by emitting a powerful, localized electrical field.
{@player}      Oh. So, um... I probably shouldn't play with that. 
{@$MerchantId}  Nope. But it's incredibly useful if you find yourself in the Arctic. 
$EvaluateItemPurchase()

// Experimentation

#ItemHandler(StressTank)
{@$MerchantId}   The {nameof StressTank} can be used to measure the stress ranges of different creatures.
$EvaluateItemPurchase()

#ItemHandler(MeasurementTank)
{@$MerchantId}  The {nameof MeasurementTank} can be used to measure various rates for different creatures.
                Really handy if you need some eating rates, or reproduction, or respiration.
$EvaluateItemPurchase()

// Modeling

#ItemHandler(VisualModel)
{@$MerchantId}  The {nameof VisualModel} tool can be used at your {map-name}Modeling Station{/map-name}.
                Use it to visualize the different interactions between species.
{@player}    Hmm. This could definitely be useful.  
$EvaluateItemPurchase()

#ItemHandler(PredictionModel)
{@$MerchantId}  The {nameof PredictionModel} can be used at the {map-name}Modeling Station{/map-name}.
            Use it to make predictions about creatures in different ecosystems.
$EvaluateItemPurchase()

#ItemHandler(InterveneModel)
{@$MerchantId}  The {nameof InterveneModel} can be used at the {map-name}Modeling Station{/map-name}.
           Use it to model the outcomes of potential interventions for different ecosystems.
$EvaluateItemPurchase()