# basePath interior.shop.kelp

#include "Headers/Common.leaf"

#const MerchantId = kelpMechanic
#const UnlockHintNodeId = .unlockHintSomewhere
#const UnlockHintHereNodeId = .unlockHintHere
#const LowExpNodeId = .lowExp
#const FreeItemPromptId = .freeItem
#const CostItemPromptId = .costItem
#const CancelNodeId = .cancel
#const NotEnoughCashNodeId = .notEnoughCash
#const PurchaseNodeId = .purchased

#include "Headers/CommonShop.leaf"

// Intros

#ShopLockedHandler(intro, !JobStartedOrComplete(kelp-welcome))
@boostScore 100
$goto act1.momMadEnd

#ShopLockedHandler(b, JobStartedOrComplete(kelp-welcome))
@boostScore -100
{@$MerchantId} Ollie! Welcome back.
               I'm still getting things set up for the day.
               Why don't you check back soon? I'll talk you through all the ship upgrades. 
               And good luck out there, mijita.
{@player}     Thanks, Tío!

#ShopHandler(first)
@boostScore 100
@once
{@$MerchantId}  Well, well. My favorite junior scientist!
                How are things on the job?
{@player}       Great. I think Mom's gonna let me travel to another ecosystem!
{@$MerchantId}  Well, then, we better make sure you're prepared. 
                Want to look at some ship upgrades?
$choice .action.openShop; Sure, I'll take a look! 
$choice .action.cancel; No thanks, Tío. I'll come back later.  

#ShopHandler(a)
{@$MerchantId} Welcome back, mijita. Need any upgrades for your ship? 
$choice .action.openShop; Sure, I'll take a look. Thanks, Tío!
$choice .action.cancel; Nah. I'm good for now. 

:: action.cancel
@cutscene
{@$MerchantId}  Okay, Ollie. Good luck out there!| Well, you know where to find me!

// Generic

:: unlockHintHere
{@$MerchantId}   {random Oh hey,|You'll be happy to know that|And I can tell you that} this would unlock a {h}Job{/h} right here.

:: unlockHintSomewhere
{@$MerchantId}   {random Whoa,|Hey,|As a bonus,} this would unlock some jobs over at the {nameof $local:hintStation}!

:: lowExp
{@$MerchantId}   Oh, {random hang on|sorry, mijita}... I can't let you have this just yet. You'll need {exp}{$local:needExp}{/exp} more experience points first. 

:: freeItem
{@$MerchantId}   So, want the {nameof $local:itemId}? Won't cost you anything.

:: costItem
{@$MerchantId}   So, want to buy the {nameof $local:itemId}? \
                {random It'll|That'll} be {cash}{$local:cashCost}{/cash}!

:: cancel
{@$MerchantId}   Suit yourself!

:: notEnoughCash
{@$MerchantId}   Not enough cash. Sorry, mijita. 

:: purchased
{@$MerchantId}   {random Good choice!|Good call.|Alright, it's yours!}

// Idle

#OpenHandler(a)
{@$MerchantId}  What do you think? 

#OpenHandler(b)
{@$MerchantId}  Anything catch your eye?

#CloseHandler(a)
{@$MerchantId}  Thank ya!

#CloseHandler(purchased, shop:purchaseCount)
@boostScore 10
{@$MerchantId}  Come back anytime!

#CloseHandler(notEnoughCash, shop:notEnoughCount)
{@$MerchantId}  Come back with some more {pluralnameof Cash} next time!

#CloseHandler(notEnoughExp, shop:needsExpCount)
{@$MerchantId}  Come back when you've got more {pluralnameof Exp}!

#OpenExplorationHandler(a)
{@$MerchantId}  Interested in any exploration tools?

#OpenExplorationHandler(b)
{@$MerchantId}  Any upgrades you want for your sub?

#OpenScienceHandler(a)
{@$MerchantId}  Any science-type things you want?

#OpenScienceHandler(b)
{@$MerchantId}  Need anything for your scientific pursuits?

// Exploration

#ItemHandler(ROVTagger)
{@$MerchantId}  {nameof ROVTagger}!| This should come in handy. 
                The {nameof ROVTagger} will show up at the top of your screen while you're out in your sub.
                When you move close to a species you've scanned, the {nameof ROVTagger} will {h}count{/h} them.
                Count enough of them, and it'll give you a population estimate! 
{@guide}    Wow. That's pretty impressive! 
$set    jobs:common-dive.seen.tagger-intro = true
$EvaluateItemPurchase()

#OverrideItemHandler(Flashlight, flashlight.first)
@boostScore 100
@once
{@$MerchantId}  The {nameof Flashlight}!
                The ocean can be dangerous if you can't see what's coming.
                We should |definitely| get this on your sub as soon as we can.
$EvaluateItemPurchase()

#ItemHandler(Flashlight)
{@$MerchantId}  That's the {nameof Flashlight}!
                I'd like to get that on your sub as soon as possible.
$EvaluateItemPurchase()

#ItemHandler(ProbeHacker)
{@$MerchantId}  The {nameof ProbeHacker}! Your sister helped me develop this one.
{@player}       Wow... really??
{@$MerchantId}  Claro que sí. You know what a genius she was. 
                The {nameof ProbeHacker} will allow you to read data from any {h}probes{/h} you find.
                Even Challenger Deep... if it wasn't lost at the bottom of the ocean.
$EvaluateItemPurchase()

#ItemHandler(Microscope)
{@$MerchantId}  That's the {nameof Microscope}!
                There are creatures out there that you can't see with the naked eye.
                Sometimes they look like clouds or mist. With the {nameof Microscope}, you can see them more closely.
$EvaluateItemPurchase()

// Navigation

#ItemHandler(PropGuard)
{@$MerchantId}  The {nameof PropGuard}?| Not a bad idea.
                Your propeller can get tangled up in areas of thick vegetation.  
                The {nameof PropGuard} will help you pass through safely.
{@player}      Nice. Sounds perfect for exploring!
{@$MerchantId}  Just don't get complacent, mijita.
                Even with the {nameof PropGuard}, it's easy to get tangled up out there. 
$EvaluateItemPurchase()

#ItemHandler(Engine)
{@$MerchantId}  That's the {nameof Engine}!
                It boosts your sub's engine, so you can move against strong currents.
{@player}       Ooh. That sounds awesome!
{@$MerchantId}  The {nameof Engine} is also harder to control, so be careful with it...
                Your mother would kill me if you crashed another sub. 
                Uh, no offense, mijita. 
$EvaluateItemPurchase()

#ItemHandler(Hull)
{@$MerchantId}   The {nameof Hull} is crucial if you want to go deeper.
                 The depths of the ocean would crush your little sub like a tin can. 
{@player}       Well, that's comforting. 
{@$MerchantId}  Don't worry, Mijita. 
                With this plating, you'll be able to withstand much more pressure...
                Though its not guaranteed to hold up against sea monsters. 
$EvaluateItemPurchase()

#ItemHandler(Icebreaker)
{@$MerchantId}  Whoa, careful, Mijita! That's the {nameof Icebreaker}!
                It shatters ice by emitting a powerful, localized electrical field.
{@player}      Oh. So, um... I probably shouldn't play with that. 
{@$MerchantId}  Nope. But it's incredibly useful if you find yourself in the Arctic. 
$EvaluateItemPurchase()

// Experimentation

#ItemHandler(StressTank)
{@$MerchantId}   The {nameof StressTank} can be used to measure the stress ranges of different creatures.
$EvaluateItemPurchase()

#ItemHandler(MeasurementTank)
{@$MerchantId}  The {nameof MeasurementTank} can be used to measure various rates for different creatures.
                Really handy if you need some eating rates, or reproduction, or respiration.
$EvaluateItemPurchase()

// Modeling

#ItemHandler(VisualModel)
{@$MerchantId}  The {nameof VisualModel} can be used at your {map-name}Modeling Station{/map-name}.
                Use it to create visualizations of the different interactions between species.
{@player}    Nice. This could definitely be useful.  
$EvaluateItemPurchase()

#ItemHandler(PredictionModel)
{@$MerchantId}  The {nameof PredictionModel} can be used at the {map-name}Modeling Station{/map-name}.
            Use it to make predictions about creatures in different ecosystems.
$EvaluateItemPurchase()

#ItemHandler(InterveneModel)
{@$MerchantId}  The {nameof InterveneModel} can be used at the {map-name}Modeling Station{/map-name}.
           Use it to model the outcomes of potential interventions for different ecosystems.
$EvaluateItemPurchase()