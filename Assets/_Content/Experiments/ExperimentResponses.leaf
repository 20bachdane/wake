#basePath   partner.talk.experiment

:: behavior.newObservation.1
@trigger    NewBehaviorObserved
@who        kevin
@repeat 1
@chatter
$set temp:newObservationTimer = 0
{@kevin}    Nice one! 

:: behavior.newObservation.2
@trigger    NewBehaviorObserved
@who        kevin
@repeat 1
@chatter
$set temp:newObservationTimer = 0
{@kevin}    Good catch.

:: behavior.idle.nothingLeft.1
@trigger    ExperimentIdle
@when       newFactsLeft == 0
@who        kevin
@repeat 1
@chatter
{@kevin}    I think we might be done here?

:: behavior.idle.nothingLeft.2
@trigger    ExperimentIdle
@when       newFactsLeft == 0
@who        kevin
@repeat 1
@chatter
{@kevin}    I don't think there's anything left for us to observe.

:: behavior.idle.nothingLeft.missedSome.1
@trigger    ExperimentIdle
@when       newFactsLeft == 0, missedFacts > 0
@who        kevin
@repeat 1
@chatter
{@kevin}    Well, we might have missed something... we should finish up and restart this experiment.

:: behavior.idle.nothingLeft.missedSome.2
@trigger    ExperimentIdle
@when       newFactsLeft == 0, missedFacts > 0
@who        kevin
@repeat 1
@chatter
{@kevin}    I feel like we missed something... we should finish this up and restart the experiment.

:: behavior.idle.somethingLeft.noCircles.1
@trigger    ExperimentIdle
@when       newFactsLeft > 0, temp:behaviorCirclesSeen == 0
@who        kevin
@repeat 1
@chatter
{@kevin}    Let's be patient, I think there might be something here to observe.

:: behavior.idle.somethingLeft.noCircles.2
@trigger    ExperimentIdle
@when       newFactsLeft > 0
@who        kevin
@repeat 1
@chatter
{@kevin}    I'm pretty sure there's something new here to observe...

:: behavior.idle.somethingLeft.1
@trigger    ExperimentIdle
@when       newFactsLeft > 0
@who        kevin
@repeat 1
@chatter
{@kevin}    Let's wait for another opportunity to observe a behavior.

:: behavior.idle.somethingLeft.2
@trigger    ExperimentIdle
@when       newFactsLeft > 0
@who        kevin
@repeat 1
@chatter
{@kevin}    We've already seen something - maybe there's something else to observe?

// intro scripts

:: generic.observation-tank.intro
@trigger	ExperimentTankViewed
@boostScore 1052 // arbitraryily high number
@when		tankType == "Observation"
@once
@cutscene
{@kevin}	This is the tutorial for the {nameof ObservationTank}.

:: generic.stress-tank.intro
@trigger	ExperimentTankViewed
@boostScore 1051 // arbitraryily high number
@when		tankType == "Stress"
@once
@cutscene
{@kevin}	This is the tutorial for the {nameof StressTank}.

:: generic.water-chemistry.intro
@trigger	ExperimentStarted
@boostScore 1049 // arbitraryily high number
@when		tankType == "Stress", HasUpgrade(WaterChemistry)
@once
@cutscene
{@kevin}	This is the tutorial for the  {nameof WaterChemistry}.

:: generic.measurement-tank.intro
@trigger	ExperimentTankViewed
@boostScore 1050 // arbitraryily high number
@when		tankType == "Measurement"
@once
@cutscene
{@kevin}	This is the tutorial for the {nameof MeasurementTank}.

:: generic.stabilizer.intro
@trigger	ExperimentScreenViewed
@boostScore 1049 // arbitraryily high number
@when		screenId == "measurement.features", HasUpgrade(MeasurementTankStabilizerToggle)
@once
@cutscene
{@kevin}	This is the tutorial for the  {nameof MeasurementTankStabilizerToggle}.

:: generic.auto-feeder.intro
@trigger	ExperimentScreenViewed
@boostScore 1048 // arbitraryily high number
@when		screenId == "measurement.features", HasUpgrade(AutoFeeder)
@once
@cutscene
{@kevin}	This is the tutorial for the  {nameof AutoFeeder}.