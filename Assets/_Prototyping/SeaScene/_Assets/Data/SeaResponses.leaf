#basePath   partner.help.testScene

// just some background

:: whyWereYouHere
@trigger    RequestPartnerHelp
@once
@cutscene
{@player}   So why were you out here?
{@kevin}    I wanted to look around for something.
            But then your boat passed overhead and...
            Well, now we're helping each other out.

:: whatWereYouLookingAroundFor
@trigger    RequestPartnerHelp
@when       seen:partner.help.testScene.whyWereYouHere, !kevin:testScene.jellyblob.lore.discomfort
@once
@cutscene
{@player}   What were you looking for?
{@kevin}    To be honest, I'm not entirely sure.
            I heard... {speed 0.5}something{/speed} out here.
{@player}   Huh. What'd you hear?
{@kevin}    I... no, no it couldn't have been.
{@player}   What?
{@kevin}    Nothing.
{@player}   Oh, you want to be vague now?
{@kevin}    Yeah.
{@player}   ...alright then. Don't tell me.

:: whatWereYouLookingAroundFor.Real
@trigger    RequestPartnerHelp
@when       seen:partner.help.testScene.whyWereYouHere, !seen:partner.help.testScene.whatWereYouLookingFor, kevin:testScene.jellyblob.lore.discomfort, seen:partner.help.testScene.lore.jellyblob.1.scanned.final
@once
@cutscene
{@player}   Was that... module... thing... what you were looking for?
{@kevin}    Yeah.
            I think I heard it from a distance.
            It was really quiet. But I thought...
            I thought it might be another one of us.
{@player}   Oh.
            ...I'm sorry it wasn't.
            We'll keep looking, don't worry.
{@kevin}    ...

// ridge fish

:: backgroundRidgeFish.notScanned
@trigger    RequestPartnerHelp
@when       temp:camera.region == "FishRidge", !scanned:testScene.background.ridgeFish
@repeat     3
@cutscene
{@kevin}    Hmm, that cluster of things in the distance...

:: backgroundRidgeFish.scanned.1
@trigger    RequestPartnerHelp
@when       temp:camera.region == "FishRidge", seen:partner.help.testScene.backgroundRidgeFish.notScanned, scanned:testScene.background.ridgeFish
@once       profile
@cutscene
{@kevin}    Oh, so it was just fish. Of course.
            Should have realized it before the scanner.

:: backgroundRidgeFish.scanned.2
@trigger    RequestPartnerHelp
@when       temp:camera.region == "FishRidge", !seen:partner.help.testScene.backgroundRidgeFish.notScanned, scanned:testScene.background.ridgeFish
@once       profile
@cutscene
{@kevin}    Huh. So I guess that's a cluster of fish.
            Could have told you that without the scanner.

// background machine

// :: backgroundMachine.notScanned
// @trigger    RequestPartnerHelp
// @when       !scanned:testScene.background.machine
// @repeat     3
// @cutscene
// {@kevin}    What's that big thing in the distance there?
//             It looks sort of familiar...
// 
// :: backgroundMachine.scanned
// @trigger    RequestPartnerHelp
// @when       scanned:testScene.background.machine
// @once       profile
// @cutscene
// {@kevin}    That's a pretty big machine.
//             Almost looks like... wait, no{wait 0.5}, probably not.
// {@player}   Looks like what?
// {@kevin}    Eh, forget it. Not worth it now.

// the lore

:: lore.jellyblob.1.notScanned.1
@trigger    RequestPartnerHelp
@when       temp:camera.region = "JellyLore", !scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort, temp:kevin.testScene.loreDiscomfort > 0
@repeat     2
@chatter
{set temp:kevin.testScene.loreDiscomfort + 1}
{@kevin}    Can we just go? Please?

:: lore.jellyblob.1.notScanned.2
@trigger    RequestPartnerHelp
@when       temp:camera.region = "JellyLore", !scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort
@repeat     2
@chatter
{set temp:kevin.testScene.loreDiscomfort + 1}
{@kevin}    I really don't want to stick around here.

:: lore.jellyblob.1.notScanned.3
@trigger    RequestPartnerHelp
@when       temp:camera.region = "JellyLore", !scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort
@repeat     2
@chatter
{set temp:kevin.testScene.loreDiscomfort + 1}
{@kevin}    I'm not telling you any more about it right now.

:: lore.jellyblob.1.notScanned.irritated
@trigger    RequestPartnerHelp
@when       temp:camera.region = "JellyLore", !scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort, temp:kevin.testScene.loreDiscomfort > 3
@chatter
{set temp:kevin.testScene.loreDiscomfort + 1}
{@kevin}    Please just stop pestering me.
            I don't want to talk about it.

:: lore.jellyblob.1.scanned.1
@trigger    RequestPartnerHelp
@when       temp:camera.region = "JellyLore", scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort, temp:kevin.testScene.loreProbing == 0
@cutscene
{set temp:kevin.testScene.loreProbing + 1}
{@kevin}    What, did you scan it or something?
{@player}   Yeah. It says-{wait 0.2}{auto}
{@kevin}    I {wait 0.2}{speed 0.5}know{/speed}{wait 0.2} what it says.
            Please don't ask me to explain.

:: lore.jellyblob.1.scanned.2
@trigger    RequestPartnerHelp
@when       temp:camera.region == "JellyLore", scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort, temp:kevin.testScene.loreProbing == 1
@cutscene
{set temp:kevin.testScene.loreProbing + 1}
{@kevin}    Could you not.
{@player}   ...I'm sorry. It just seemed weird.
            The writing was all stilted.
{@kevin}    Yeah. That's how it looks to folks like you, right?

:: lore.jellyblob.1.scanned.final
@trigger    RequestPartnerHelp
@when       temp:camera.region == "JellyLore", scanned:testScene.lore.jellyblob.1, kevin:testScene.jellyblob.lore.discomfort, temp:kevin.testScene.loreProbing == 2
@cutscene
{set temp:kevin.testScene.loreProbing + 1}
{@kevin}    Are you {wait 0.1}that{wait 0.1} dense? Really?
            Fine.
{@player}   ...And then the developer didn't write the big reveal. Sorry :P

// boat

:: boat.notFinished
@trigger    RequestPartnerHelp
@when       temp:camera.region == "BoatUnderside"
@cutscene
@boostScore 10
$if scanned:testScene.species.urchin, scanned:testScene.species.kelp, scanned:testScene.species.otter
    $goto demo.observationExit
$else
    $goto .undersideNotReady
$endif

:: undersideNotReady
@cutscene
{@kevin}    Wait, let's not enter the boat yet.
$if scanned:testScene.species.urchin, scanned:testScene.species.kelp
    {@player}   What are we missing here?
                We already found the urchins and the kelp...
    {@kevin}    Maybe there's something else here too?
$elseif scanned:testScene.species.otter
    {@player}   I think we found the other factor that Karl's report skipped over.
    {@kevin}    Should we just check the other creatures to make sure we've got their scans too?
$else
    {@player}   What could we be missing?
    {@kevin}    Let's have a look around.
$endif